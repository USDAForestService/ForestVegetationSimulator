      SUBROUTINE CUTSTK
      IMPLICIT NONE
C----------
C CR $Id$
C----------
C  THIS SUBROUTINE CONTAINS ENTRY POINTS FOR CALCULATING STOCKING
C  LEVELS FOR VARIOUS THINNING OPTIONS.
C----------
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
      INCLUDE 'PLOT.F77'
C
C
COMMONS
C----------
      INTEGER I,IC,IGRP,IULIM,IG,JPNUM,JSPCUT,JTYP
      REAL FSTOCK,SLP,TMPMAX,TEMP,HU,HL,DU,DL,CSTOCK,D,H,TPA
      LOGICAL LINCL
C----------
C  ENTRY AUTSTK CALCULATES NORMAL STOCKING FOR AUTOMATIC THINS.
C
C  USES EDMINSTERS SDI MAXIMUMS. IF USER SPECIFIED MAX
C  IS PRESENT USE IT (1ST ONE IN SDIDEF ARRAY).  LIMIT FULSTK CALC
C  TO QMD GE 2.0 INCHES FOR REASONABLE MAXIMUMS (APPROX 6000 TPA).
C-----------
      ENTRY AUTSTK (FSTOCK)
C----------
C  SET EXPONENT BY MODEL TYPE.
C----------
      SLP = 1.70008
      IF(IMODTY.EQ.2 .OR. IMODTY.EQ.3)THEN
        SLP = 1.65992
      ELSEIF(IMODTY.EQ.4)THEN
        SLP = 1.66143
      ELSEIF(IMODTY.EQ.5)THEN
        SLP = 1.68265
      ENDIF
C----------
C  SET SDI MAXIMUM BY USER ENTERED SDI, OR MODEL TYPE DEFAULT
C----------
      DO 210 I=1,MAXSP
        IF(SDIDEF(I) .EQ. 0.0) GO TO 210
        TMPMAX = SDIDEF(I)
        GO TO 220
  210 CONTINUE
      TMPMAX = 473.
      IF(IMODTY.EQ.2 .OR. IMODTY.EQ.3)THEN
        TMPMAX = 408.
      ELSEIF(IMODTY.EQ.4)THEN
        TMPMAX = 625.
      ELSEIF(IMODTY.EQ.5)THEN
        TMPMAX = 573.
      ENDIF
  220 CONTINUE
C----------
C  CALCULATE FULL STOCKING
C----------
      TEMP = 10.0 ** (-SLP)
C
      FSTOCK= 1./((TEMP/TMPMAX) * 2.0**SLP)
      IF(RMSQD.GT.2.0)
     &  FSTOCK= 1./((TEMP/TMPMAX) *  RMSQD**SLP)
      RETURN
C
C-----------
C  ENTRY CLSSTK COMPUTES BA OR TPA STOCKING IN A SPECIFIED
C  DBH/HT/SPECIES CLASS.
C
C  CSTOCK = CLASS STOCKING
C  JTYP   = 1 IF STOCKING IS IN TPA,  2 IF STOCKING IS IN BA
C  JSPCUT = SPECIES WHICH WILL BE CUT
C  LINCL  = LOGICAL VARIABLE USED TO INCLUDE SPECIES OR NOT.
C  DL,DU  = LOWER AND UPPER DIAMETER LIMITS RESPECTIVELY (GE,LT)
C  HL,HU  = LOWER AND UPPER HEIGHT LIMITS RESPECTIVELY (GE,LT)
C  JPNUM = POINT NUMBER (IN FVS SEQUENCE FORMAT), 0 = ALL POINTS
C----------
      ENTRY CLSSTK (CSTOCK,JTYP,JSPCUT,DL,DU,HL,HU,JPNUM)
      CSTOCK=0.0
      DO 100 IC=1,ITRN
      IF(JPNUM.GT.0 .AND. ITRE(IC).NE.JPNUM)GO TO 100
C
      LINCL = .FALSE.
      IF(JSPCUT.EQ.0 .OR. JSPCUT.EQ.ISP(IC))THEN
        LINCL = .TRUE.
      ELSEIF(JSPCUT.LT.0)THEN
        IGRP = -JSPCUT
        IULIM = ISPGRP(IGRP,1)+1
        DO 60 IG=2,IULIM
        IF(ISP(IC) .EQ. ISPGRP(IGRP,IG))THEN
          LINCL = .TRUE.
          GO TO 61
        ENDIF
   60   CONTINUE
      ENDIF
   61 CONTINUE
C
      IF (LINCL) THEN
        D=DBH(IC)
        H=HT(IC)
        TPA=WK4(IC)
        IF(JPNUM.GT.0)TPA=TPA*(PI-FLOAT(NONSTK))
        IF(D.LT.DL .OR. D.GE.DU) GO TO 100
        IF(H.LT.HL .OR. H.GE.HU) GO TO 100
        IF(JTYP.EQ.1) THEN
          CSTOCK=CSTOCK + TPA
        ELSE
          CSTOCK=CSTOCK + TPA*(D*D*0.005454154)
        ENDIF
      ENDIF
  100 CONTINUE
      RETURN
C
      END
