      SUBROUTINE FMSVOUT(IYEAR,FLMHTIN,IFTYP)
      IMPLICIT NONE
C----------
C FIRE-BASE $Id$
C----------
C
C     STAND VISUALIZATION GENERATION
C     N.L.CROOKSTON -- RMRS MOSCOW -- JANUARY 2000
C     A.H.DALLMANN  -- RMRS MOSCOW -- JANUARY 2000
C     D. ROBINSON   -- ESSA        -- MAY 2005
C
C     INPUT:
C     IYEAR   = THE YEAR PART OF THE TITLE
C     FLMHTIN = THE HEIGHT OF THE FLAMES TO DRAW, IN FEET.
C     IFTYP   = FIRE TYPE.  ACTIVE, PASSIVE OR SURFACE.
C
C     CALLS SVOUT MULTIPLE TIMES TO DISPLAY MULTIPLE, PROGRESSIVE PICTURES
C     OF THE FIRE BURNING THROUGH THE STAND.
C
COMMONS

      INCLUDE 'PRGPRM.F77'

      INCLUDE 'FMPARM.F77'

      INCLUDE 'CONTRL.F77'

      INCLUDE 'ARRAYS.F77'

      INCLUDE 'FMCOM.F77'

      INCLUDE 'FMFCOM.F77'

      INCLUDE 'SVDATA.F77'

      INCLUDE 'SVDEAD.F77'

      INCLUDE 'FMSVCM.F77'

      INCLUDE 'METRIC.F77'

COMMONS

      EXTERNAL SVRANN

C     THE NEXT SET OF LOCAL VARIABLES ARE USED FOR CALCULATING HEIGHT AND
C     VOLUME SETS FOR SNAGS TO BE REDUCED FROM THE COURSE WOODY DEBRIS FIELDS.
C     VOL - A VECTOR RECORDING THE DIFFERENT VOLUMES AT THE VARIOUS HEIGHTS,
C     FROM THE TOTAL LENGTH OF THE TREE THROUGH THE LENGTH OF TREE
C     WITH 3 INCH DIAMETER AND LESS.
C     VOL(1) - VOLUME FROM GREATHER THAN 12 INCH DIAMETER
C     VOL(2) - VOLUME FROM 6 TO 12 INCH DIAMETER
C     VOL(3) - VOLUME FROM 3 TO 6 INCH DIAMETER
C     VOL(4) - VOLUME FROM 0 TO 3 INCH DIAMETER
C     REMVOL - THE REMAINING VOLUME.  THIS VALUE IS SET WHEN A TREE IS SMALLER
C     THAN 12 INCH DIAMETER.  BASICALLY, IT POINTS TO THE LAST TREE
C     CATEGORY THAT IT FITS INTO.  FOR INSTANCE, IF THE DBH IS 11.5
C     INCHES, THEN THE REMVOL WILL BE 2.

      REAL VOL(4)
      LOGICAL DEBUG
      CHARACTER*40 TITLE
      INTEGER IFTYP,IYEAR,I,IFMSVPX,II,ISTLNB,MEDIAN
      REAL    FLMHTIN,TEMPIOBJ,TEMPIS,HT12,HT6,HT3,XYMAX,XJUMP,
     &        BACHLO,XSD

C     WRITE OUT DEBUG FUEL LOADS IF APPLICABLE.

      CALL DBCHK (DEBUG,'FMSVOUT',7,ICYC)
      IF (DEBUG) WRITE(JOSTND,'('' IN FMSVOUT,NFMSVPX='',I2,
     > '' IYEAR,FLAMEHT,IFTYP='',I5,F10.2,I5)')
     > NFMSVPX,IYEAR,FLAMEHT,IFTYP
      IF (DEBUG) WRITE(JOSTND,5) 'Pre',TCWD,TCWD2
    5 FORMAT (1X,A,'-Snag-Removal Fuel Loads:  Litter   Duff  ',
     >  '  0-3    3-6    6-12     >12  '/
     >  5X,'Before Fire:',12X,6(F6.2,2X)/
     >  5X,'After Fire:',12X,6(F6.2,2X))

C     SET THE FIRE TYPE AND FLAME HT IN THE LOCALLY USED COMMON AREA

      IFMTYP=IFTYP
      FLAMEHT=FLMHTIN

C     IF WE ARE NOT USING SV ROUTINES, OR NO IMAGES ARE DESIRED,
C     THEN EXIT FMSVOUT AT THIS POINT.

      IF (JSVOUT.EQ.0 .OR. NFMSVPX.EQ.0) RETURN

C     SWAP THE IOBJTP AND IOBJTPTMP, AND THE IS2F AND IS2FTMP

      DO I=1,NSVOBJ
        TEMPIOBJ = REAL(IOBJTPTMP(I))
        IOBJTPTMP(I) = IOBJTP(I)
        IOBJTP(I) = INT(TEMPIOBJ)

        TEMPIS = REAL(IS2FTMP(I))
        IS2FTMP(I) = IS2F(I)
        IS2F(I) = INT(TEMPIS)

C        WHILE WE ARE IN THIS LOOP, GO AHEAD AND MODIFY THE CURRENT
C        WOODY DEBRIS VALUES TO NOT INCLUDE SNAGS THAT WE ARE DRAWING.

c temp: make sure this code is skiped:
        if (i.lt.0) then
c**       IF ( IOBJTP(I).EQ.2 .AND. FALLDIR(IS2F(I)).NE.-1 ) THEN

C         THIS IS A SIGNIFICANT FALLEN SNAG.  CACULATE THE VOLUMES
C         FOR EACH OF THE DEBRIS CATEGORIES AND SUBTRACT FROM PRE-FIRE
C         TCWD VECTOR.

C         CALCULATE THE TOTAL SNAG VOLUME.

          CALL FMSVL2(ISNSP(IS2F(I)),ODIA(IS2F(I)),
     >      OLEN(IS2F(I)),OLEN(IS2F(I)),VOL(1),.FALSE.,.FALSE.,JOSTND)

C         CALCULATE THE VOLUME UP TO 12 INCH DIAMETER.

          HT12 = OLEN(IS2F(I)) - (( 12.0 * (OLEN(IS2F(I))*12.-36.)/
     >      ODIA(IS2F(I)))/12.)
          CALL FMSVL2(ISNSP(IS2F(I)),ODIA(IS2F(I)),
     >      OLEN(IS2F(I)), HT12, VOL(2),.FALSE.,.FALSE.,JOSTND)
          HT6 = OLEN(IS2F(I)) - ( (6.0 * (OLEN(IS2F(I))*12.-36.) /
     >      ODIA(IS2F(I)))/12.)
          CALL FMSVL2(ISNSP(IS2F(I)),ODIA(IS2F(I)),
     >      OLEN(IS2F(I)), HT6, VOL(3),.FALSE.,.FALSE.,JOSTND)
          HT3 = OLEN(IS2F(I)) - ( (3.0 * (OLEN(IS2F(I))*12.-36.)/
     >      ODIA(IS2F(I)))/12.)
          CALL FMSVL2(ISNSP(IS2F(I)),ODIA(IS2F(I)),
     >      OLEN(IS2F(I)), HT3, VOL(4),.FALSE.,.FALSE.,JOSTND)

          IF ( HT3.GE.OLEN(IS2F(I)) .OR. HT3.LT.0. ) THEN

C           THIS SNAG ISN'T EVEN 3 INCHES IN DIAMETER AT ANY POINT.
C           GO AHEAD AND SET THE VOL(4) TO BE VOL(1) WHICH IS CURRENTLY
C           THE ENTIRE VOLUME OF THE SNAG.  THEN CLEAR ALL OF THE OTHERS.

            VOL(4) = VOL(1)
            VOL(1) = 0.
            VOL(2) = 0.
            VOL(3) = 0.

          ELSE IF ( HT6.GE.OLEN(IS2F(I)) .OR. HT6.LT.0. ) THEN

C           THIS SNAG IS AT LEAST 3 INCHES AT SOME POINT, BUT NOT MORE
C           THAN 6 INCHES AT ANY POINT.
C           SET VOL(3) TO THE ENTIRE VOLUME OF THE SNAG (VOL(1)) AND THEN
C           REDUCE THAT VALUE BY VOL(4).  VOL(4) SHOULD BE ACCURATE.

            VOL(4) = VOL(1) - VOL(4)
            VOL(3) = VOL(1) - VOL(4)
            VOL(1) = 0.
            VOL(2) = 0.

C           THIS LOOKS LIKE WE ARE SETTING VOL(3) AND VOL(4) TO THE
C           SAME VALUES, BUT VOL(4) IS ACTUALLY BEING CHANGED IN THE
C           FIRST CALCULATION THERE.

          ELSE IF ( HT12.GE.OLEN(IS2F(I)) .OR. HT12.LT.0. ) THEN

C           THIS SNAG IS AT LEAST 6 INCHES AT SOME POINT, BUT NOT MORE
C           THAN 12 INCHES AT ANY POINT.  REMOVE VOL(4) FROM VOL(3),
C           VOL(4) AND VOL(3) FROM VOL(2) AND ALL OF THEM FROM VOL(1)
C           THEREFORE, REMOVE VOL(4) FROM VOL(3) AND THEN THEY ARE BOTH
C           ACCURATE.

            VOL(4) = VOL(1) - VOL(4)
            VOL(3) = VOL(1) - VOL(3) - VOL(4)
            VOL(2) = VOL(1) - VOL(3) - VOL(4)
            VOL(1) = 0.

          ELSE

C           THIS SNAG IS BIGGER THAN TWELVE INCHES AT SOME POINT.
C           THIS MEANS THAT VOL(1) REPRESENTS THE VOLUME OF STUFF
C           THAT IS GREATER THAN 12 INCHES.

            VOL(4) = VOL(1) - VOL(4)
            VOL(3) = VOL(1) - VOL(3) - VOL(4)
            VOL(2) = VOL(1) - VOL(2) - VOL(3) - VOL(4)
            VOL(1) = VOL(1) - VOL(2) - VOL(3) - VOL(4)
          ENDIF

C         NOW THAT WE HAVE THE DIFFERENT VOLUMES, CALCULATE THEIR WEIGHT
C         TO REMOVE FROM THE TCWD BY CALLING V2T.

          VOL(1) = VOL(1) * V2T(ISNSP(IS2F(I)))
          VOL(2) = VOL(2) * V2T(ISNSP(IS2F(I)))
          VOL(3) = VOL(3) * V2T(ISNSP(IS2F(I)))
          VOL(4) = VOL(4) * V2T(ISNSP(IS2F(I)))
          TCWD(6) = TCWD(6) - VOL(1)
          TCWD(5) = TCWD(5) - VOL(2)
          TCWD(4) = TCWD(4) - VOL(3)
          TCWD(3) = TCWD(3) - VOL(4)
        ENDIF

C       DO THE EXACT SAME THING FOR TEMP OBJECT (POST-FIRE)

c temp: make sure this code is skiped:
        if (i.lt.0) then
c**       IF ( IOBJTPTMP(I).EQ.2  .AND. FALLDIR(IS2F(I)).NE.-1 ) THEN

C         THIS IS A SIGNIFICANT FALLEN SNAG.  CACULATE THE VOLUMES
C         FOR EACH OF THE DEBRIS CATEGORIES AND SUBTRACT FROM PRE-FIRE
C         TCWD VECTOR

C         CALCULATE THE TOTAL SNAG VOLUME.

          CALL FMSVL2(ISNSP(IS2FTMP(I)),ODIA(IS2FTMP(I)),
     >      OLEN(IS2FTMP(I)),OLEN(IS2FTMP(I)), VOL(1),
     >      .FALSE.,.FALSE.,JOSTND)

C         CALCULATE THE VOLUME UP TO 12 INCH DIAMETER.

          HT12 = OLEN(IS2FTMP(I)) - ((12.0 *
     >      (OLEN(IS2FTMP(I))*12.-36.)/ODIA(IS2FTMP(I)))/12.)
          CALL FMSVL2(ISNSP(IS2FTMP(I)),ODIA(IS2FTMP(I)),
     >      OLEN(IS2FTMP(I)), HT12, VOL(2),.FALSE.,.FALSE.,JOSTND)
          HT6 = OLEN(IS2FTMP(I)) - ( (6.0 *
     >      (OLEN(IS2FTMP(I))*12.-36.)/ODIA(IS2FTMP(I)))/12.)
          CALL FMSVL2(ISNSP(IS2FTMP(I)),ODIA(IS2FTMP(I)),
     >      OLEN(IS2FTMP(I)), HT6, VOL(3),.FALSE.,.FALSE.,JOSTND)
          HT3 = OLEN(IS2FTMP(I)) - ( (3.0 *
     >      (OLEN(IS2FTMP(I))*12.-36.)/ODIA(IS2FTMP(I)))/12.)
          CALL FMSVL2(ISNSP(IS2FTMP(I)),ODIA(IS2FTMP(I)),
     >      OLEN(IS2FTMP(I)), HT3, VOL(4),.FALSE.,.FALSE.,JOSTND)

          IF ( HT3.GE.OLEN(IS2FTMP(I)) .OR. HT3.LT.0. ) THEN

C           THIS SNAG ISN'T EVEN 3 INCHES IN DIAMETER AT ANY POINT.
C           GO AHEAD AND SET THE VOL(4) TO BE VOL(1) WHICH IS CURRENTLY
C           THE ENTIRE VOLUME OF THE SNAG.  THEN CLEAR ALL OF THE OTHERS.

            VOL(4) = VOL(1)
            VOL(1) = 0.
            VOL(2) = 0.
            VOL(3) = 0.

          ELSE IF ( HT6.GE.OLEN(IS2FTMP(I)) .OR. HT6.LT.0. ) THEN

C           THIS SNAG IS AT LEAST 3 INCHES AT SOME POINT, BUT NOT MORE
C           THAN 6 INCHES AT ANY POINT.
C           SET VOL(3) TO THE ENTIRE VOLUME OF THE SNAG (VOL(1)) AND THEN
C           REDUCE THAT VALUE BY VOL(4).  VOL(4) SHOULD BE ACCURATE.

            VOL(4) = VOL(1) - VOL(4)
            VOL(3) = VOL(1) - VOL(4)
            VOL(1) = 0.
            VOL(2) = 0.

C           THIS LOOKS LIKE WE ARE SETTING VOL(3) AND VOL(4) TO THE
C           SAME VALUES, BUT VOL(4) IS ACTUALLY BEING CHANGED IN THE
C           FIRST CALCULATION THERE.

          ELSE IF ( HT12.GE.OLEN(IS2FTMP(I)) .OR. HT12.LT.0. ) THEN

C           THIS SNAG IS AT LEAST 6 INCHES AT SOME POINT, BUT NOT MORE
C           THAN 12 INCHES AT ANY POINT.  REMOVE VOL(4) FROM VOL(3),
C           VOL(4) AND VOL(3) FROM VOL(2) AND ALL OF THEM FROM VOL(1)
C           THEREFORE, REMOVE VOL(4) FROM VOL(3) AND THEN THEY ARE BOTH
C           ACCURATE.

            VOL(4) = VOL(1) - VOL(4)
            VOL(3) = VOL(1) - VOL(3) - VOL(4)
            VOL(2) = VOL(1) - VOL(3) - VOL(4)
            VOL(1) = 0.
          ELSE

C           THIS SNAG IS BIGGER THAN TWELVE INCHES AT SOME POINT.
C           THIS MEANS THAT VOL(1) REPRESENTS THE VOLUME OF STUFF
C           THAT IS GREATER THAN 12 INCHES.

            VOL(4) = VOL(1) - VOL(4)
            VOL(3) = VOL(1) - VOL(3) - VOL(4)
            VOL(2) = VOL(1) - VOL(2) - VOL(3) - VOL(4)
            VOL(1) = VOL(1) - VOL(2) - VOL(3) - VOL(4)

          ENDIF

C         NOW THAT WE HAVE THE DIFFERENT VOLUMES, CALCULATE THEIR WEIGHT
C         TO REMOVE FROM THE TCWD BY CALLING V2T.

          VOL(1) = VOL(1) * V2T(ISNSP(IS2FTMP(I)))
          VOL(2) = VOL(2) * V2T(ISNSP(IS2FTMP(I)))
          VOL(3) = VOL(3) * V2T(ISNSP(IS2FTMP(I)))
          VOL(4) = VOL(4) * V2T(ISNSP(IS2FTMP(I)))
          TCWD2(6) = TCWD2(6) - VOL(1)
          TCWD2(5) = TCWD2(5) - VOL(2)
          TCWD2(4) = TCWD2(4) - VOL(3)
          TCWD2(3) = TCWD2(3) - VOL(4)
        ENDIF
      ENDDO
      IF (DEBUG) WRITE(JOSTND,5) 'Post',TCWD,TCWD2

C     SET UP THE LOCATION BOUNDARIES

      IF (IMETRIC.EQ.0) THEN
        XSD = 7.5                ! SD (FT)
        IF (IPLGEM .LE. 1) THEN  ! SQUARE STAND
          XYMAX = 208.71
        ELSE                     ! CIRCULAR
          XYMAX = 235.50
        ENDIF
      ELSE
        XSD = 7.5*FTtoM          ! SD (M)
        IF (IPLGEM .LE. 1) THEN  ! SQUARE STAND
          XYMAX = 100.0
        ELSE                     ! CIRCULAR
          XYMAX = 112.84
        ENDIF
      ENDIF

      XJUMP = (XYMAX/(NFMSVPX-1))/NFLPTS
      FMY2(1) = 0.
      OFFSET(1) = BACHLO( 0., XSD, SVRANN)
      DO I=2, NFLPTS
        FMY2(I) = 0.
        OFFSET(I) = OFFSET(I-1) + BACHLO( 0., XSD, SVRANN )
      ENDDO

C     FMSVPIX IS THE NUMBER OF PICTURES TO DRAW, AND THEREFORE THE NUMBER
C     OF DIVISIONS IN THE Y-DIRECTION.  THIS MAKES IT LOOK LIKE THE FIRE
C     BURNS PROGRESSIVELY MORE OF THE STAND IN EACH FRAME.

      DO IFMSVPX = 1,NFMSVPX

        DO I = 1,NFLPTS
          FMY1(I) = FMY2(I)
          MEDIAN = INT(((REAL(IFMSVPX - 0.0))/REAL((NFMSVPX-1)))*XYMAX)
          CATCHUP(I) = BACHLO(0., XJUMP, SVRANN)
          FMY2(I) = MEDIAN + OFFSET(I) + CATCHUP(I)
        ENDDO

        IF ( IFMSVPX .EQ. NFMSVPX ) THEN
          DO I = 1, NFLPTS
            FMY2(I) = XYMAX
          ENDDO
        ENDIF

        DO I = 1,NSVOBJ

C         CALCULATE WHICH PART OF THE LINE THIS OBJECT IS BEHIND.
C         II REPRESENTS THIS "CHUNK" OF THE STAND.

          II = IFIX( XSLOC(I) / (XYMAX/NFLPTS) )

          IF (II .LT. 1) THEN
            II = 1
          ELSEIF (II .GT. NFLPTS) THEN
            II = NFLPTS
          ENDIF
          IF (YSLOC(I).LE.FMY2(II) .AND. YSLOC(I).GT.FMY1(II)) THEN

C           THIS OBJECT IS IN THE BURNED AREA.

            IOBJTP(I) = IOBJTPTMP(I)
            IS2F(I) = IS2FTMP(I)
          ENDIF
        ENDDO
C
        IF ( IFMSVPX .EQ.1 ) THEN
          WRITE (TITLE,10) 'Beginning of fire', IFMSVPX, NFMSVPX
   10     FORMAT (A,' (',I2.2,'/',I2.2,')')
          CALL SVOUT(IYEAR,4,TITLE(:ISTLNB(TITLE)))
        ELSEIF ( IFMSVPX.EQ.NFMSVPX ) THEN
          WRITE (TITLE,10) 'After the fire', IFMSVPX, NFMSVPX
          CALL SVOUT(IYEAR,5,TITLE(:ISTLNB(TITLE)))
        ELSE
          WRITE (TITLE,10) 'During the fire', IFMSVPX, NFMSVPX
          CALL SVOUT(IYEAR,4,TITLE(:ISTLNB(TITLE)))
        ENDIF
      ENDDO

      RETURN
      END
