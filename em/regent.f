      SUBROUTINE REGENT(LESTB,ITRNIN)
      IMPLICIT NONE
C----------
C EM $Id: regent.f 0000 2018-02-14 00:00:00Z gedixon $
C----------
C  **REGENT** COMPUTES HEIGHT AND DIAMETER INCREMENTS FOR SMALL
C  TREES.  THE HEIGHT INCREMENT MODEL IS APPLIED TO TREES THAT ARE LESS
C  THAN 10 INCHES DBH (5 INCHES FOR LODGEPOLE PINE), AND THE DBH
C  INCREMENT MODEL IS APPLIED TO TREES THAT ARE LESS THAN 3 INCHES DBH.
C  FOR TREES THAT ARE GREATER THAN 2 INCHES DBH (1 INCH FOR LODGEPOLE
C  PINE), HEIGHT INCREMENT PREDICTIONS ARE AVERAGED WITH THE PREDICTIONS
C  FROM THE LARGE TREE MODEL. HEIGHT INCREMENT IS A FUNCTION OF HABITAT
C  TYPE, SLOPE, ASPECT, TREE HEIGHT, BASAL AREA IN LARGER TREES, AND
C  STAND CROWN COMPETITION FACTOR.  DIAMETER IS ASSIGNED FROM A HEIGHT
C  DIAMETER FUNCTION WITH ADJUSTMENTS FOR RELATIVE SIZE AND STAND
C  DENSITY.  INCREMENT IS COMPUTED BY SUBTRACTION. WHEN THE TREE ATTAINS
C  A DBH OF 3.0 INCHES IN A CYCLE, **DUBSCR** IS CALLED TO ASSIGN A CROWN
C  RATIO.   **REGENT** IS CALLED FROM **CRATET** DURING CALIBRATION AND
C  FROM **GRINCR** DURING CYCLING.  ENTRY **REGCON** IS CALLED FROM
C  **RCON** TO LOAD MODEL PARAMETERS THAT NEED ONLY BE RESOLVED ONCE.
C
C  **REGENT** IS ALSO USED TO PREDICT HEIGHT INCREMENT, DBH AND CROWN
C  RATIO FOR TREES THAT ARE CREATED BY THE REGENERATION ESTABLISHMENT
C  MODEL.  5-YEAR OLD TREES ARE GENERATED BY **ESTAB** AND **REGENT**
C  COMPUTES INCREMENTS FROM AGE 5 TO THE END OF THE CYCLE.
C----------
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'CALCOM.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
      INCLUDE 'COEFFS.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
      INCLUDE 'OUTCOM.F77'
C
C
      INCLUDE 'PLOT.F77'
C
C
      INCLUDE 'PDEN.F77'
C
C
      INCLUDE 'HTCAL.F77'
C
C
      INCLUDE 'MULTCM.F77'
C
C
      INCLUDE 'ESTCOR.F77'
C
C
      INCLUDE 'VARCOM.F77'
C
C
COMMONS
C----------
C  DIMENSIONS FOR INTERNAL VARIABLES:
C
C   BANEXT -- ESTIMATED STAND BASAL AREA AT START OF EACH HEIGHT INCREMENT
C             PREDICTION SUBCYCLE.
C   CORTEM -- A TEMPORARY ARRAY FOR PRINTING CORRECTION TERMS.
C     KPER -- NUMBER OF YEARS (MAX OF 5) IN EACH HEIGHT INCREMENT PREDICTION
C             SUBCYCLE.
C   NUMCAL -- A TEMPORARY ARRAY FOR PRINTING NUMBER OF HEIGHT
C             INCREMENT OBSERVATIONS BY SPECIES.
C   RDNEXT -- RELATIVE DENSITY (CCF) AT START OF EACH HEIGHT INCREMENT
C             PREDICTION SUBCYCLE.
C    RHCON -- CONSTANT FOR THE HEIGHT INCREMENT MODEL.  INCLUDES EFFECTS
C             OF HABITAT TYPE, LOCATION, SLOPE, AND ASPECT AS LOADED IN
C             RCON.  HABITAT EFFECTS ARE BORROWED FROM LARGE TREE DBH
C             INCREMENT MODEL FOR ALL BUT TYPES 520, 530, AND 570.
C             ADJUSTMENTS ARE THE DIFFERENCE BETWEEN THE HABITAT
C             CONSTANT FOR A GIVEN TYPE AND THE CONSTANT FOR TYPE 520.
C     XMAX -- UPPER END OF THE RANGE OF DIAMETERS OVER WHICH HEIGHT
C             INCREMENT PREDICTIONS FROM SMALL AND LARGE TREE MODELS
C             ARE AVERAGED.
C     XMIN -- LOWER END OF THE RANGE OF DIAMETERS OVER WHICH HEIGHT
C             INCREMENT PREDICTIONS FROM THE SMALL AND LARGE TREE
C             ARE AVERAGED.
C----------
      EXTERNAL RANN
      LOGICAL DEBUG,LESTB,LSKIPH,CRVAR,NIVAR,UTVAR,TTVAR,EMVAR
      REAL CORTEM(MAXSP)
      INTEGER NUMCAL(MAXSP)
      REAL XMAX(MAXSP),XMIN(MAXSP),RHHAB(5)
      INTEGER MAPHAB(30)
      REAL RHGL(3),DIAM(MAXSP),BANEXT(10),RDNEXT(10)
      INTEGER KPER(10)
      REAL DGMAX(MAXSP),SLO(MAXSP),SHI(MAXSP)
      REAL RELH,DADJ,HTGRL,BETA1,BETA2,HTG1,STDDEV,VIGOR,HITE1,AG2
      REAL HITE2,XPPMLT,H2,DGJ,HLESS4,DLESS3,DGMX,HK,DK,HTGR,HTGR1
      REAL ZZRAN,DKK,DDS,DGK,SCALE2,DDS2,DG2,DNEW,SCALE3,X,PCTRED,BAJ
      REAL RDJ,PPCCF,XRHGRO,XRDGRO,CON,BH,BCCF,BBAL,XMX,XMN,AX,BX,D
      REAL H1,H,BAL,BARK,SI,RSIMOD,POTHTG,TPCCF,XWT,CR,RAN,R
      REAL AH,DELMAX,CORNEW,SNP,SNX,SNY,BHAB,BLH,EDH,AG1,TERM
      REAL RSAB2,RSAB1,RSAB0,BAYR,CCFYR,BACHLO,D1,P,D2,BRATIO,B1,B2
      REAL CW,C1,C2,BI,CI,PN,BACON,HSIGMA,REGYR,TEMBA,TEMCCF,TEMAHT
      REAL SCALE,RELSI,HTGRR,HKK
      INTEGER ITRNIN,I,NTYR,IYR,NPER,ITOT,N,J,IS,K,NYR,IPCCF,KY
      INTEGER ISPC,I1,I2,I3,L,ICRK,IITRE,IREFI,KOUT,ISPEC,KK
      CHARACTER SPEC*2
C----------
C  SPECIES ORDER:
C   1=WB,  2=WL,  3=DF,  4=LM,  5=LL,  6=RM,  7=LP,  8=ES,
C   9=AF, 10=PP, 11=GA, 12=AS, 13=CW, 14=BA, 15=PW, 16=NC,
C  17=PB, 18=OS, 19=OH
C
C  SPECIES EXPANSION
C  LM USES IE LM (ORIGINALLY FROM TT VARIANT)
C  LL USES IE AF (ORIGINALLY FROM NI VARIANT)
C  RM USES IE JU (ORIGINALLY FROM UT VARIANT)
C  AS,PB USE IE AS (ORIGINALLY FROM UT VARIANT)
C  GA,CW,BA,PW,NC,OH USE IE CO (ORIGINALLY FROM CR VARIANT)
C
C  NOTE: UT AND CR LOGIC WAS MODIFIED FROM 10-YEAR REGYR TO 5-YEAR
C----------
C  DATA STATEMENTS.
C----------
      DATA DIAM/ 
     &       0.4,      0.3,      0.3,      0.3,      0.3,      0.3,
     &       0.4,      0.3,      0.3,      0.5,      0.2,      0.2,
     &       0.2,      0.2,      0.2,      0.2,      0.2,      0.2,
     &       0.2/
      DATA XMAX/
     &       3.0,      3.0,      3.0,      3.0,     10.0,     99.0,
     &       3.0,      3.0,      3.0,      3.0,      2.0,      4.0,
     &       2.0,      2.0,      2.0,      2.0,      4.0,      3.0,
     &       2.0/
C      
      DATA XMIN/
     &       1.5,      1.5,      1.5,      1.5,      2.0,     90.0,
     &       1.5,      1.5,      1.5,      1.5,      0.5,      2.0,
     &       0.5,      0.5,      0.5,      0.5,      2.0,      1.5,
     &       0.5/
C
      DATA REGYR/5.0/,HSIGMA/0.59/,BACON/0.005454154/
C
      DATA DGMAX/
     &       0.0,      0.0,      0.0,      2.0,     99.0,      2.0,
     &       0.0,      0.0,      0.0,      0.0,      2.5,      2.5,
     &       2.5,      2.5,      2.5,      2.5,      2.5,      0.0,
     &       2.5/
C
      DATA SLO/
     &       0.0,      0.0,      0.0,      0.0,      0.0,      5.0,
     &       0.0,      0.0,      0.0,      0.0,     30.0,     30.0,
     &      30.0,     30.0,     30.0,     30.0,     30.0,      0.0,
     &      30.0/
C
      DATA SHI/
     &       0.0,      0.0,      0.0,      0.0,      0.0,     15.0,
     &       0.0,      0.0,      0.0,      0.0,    120.0,     70.0,
     &     120.0,    120.0,    120.0,    120.0,     70.0,      0.0,
     &     120.0/
C----------
C  CHECK FOR DEBUG.
C----------
      CALL DBCHK (DEBUG,'REGENT',6,ICYC)
      IF(DEBUG) WRITE(JOSTND,9980)ICYC
 9980 FORMAT('ENTERING SUBROUTINE REGENT  CYCLE =',I5)
C----------
C  THE SMALL TREE HEIGHT INCREMENT MODEL IS BASED ON 5-YEAR INCREMENT DATA.
C  TO AVOID BIAS, PREDICTIONS ARE MADE FOR SUBCYCLES THAT ARE LESS THAN OR
C  EQUAL TO 5 YEARS IN LENGTH.  THE FOLLOWING CODE DETERMINES THE NUMBER
C  AND LENGTH OF SUBCYCLES FROM CYCLE LENGTH.
C----------
      LSKIPH=.FALSE.
      DO 1 I=1,10
      KPER(I)=0
      BANEXT(I)=0.0
      RDNEXT(I)=0.0
    1 CONTINUE
      NTYR=INT(FINT)
      IF(LSTART) NTYR=IFINTH
      IF(LESTB) NTYR=NTYR-5
      IF(LESTB.AND.NTYR.LE.0) LSKIPH=.TRUE.
      IYR=INT(REGYR)
      NPER=NTYR/IYR
      IF(MOD(NTYR,IYR).NE.0) NPER=NPER+1
      ITOT=NTYR
      N=NPER
      DO 2 I=1,NPER
      IF(N.EQ.1) GO TO 3
      KPER(I)=ITOT/N
      ITOT=ITOT-KPER(I)
      N=N-1
    2 CONTINUE
    3 CONTINUE
      IF(NPER.GT.0)KPER(NPER)=ITOT
C----------
C  LOAD TEMPORARY VARIABLES WITH AFTER THINNING BA, CCF, AND TOPHT.
C----------
      TEMBA  = ATBA
      IF(ATBA .LE. 0.)TEMBA=BA
      TEMCCF = ATCCF
      IF(ATCCF .LE. 0.)TEMCCF=RELDEN
      TEMAHT = ATAVH
C----------
C  IF THIS IS THE FIRST ENTRY, BRANCH TO THE CALIBRATION SECTION.
C----------
      IF(LSTART) GOTO 40
C----------
C  LOAD MULTIPLIERS.
C----------
      CALL MULTS (3,IY(ICYC),XRHMLT)
      CALL MULTS(6,IY(ICYC),XRDMLT)
      SCALE=YR/FINT
      IF(DEBUG) WRITE(JOSTND,8996) LESTB,LSKIPH,ITRN,ITRNIN,SCALE,NPER
 8996 FORMAT('IN REGENT, LESTB = ',L1,', LSKIPH = ',L1,
     &  ', ITRN = ',I4,', ITRNIN = ',I4,', SCALE = ',F6.3,
     &  ', NPER = ',I3)
      IF (ITRN.LE.0) RETURN
C----------
C  ESTIMATE THE CONTRIBUTION TO STAND BASAL AREA AND CCF FOR LARGE TREES AT
C  THE START OF EACH PROJECTION SUBCYCLE.  IF CALLED FROM **ESTAB**, BRANCH
C  TO STATEMENT 9 AND INTERPOLATE FROM OLD AND NEW DENSITY VALUES.
C  OTHERWISE, 10-YEAR CHANGE IS COMPUTED FROM PREDICTED DBH INCREMENT AND
C  ANNUALIZED.  THEN, ANNUAL RATE IS MULTIPLIED BY SUBCYCLE LENGTH TO
C  DETERMINE CONTRIBUTION FOR EACH SUBCYCLE.  A ONE PERCENT ANNUAL RATE
C  OF MORTALITY IS ASSUMED.  CONTRIBUTIONS OF SMALL TREES ARE COMPUTED AS
C  INCREMENT PREDICTIONS ARE MADE FOR PRECEDING SUBCYCLE.
C----------
      IF(LESTB) GO TO 8
      DO 4 J=1,NPER
      BANEXT(J)=BA
      RDNEXT(J)=RELDEN
    4 CONTINUE
      IF(DEBUG) WRITE(JOSTND,*)'NPER,BA,RELDEN= ',NPER,BA,RELDEN
      IF(NPER.EQ.1) GO TO 11
      DO 6 I=1,ITRN
      D1=DBH(I)
      IF(D1.LT.3.0) GO TO 6
      IS=ISP(I)
      P=PROB(I)
      D2=D1+DG(I)/BRATIO(IS,D1,HT(I))
      B1=BACON*D1*D1
      B2=BACON*D2*D2
      CALL CCFCAL(IS,D1,HT(I),ICR(I),P,.FALSE.,C1,CW,1)
      CALL CCFCAL(IS,D2,HT(I),ICR(I),P,.FALSE.,C2,CW,1)
      BI=(B2-B1)/10.0
      CI=(C2-C1)/10.0
      K=0
      DO 5 J=2,NPER
      K=K+KPER(J-1)
      PN=P*0.985**K
      RDNEXT(J)=RDNEXT(J)+K*CI/P*PN
      BANEXT(J)=BANEXT(J)+K*BI*PN
    5 CONTINUE
    6 CONTINUE
      GO TO 11
C----------
C  IF CALLED FROM **ESTAB**, DIAMETERS AND DENSITY STATISTICS HAVE
C  BEEN UPDATED AND DENSITIES CORRESPONDING TO BEGINNINGS OF SUBCYCLES
C  CAN BE INTERPOLATED FROM DIFFERENCE BETWEEN OLD AND NEW STATS.  THE
C  TREES ARE SENT TO REGENT WITH A HEIGHT CORRESPONDING TO 5 YEARS AFTER
C  THE START OF THE CYCLE.
C----------
    8 CONTINUE
      BAYR=0.0
      CCFYR=0.0
      IF(LSKIPH) GO TO 9
      BAYR=(BA-TEMBA)/ITOT
      CCFYR=(RELDEN-TEMCCF)/ITOT
    9 CONTINUE
      NYR=5
      DO 10 J=1,NPER
      RDNEXT(J)=TEMCCF+NYR*CCFYR
      BANEXT(J)=TEMBA+NYR*BAYR
      NYR=NYR+KPER(J)
   10 CONTINUE
   11 CONTINUE
      IF(DEBUG)WRITE(JOSTND,*)'IN REGENT, NPER,RDNEXT,BANEXT= ',
     &NPER,RDNEXT,BANEXT 
C----------
C  STORE INITIAL HEIGHTS IN WK3; DUB CROWN RATIO FOR NEWLY ESTABLISHED
C  SEEDLINGS.
C----------
      DO 13 I=1,ITRN
      IF(LESTB.AND.I.GE.ITRNIN) THEN
        IPCCF=ITRE(I)
        CR = 0.89722 - 0.0000461*PCCF(IPCCF)
   12   CONTINUE
        RAN = BACHLO(0.0,1.0,RANN)
        IF(RAN .LT. -1.0 .OR. RAN .GT. 1.0) GO TO 12
        CR = CR + 0.07985 * RAN
        IF(CR .GT. .90) CR = .90
        IF(CR .LT. .20) CR = .20
        ICR(I)=INT((CR*100.0)+0.5)
        IF(DEBUG)WRITE(JOSTND,*)'DUB CROWN ESTAB TREES I,PCCF,RAN,CR,I
     &  CR= ',I,PCCF(IPCCF),RAN,CR,ICR(I)
      ENDIF
      WK3(I)=HT(I)
      WK5(I)=DBH(I)
   13 CONTINUE
C----------
C  DELMAX IS USED TO COMPUTE A DENSITY-DEPENDENT ADJUSTMENT FOR
C  THE HEIGHT-DIAMETER FUNCTION.  DELMAX IS BASED ON AVERAGE HEIGHT AND
C  CCF AT THE BEGINNING OF THE CYCLE AND DOES NOT VARY BY SUBCYCLE.
C----------
      IF(LESTB) THEN
        R=TEMCCF
        AH=TEMAHT
      ELSE
        R=RELDEN
        AH=AVH
      ENDIF
      DELMAX=(AH/36.0)*(0.01232*R-1.75)
      IF(DELMAX.GT.0.0) DELMAX=0.0
C---------
C COMPUTE DENSITY MODIFIER FROM CCF AND TOP HEIGHT FOR SPECIES FROM
C THE CR & UT VARIANTS
C---------
      X=AH*(R/100.0)
      IF(X .GT. 300.0) X=300.0
      PCTRED=1.11436 + X*(-.011493 + X*(.43012E-4 + X*(-.72221E-7
     &   + X*(.5607E-10- X*0.1641E-13))))
      IF(PCTRED .GT. 1.0) PCTRED = 1.0
      IF(PCTRED .LT. 0.01) PCTRED = 0.01
      IF(DEBUG) WRITE(JOSTND,9982) AH,R,X,PCTRED
 9982 FORMAT('IN REGENT AVHT,CCF,X,PCTRED = ',4F10.4)
      IF(DEBUG) WRITE(JOSTND,8995) R,AH,DELMAX
 8995 FORMAT('R = ',F10.4,', AH = ',F10.4,', DELMAX = ',F10.4)
C----------
C  ENTER LOOP FOR NEXT SUBCYCLE.
C----------
      KY=0
      DO 17 J=1,NPER
      KY=KY+KPER(J)
      BAJ=BANEXT(J)
      RDJ=RDNEXT(J)
C----------
C  PPCCF IS A PROPORTIONAL ADJUSTMENT FOR POINT CCF VALUES BASED ON
C  CHANGE IN STAND CCF FOR THE SUBCYCLE.
C----------
      PPCCF=0.0
      IF(RELDEN.GT.0.0) PPCCF=1.0+(RDJ-RELDEN)/RELDEN
C----------
C  PROCESS ALL TREES WITHIN THIS SUBCYCLE IN SPECIES ORDER.  LOAD
C  SPECIES DEPENDENT CONSTANTS.
C----------
      DO 16 ISPC=1,MAXSP
      I1=ISCT(ISPC,1)
      IF(I1.EQ.0) GO TO 16
      I2=ISCT(ISPC,2)
C----------
C  ASSIGN VARIANT ACCORDING TO SPECIES
C----------
      EMVAR = .FALSE.
      NIVAR = .FALSE.
      TTVAR = .FALSE.
      UTVAR = .FALSE.
      CRVAR = .FALSE.
      IF(ISPC .EQ. 5)THEN
        NIVAR = .TRUE.
      ELSEIF(ISPC .EQ. 4)THEN
        TTVAR = .TRUE.
      ELSEIF(ISPC.EQ.11 .OR. (ISPC.GE.13 .AND. ISPC.LE.16) .OR.
     &       ISPC.EQ.19 )THEN
        CRVAR = .TRUE.
      ELSEIF(ISPC.EQ.6 .OR. ISPC.EQ.12 .OR. ISPC.EQ.17)THEN
        UTVAR = .TRUE.
      ELSE
        EMVAR = .TRUE.
      ENDIF
      IF(DEBUG)WRITE(JOSTND,*)'NIVAR,TTVAR,UTVAR,CRVAR,LSKIPH= ',
     &NIVAR,TTVAR,UTVAR,CRVAR,LSKIPH
      IF((TTVAR.OR.CRVAR.OR.EMVAR).AND.LSKIPH)GOTO 16
C
      XRHGRO=XRHMLT(ISPC)
      XRDGRO=XRDMLT(ISPC)
      IF(NIVAR)THEN
        CON=RHCON(ISPC) +HCOR(ISPC)
      ELSE
        CON=RHCON(ISPC)*EXP(HCOR(ISPC))
      ENDIF
C
C  VALUES FOR THE NEXT 3 VARIABLES ARE FROM SUBALPINE FIR IN NI/IE
C  USED FOR SUBALPINE LARCH (LL) IN THIS VARIANT
C
      BH = 0.3740
      BCCF = -.00391
      BBAL = -0.22957
      XMX=XMAX(ISPC)
      XMN=XMIN(ISPC)
C----------
C  PROCESS NEXT TREE RECORD.  STORE INTERMEDIATE HEIGHTS IN WK3.
C----------
      DO 15 I3=I1,I2
C----------
C  BYPASS INCREMENT CALCULATION IF DBH IS GREATER THAN XMX OR IF
C  CALL IS FROM **ESTAB** AND TREE SUBSCRIPT IS LESS THAN ITRNIN.
C----------
      I=IND1(I3)
      D=DBH(I)
      H=HT(I)
      IF(DEBUG)WRITE(JOSTND,*)'ISPC,I,D,XMX,LESTB,ITRNIN= ',
     &ISPC,I,D,XMX,LESTB,ITRNIN
      IF(D.GE.XMX) GO TO 15
C
      IF(LESTB .AND. I.LT.ITRNIN) GO TO 15
      P=PROB(I)
      H1=WK3(I)
      D1=WK5(I)
      BAL=BAJ*(100.0-PCT(I))*0.0001
      CALL CCFCAL(ISPC,D,H1,ICR(I),P,.FALSE.,C1,CW,1)
      B1=BACON*D*D
      BARK=BRATIO(ISPC,D,H)
C
      IF(CRVAR.OR.UTVAR)THEN
        SI=SITEAR(ISPC)
        IF(SI .GT. SHI(ISPC)) SI=SHI(ISPC)
        IF(SI .LE. SLO(ISPC)) SI=SLO(ISPC) + 0.5
C----------
C  COMPUTE POTENTIAL GROWTH FROM SITE INDEX AND SPECIES.
C----------
        RELSI=(SI-SLO(ISPC))/(SHI(ISPC)-SLO(ISPC))
        RSIMOD = 0.5 * (1.0 + RELSI)
        X=RELSI*100.0
        IF(CRVAR)THEN
          POTHTG = SITEAR(ISPC)/(15.0 - 4.0*RELSI) * 1.0
        ELSEIF(ISPC.EQ.6)THEN
          POTHTG = (SI/10.0)*(SI*1.5-H1)/(SI*1.5)
        ELSE
          POTHTG = 0.
        ENDIF
        IF(DEBUG)WRITE(JOSTND,*)'I,SI,H1,RELSI,POTHTG= ',
     &  I,SI,H1,RELSI,POTHTG
      ENDIF
C----------
C  DETERMINE POINT CCF FOR THIS SUBCYCLE (BOUND BETWEEN 25 AND 300).
C----------
      IPCCF=ITRE(I)
      TPCCF=PCCF(IPCCF)*PPCCF
      IF(TPCCF.GT.300.0) TPCCF=300.0
      IF(TPCCF.LT.25.0) TPCCF=25.0
      CR=FLOAT(ICR(I))
C----------
C  NI VARIANT CODE
C  COMPUTE ADJUSTMENT FOR BIAS, DENSITY, AND RELATIVE SIZE.
C----------
      IF(NIVAR)THEN
        IF (ABS(AH-4.5).LT. 0.01 ) THEN
          RELH=0.0
        ELSE
          RELH=(H1-4.5)/(AH-4.5)
        ENDIF
        IF(RELH.GT.1.0) RELH=1.0
        IF(RELH.LT.0.0) RELH=0.0
        DADJ=DELMAX*RELH*RELH - 2.0*DELMAX*RELH + 0.65
C----------
C  COMPUTE HEIGHT INCREMENT.  STORE UPDATED HEIGHT IN WK3.
C----------
        HTGRL=(CON+BH*ALOG(H1)+BCCF*RDJ+BBAL*BAL)
        IF(DEBUG)WRITE(JOSTND,*)'NI SECTION, I,AH,H1,RELH,DELMAX,DADJ,
     &  CON,BH,BCCF,RDJ,BAL,HTGRL= ',I,AH,H1,RELH,DELMAX,DADJ,
     &  CON,BH,BCCF,RDJ,BAL,HTGRL
C----------
C  TT VARIANT CODE
C----------
      ELSEIF(TTVAR)THEN
C----------
C  RESET ZRAND IF THIS IS THE START OF THE PROJECTION, THIS IS THE FIRST
C  PREDICTION FOR A NEW TRIPLE, OR IF GROWTH IN THE PREVIOUS CYCLE WAS
C  LESS THAN 0.1 FT.
C----------
        IF(ZRAND(I).NE.-999.) GO TO 920
  910   CONTINUE
        ZRAND(I)=BACHLO(0.0,1.0,RANN)
        IF(ZRAND(I).LT.-2.0 .OR. ZRAND(I).GT.2.0) GO TO 910
  920   CONTINUE
        D = DBH(I)
        IF (D.LE.0.0) THEN
         HTGRL=0.0
         GO TO 930
        ENDIF
        BETA1=EXP(1.17527 - 0.42124*ALOG(TPCCF))
        BETA2=EXP(-2.56002 - 0.58642*ALOG(TPCCF))
        HTG1=BETA1 + BETA2*CR
        STDDEV=HTG1*(1.08720 - 0.00230*CR)
        HTGRL=HTG1 + ZRAND(I)*STDDEV
        IF(DEBUG)WRITE(JOSTND,*)'TT SECTION, I,D,TPCCF,BETA1,BETA2,CR,
     &  HTG1,STDDEV,ZRAND,HTGRL= ',I,D,TPCCF,BETA1,BETA2,CR,HTG1,
     &  STDDEV,ZRAND(I),HTGRL
C----------
C  IF ESTIMATED HEIGHT INCREMENT IS CLOSE TO ZERO, SET FLAG TO DRAW
C  A NEW RANDOM ERROR ON NEXT PASS THROUGH.
C----------
        IF(HTGRL .LE. 0.1)THEN
          HTGRL = 0.1
          ZRAND(I)=-999.
        ENDIF
  930   CONTINUE
C----------
C  CR AND UT VARIANT CODE
C----------
      ELSEIF(CRVAR .OR. UTVAR)THEN
        X=CR/100.
        VIGOR = (150.0 * (X**3.0)*EXP(-6.0*X))+0.3
        IF(VIGOR .GT. 1.0)VIGOR=1.0
C----------
C  VIGOR ADJUSTMENT TO DRASTIC FOR JUNIPER, 
C  CUT IT BY TWO-THIRDS
C----------
        IF(ISPC.EQ.6)VIGOR=1.-((1.-VIGOR)/3.)
C----------
C COMPUTE HT GROWTH AND AGE FOR ASPEN. EQN FROM WAYNE SHEPPARD RMS.
C ALSO USED FOR PAPER BIRCH
C----------
        IF(ISPC.EQ.12 .OR. ISPC.EQ.17)THEN
          HITE1 = 26.9825 * ABIRTH(I)**1.1752
          AG2 = ABIRTH(I)+10.0
          HITE2 = 26.9825 * AG2**1.1752
          HTGRL = (HITE2-HITE1)/(2.54*12.0) * RSIMOD * CON
C----------
C GROWTH RATES APPEAR HIGH, REDUCE BY 25 PERCENT. DIXON 8-27-92
C----------
          HTGRL = HTGRL * .75
        ELSE
          HTGRL=POTHTG*PCTRED*VIGOR*CON
        ENDIF
        IF(DEBUG) WRITE(JOSTND,*)'CR/UT SECTION, I,POTHTG,PCTRED,',
     &  'VIGOR,CON,X,HTGRL= ',I,POTHTG,PCTRED,VIGOR,CON,X,HTGRL
C----------
C  EM VARIANT CODE
C----------
      ELSE
        IF(DEBUG)WRITE(JOSTND,*)'EM SECTION CALLING SMHTGF,I,ISPC,CR,',
     &  'TPCCF= ',I,ISPC,CR,TPCCF
        CALL SMHTGF(ISPC,I,HTGRR,CR,TPCCF)
        H2=H1+HTGRR*(FLOAT(KPER(J))/REGYR)*XRHGRO*CON
        IF(DEBUG)WRITE(JOSTND,*)'AFTER SMHTGF H1,HTGRR,H2,KPER,REGYR,',
     &  'XRHGRO,CON= ',H1,HTGRR,H2,KPER(J),REGYR,XRHGRO,CON
      ENDIF
C----------
C     GET A MULTIPLIER FOR THIS TREE FROM PPREGT TO ACCOUNT FOR
C     THE DENSITY EFFECTS OF NEIGHBORING TREES.
C----------
      IF(NIVAR)THEN
        XPPMLT=1.
      ELSE
        XPPMLT=0.
      ENDIF
      CALL PPREGT (XPPMLT)
C----------
C H2 IS THE END OF CYCLE HEIGHT ON A FINT-YEAR BASIS
C CR AND UT ESTIMATES ARE 10-YEAR ESTIMATES AND THUS ADJUSTED BY FINT/10
C----------
      IF(NIVAR)THEN
        H2=H1+EXP(HTGRL)*(FLOAT(KPER(J))/REGYR)*XRHGRO*XPPMLT
      ELSEIF(TTVAR)THEN
        H2=H1+HTGRL*(FLOAT(KPER(J))/REGYR)*XRHGRO*CON + XPPMLT
      ELSEIF(CRVAR .OR. UTVAR)THEN
        H2=H1+HTGRL*FINT/10. + XPPMLT
      ELSE
        H2=H2 + XPPMLT
      ENDIF
      WK3(I)=H2
      IF(DEBUG)WRITE(JOSTND,*)'I,H1,XPPMLT,H2,KPER,REGYR,',
     &'XRHGRO,CON= ',
     &I,H1,XPPMLT,H2,KPER(J),REGYR,XRHGRO,CON
C----------
C  UPDATE DENSITY FOR NEXT SUBCYCLE.  IF ONLY ONE SUBCYCLE OR
C  IF INITIAL DBH IS GREATER THAN 3 INCHES, BYPASS DENSITY UPDATE.
C  DIAMETER IS ADJUSTED FOR DENSITY AND USER-SUPPLIED MULTIPLIER.
C  INCREMENT IS DETERMINED FROM THE DIFFERENCE BETWEEN COMPUTED
C  DIAMETERS AND IS BOUNDED TO BE GREATER THAN OR EQUAL TO ZERO.
C----------
      IF(NIVAR)THEN
        AX=0.0658
        BX=1.3817
        D2=D
        IF(J.GE.NPER.OR.D.GE.3.0) GO TO 14
        IF(H2.LE.4.5) GO TO 14
        D1=DIAM(ISPC)+DADJ
        IF(H1.GT.4.5) D1=AX*(H1-4.5)**BX + DADJ
        D2=AX*(H2-4.5)**BX + DADJ
        DGJ=(D2-D1)*XRDGRO
        IF(DEBUG)WRITE(JOSTND,*)'NI SECTION, I,ISPC,AX,BX,DADJ,H1,D1,',
     &  'H2,D2,DGJ= ',
     &  I,ISPC,AX,BX,DADJ,H1,D1,H2,D2,DGJ
        IF(DGJ.LT.0.0) DGJ=0.0
        D2=D+DGJ
      ELSEIF(TTVAR)THEN
        HLESS4=H2-4.5
        DLESS3=0.000231*HLESS4*CR - 0.00005*HLESS4*PCCF(ITRE(I))
     &    + 0.001711*CR + 0.17023*HLESS4
        D2=(DLESS3+0.3)*XRDGRO
        IF(D2.LT.DIAM(ISPC)) D2=DIAM(ISPC)
        IF(DEBUG)WRITE(JOSTND,*)'TT SECTION, I,ISPC,CR,PCCF,H2,D2,',
     &  'XRDGRO= ',I,ISPC,CR,PCCF(ITRE(I)),H2,D2,XRDGRO
        WK3(I)=H2
        WK5(I)=D2
        IF(J.GE.NPER .OR. D.GE.3.0 .OR. H2.LE.4.5)GO TO 14
      ELSEIF(CRVAR)THEN
        D2=D
        IF(D.GE.1.0)GO TO 15
        IF(H2 .LE. 4.5)D2=D+0.0001*H2
        IF(DEBUG)WRITE(JOSTND,*)'CR SECTION, I,D,D2,H2= ',I,D,D2,H2
      ELSEIF(UTVAR)THEN
        D2=D
        IF((ISPC.EQ.12 .OR. ISPC.EQ.17) .AND. D.GE.3.0)
     &  GO TO 15
        IF(H2.LE.4.5) THEN
          D2=D+0.001*H2
        ELSEIF(ISPC.EQ.15 .OR. ISPC.EQ.16) THEN
          D2=(H2-4.5)*10./(SITEAR(ISPC)-4.5)
          IF(D2 .LT. 0.1) D2=0.1
        ENDIF
        IF(DEBUG)WRITE(JOSTND,*)'I,D,D2,H2,SITEAR= ',
     &  I,D,D2,H2,SITEAR(ISPC)
      ELSE
        IF(DEBUG)WRITE(JOSTND,*)'CALLING SMDGF I,ISPC,H2,CR,PCCF= ',
     &  I,ISPC,H2,CR,PCCF(ITRE(I)) 
        CALL SMDGF(ISPC,H2,CR,PCCF(ITRE(I)),D2)
        D2=D2*XRDGRO
        IF(DEBUG)WRITE(JOSTND,*)'AFTER SMDGF D2,XRDGRO,DIAM= ',
     &  D2,XRDGRO,DIAM(ISPC)
        IF(D2.LT.DIAM(ISPC)) D2=DIAM(ISPC)
        IF(DEBUG)WRITE(JOSTND,*)'I,ISPC,CR,TPCCF,H2,D2= ',
     &  I,ISPC,CR,TPCCF,H2,D2
      ENDIF
C----------
C  STORE UPDATED DIAMETER IN WK5
C----------
      WK5(I)=D2
      IF(TTVAR.AND.H2.LT.4.5) GOTO 8897
C----------
C  COMPUTE ADJUSTMENT TO STAND BASAL AREA AND CCF FOR NEXT SUBCYCLE.
C  ASSUME A 1.5 PERCENT ANNUAL MORTALITY RATE.
C----------
      IF(EMVAR)THEN
        IF(J.LT.NPER .AND. D.LT.3.0 .AND. H2.GT.4.5) THEN
C----------
C  COMPUTE ADJUSTMENT TO STAND BASAL AREA AND CCF FOR NEXT SUBCYCLE.
C  ASSUME A 1.5 PERCENT ANNUAL MORTALITY RATE.
C----------
          CALL CCFCAL(ISPC,D1,H1,ICR(I),P,.FALSE.,C1,CW,1)
          CALL CCFCAL(ISPC,D2,H2,ICR(I),P,.FALSE.,C2,CW,1)
          RDNEXT(J+1)=RDNEXT(J+1)+KY*(C2-C1)/10.*0.985**KY
          BANEXT(J+1)=BANEXT(J+1)+(BACON*(D2*D2-D1*D1))*P*0.985**KY
C----------
C  END OF TREE LOOP WITHIN SPECIES. PRINT DEBUG IF REQUESTED.
C----------
        ENDIF
      ELSE
        CALL CCFCAL(ISPC,D2,H2,ICR(I),P,.FALSE.,C2,CW,1)
        RDNEXT(J+1)=RDNEXT(J+1)+KY*(C2-C1)/10.*0.985**KY
        BANEXT(J+1)=BANEXT(J+1)+(BACON*D2*D2-B1)*P*0.985**KY
      ENDIF
 8897 CONTINUE
      IF(DEBUG) WRITE(JOSTND,8997) I,D2,BANEXT(J+1),RDNEXT(J+1)
 8997 FORMAT('UPDATE DENSITY: TREE = ',I4,', D2 = ',F8.4,
     & ', BANEXT(J+1) = ',F8.2,', RDNEXT(J+1) = ',F8.2)
C----------
C  END OF TREE LOOP WITHIN SPECIES. PRINT DEBUG IF REQUESTED.
C----------
   14 CONTINUE
      IF(.NOT.DEBUG) GO TO 15
      WRITE(JOSTND,8999) J,KPER(J),ISPC,I,H1,H2,BCCF,RDJ,BBAL,BAL,
     &                   BAJ,PCT(I)
 8999 FORMAT('IN REGENT L1: SUBC=',I2,', KPER=',I2,', SP=',I2,
     &  ', I=',I4,', H1=',F8.4,', H2=',F8.4,', BCCF=',F8.4/T4,'RDJ=',
     &  F8.4,', BBAL=',F8.4,', BAL=',F8.4,', BAJ=',F8.4,', PCT=',F8.4)
   15 CONTINUE
C----------
C  END OF SPECIES LOOP WITHIN SUBCYCLE
C----------
   16 CONTINUE
      IF(DEBUG)WRITE(16,*)'AFTER 16 NIVAR,TTVAR,UTVAR,CRVAR,EMVAR= ',
     &NIVAR,TTVAR,UTVAR,CRVAR,EMVAR
C----------
C  CR AND UT VARIANT SPECIES DON'T NEED ANOTHER LOOP THROUGH HERE
C----------
      IF(CRVAR .OR. UTVAR)GO TO 818
C----------
C  END OF SUBCYCLE LOOP.  END OF PERIOD HEIGHT IS STORED IN WK3.
C----------
   17 CONTINUE
C
  818 CONTINUE
C----------
C  AFTER LAST SUBCYCLE, COMPUTE ACTUAL HEIGHT INCREMENT FOR FULL CYCLE BY
C  SUBTRACTION; CONVERT BACK TO LOG SCALE TO ADD IN RANDOM ERROR.
C----------
      DO 30 ISPC=1,MAXSP
      I1=ISCT(ISPC,1)
      IF(I1.EQ.0) GO TO 30
      I2=ISCT(ISPC,2)
C----------
C  ASSIGN VARIANT ACCORDING TO SPECIES
C----------
      EMVAR = .FALSE.
      NIVAR = .FALSE.
      TTVAR = .FALSE.
      UTVAR = .FALSE.
      CRVAR = .FALSE.
      IF(ISPC .EQ. 5)THEN
        NIVAR = .TRUE.
      ELSEIF(ISPC .EQ. 4)THEN
        TTVAR = .TRUE.
      ELSEIF(ISPC.EQ.11 .OR. (ISPC.GE.13 .AND. ISPC.LE.16) .OR.
     &       ISPC.EQ.19 )THEN
        CRVAR = .TRUE.
      ELSEIF(ISPC.EQ.6 .OR. ISPC.EQ.12 .OR. ISPC.EQ.17)THEN
        UTVAR = .TRUE.
      ELSE
        EMVAR = .TRUE.
      ENDIF
C
      XRDGRO=XRDMLT(ISPC)
      XMX=XMAX(ISPC)
      XMN=XMIN(ISPC)
      IF(EMVAR)THEN
        DGMX=FINT*0.2
      ELSEIF(TTVAR)THEN
        DGMX=FINT*DGMAX(ISPC)
      ELSEIF(CRVAR)THEN
        DGMX=DGMAX(ISPC)*FINT/10.
      ELSE
        DGMX=DGMAX(ISPC)
      ENDIF
      IF(DEBUG)WRITE(JOSTND,*)'ENTERING 25 LOOP, NIVAR,TTVAR,',
     &'UTVAR,CRVAR,EMVAR,XMX,XMN,DGMX,LSKIPH= ',
     &NIVAR,TTVAR,UTVAR,CRVAR,EMVAR,XMX,XMN,DGMX,LSKIPH
C
      DO 25 I3=I1,I2
      I=IND1(I3)
      D=DBH(I)
      CR = FLOAT(ICR(I))
      IF(D.GE.XMX) GO TO 25
      IF(LESTB .AND. I.LT.ITRNIN) GO TO 25
      K=I
      L=0
      H=HT(I)
      HK=WK3(I)
C
      D1=DIAM(ISPC)
      IF(NIVAR.AND.H.GT.4.5)THEN
        AX=0.0658
        BX=1.3817
        D1=AX*(H-4.5)**BX+DADJ
      ENDIF
      DK=WK5(I)
      HTGR=HK-H
      IF((EMVAR.OR.TTVAR).AND.D.LT.D1)D=D1
C----------
C  IF CALLED FROM **ESTAB** AND TOTAL CYCLE LENGTH IS LESS THAN OR EQUAL
C  TO 5 YEARS, SKIP HEIGHT INCREMENT CALCULATION BUT ASSIGN CR AND DBH.
C----------
      IF(EMVAR.AND.LSKIPH) THEN
        IPCCF=ITRE(I)
        TPCCF=PCCF(IPCCF)
        IF(H.GE.4.5) THEN
          CALL SMDGF(ISPC,H,CR,TPCCF,DK)
          IF(DK.LT.D) DK=D
          DBH(I)=DK
          DG(I)=DK
          IF(DG(I).GT.DGMX) DG(I)=DGMX
        ENDIF
        GO TO 25
      ELSEIF(NIVAR.AND.LSKIPH) THEN
         HTG(K)=0
         GO TO 20
      ELSEIF(TTVAR .AND. LSKIPH)THEN
         IPCCF=ITRE(I)
         TPCCF=PCCF(IPCCF)
         IF(H.GE.4.5) THEN
           HLESS4=H-4.5
           DLESS3=0.000231*HLESS4*CR - 0.00005*HLESS4*PCCF(ITRE(I))
     &    + 0.001711*CR + 0.17023*HLESS4
           DK=(DLESS3+0.3)*XRDGRO
           IF(DK.LT.D) DK=D
           DBH(I)=DK
           DG(I)=DK
           IF(DG(I).GT.DGMX) DG(I)=DGMX
         ENDIF
         GO TO 25
      ENDIF
      IF(NIVAR)THEN
        HTGR1=HK-H
        IF (HTGR1.LT.0.0) HTGR1=0.0
      ENDIF
C----------
C  DRAW RANDOM INCREMENT GIVEN EXPECTED VALUE, HTGR, AND STD. DEV.,
C  HSIGMA.  BOUND DRAW TO (-1.5*SD < ZZRAN < 1.0*SD); IF TRIPLING,
C  EACH TRIPLE GETS A NEW RANDOM NUMBER.  DO NOT TRIPLE IF CALLING
C  FROM **ESTAB**.  DO NOT APPLY HEIGHT GROWTH MULTIPLIER; MULTIPLIER
C  WAS USED DURING SUBCYCLING.
C----------
      ICRK=ICR(I)
  918 CONTINUE
      IF(.NOT.TTVAR)THEN
        IF(EMVAR)THEN
          HK=WK3(I)
          DK=WK5(I)
          HTGR=HK-H
          IF(DEBUG)WRITE(JOSTND,*)'K,HK,DK,HTGR= ',K,HK,DK,HTGR
        ELSEIF(NIVAR)THEN
   18     CONTINUE
          ZZRAN=0.0
          IF (DGSD.GE.1.0) ZZRAN = BACHLO(0.0,1.0,RANN)
          IF((ZZRAN .GT. 1.0) .OR. (ZZRAN .LT. -1.5)) GO TO 18
          HTGR = HTGR1*EXP(ZZRAN*HSIGMA)
          IF(DEBUG)WRITE(JOSTND,*)'NI SECTION K,ZZRAN,HSIGMA,HTGR1,',
     &    'HTGR= ',K,ZZRAN,HSIGMA,HTGR1,HTGR     
        ELSE
  919     CONTINUE
          ZZRAN=0.0
          IF (DGSD.GE.1.0) ZZRAN = BACHLO(0.0,1.0,RANN)
          IF((ZZRAN .GT. 0.5) .OR. (ZZRAN.LT.-2.0)) GOTO 919
          IF(UTVAR)HTGR = (HTGR +ZZRAN*0.1)*XRHGRO
          IF(CRVAR)HTGR = (HTGR +ZZRAN*0.2)*XRHGRO
          IF(DEBUG)WRITE(JOSTND,*)'CR/UT SECTION K,ZZRAN,XRHGRO,',
     &    'SCALE,HTGR= ',K,ZZRAN,XRHGRO,SCALE,HTGR
C----------
C THIS CHECK ADDED BY DIXON 3/4/09 TO PREVENT NEGATIVE HEIGHT GROWTH
C MAY NEED A MORE ELEGANT FIX AT SOME POINT; BUT IT WORKS.
C
          IF(HTGR .LT. 0.1)THEN
            HTGR = 0.1
            IF(DEBUG)WRITE(JOSTND,*)'CR/UT RESETTING HTGR ',
     &      'TO 0.1 FOOT'
          ENDIF       
C----------
        ENDIF
      ENDIF
C----------
C  COMPUTE WEIGHTS FOR THE LARGE AND SMALL TREE HEIGHT INCREMENT
C  ESTIMATES.  IF DBH IS LESS THAN OR EQUAL TO XMN OR IF CALLED
C  FROM **ESTAB**, THE LARGE TREE PREDICTION IS IGNORED (XWT=0.0).
C----------
      XWT=0.0
      IF(D.LE.XMN.OR.LESTB) GO TO 19
      XWT=(D-XMN)/(XMX-XMN)
   19 CONTINUE
      IF(DEBUG)WRITE(JOSTND,*)'WEIGHTING K,HTGR,HTG,XWT= ',
     &K,HTGR,HTG(K),XWT 
      HTG(K)=HTGR*(1.0-XWT) + XWT*HTG(K)
      IF(CRVAR.AND.HTG(K) .LT. .1)HTG(K)=.1
C----------
C CHECK FOR SIZE CAP COMPLIANCE.
C----------
      IF((H+HTG(K)).GT.SIZCAP(ISPC,4))THEN
        HTG(K)=SIZCAP(ISPC,4)-H
        IF(HTG(K) .LT. 0.1) HTG(K)=0.1
      ENDIF
C
   20 CONTINUE
C----------
C  ASSIGN DBH AND COMPUTE DBH INCREMENT FOR TREES WITH DBH LESS
C  THAN BREAKPOINT.  COMPUTE 10-YEAR DBH INCREMENT REGARDLESS OF
C  PROJECTION PERIOD LENGTH.  BYPASS INCREMENT CALCULATION IF
C  D GE BREAKPOINT.
C----------
      IF(CRVAR.AND.D.GE.1.0)GOTO 23
      IF(UTVAR.AND.ISPC.EQ.6)GO TO 1020
      IF(D.GE.3.0) GO TO 23
 1020 CONTINUE
C----------
C  COMPUTE ADJUSTMENT FOR BIAS, DENSITY, AND RELATIVE SIZE.
C----------
      IF(NIVAR)THEN
        AX=0.0658
        BX=1.3817
        IF(ABS(AH-4.5).LT. 0.01) THEN
          RELH=0.0
        ELSE
          RELH=(H1-4.5)/(AH-4.5)
        ENDIF
        IF(RELH.GT.1.0) RELH=1.0
        IF(RELH.LT.0.0) RELH=0.0
        DADJ=DELMAX*RELH*RELH - 2.0*DELMAX*RELH + 0.65
        D1=DIAM(ISPC)+DADJ
        IF(H.GT.4.5) D1=AX*(H-4.5)**BX+DADJ
        IF(DEBUG)WRITE(JOSTND,*)'K,ISPC,AX,BX,DADJ,H,D1= ',
     &  K,ISPC,AX,BX,DADJ,H,D1
      ENDIF
      HKK=HK
      HK=H+HTG(K)
      IF(EMVAR)HK=HKK
      IF(.NOT.TTVAR .AND. HK.LT.4.5) THEN
        IF(NIVAR) DBH(K)=0.1 + DIAM(ISPC)*.01 + (H+HTG(K))*0.001
        IF(CRVAR) DBH(K)=D+.001*(H+HTG(K))
        DG(K)=0.0
      ELSE
        IF(EMVAR)THEN
          CALL SMDGF(ISPC,HT(K),CR,PCCF(ITRE(I)),DKK)
          BARK = BRATIO(ISPC,D,H)
          DG(K)=(DK-DKK)*BARK
          DDS = DG(K)*(2.0*BARK*D+DG(K))*SCALE
          IF(DEBUG)WRITE(JOSTND,*)'K,D,DKK,DK,BARK,DDS,DG(K)= ',
     &    K,D,DKK,DK,BARK,DDS,DG(K)
          DG(K)=SQRT((D*BARK)**2.0+DDS)-BARK*D
C----------
C  IF CALLED FROM ESTAB, BOUND DIAMETER INCREMENT FOR ADVANCED
C  REGENERATION.
C----------
          IF(LESTB) THEN
            DBH(K)=DK
            IF(DG(K).GT.DGMX) DG(K)=DGMX
          ENDIF
          IF(DEBUG)WRITE(JOSTND,*)'K,DBH,DG,DIAM= ',
     &     K,DBH(K),DG(K),DIAM(ISPC)
          IF((DBH(K)+DG(K)).LT.DIAM(ISPC) .AND. HK.GE.4.5)THEN
            DG(K)=DIAM(ISPC)-DBH(K)
          ENDIF
          GOTO 22
        ELSEIF(NIVAR)THEN
          DK=AX*(HK-4.5)**BX+DADJ
          IF(DEBUG)WRITE(JOSTND,*)'K,ISPC,AX,BX,DADJ,HK,DK= ',
     &    K,ISPC,AX,BX,DADJ,HK,DK
          IF(DK.LT.DIAM(ISPC)) DK=DIAM(ISPC)
          DK=DK+HK*0.001
        ELSEIF(CRVAR .OR. UTVAR)THEN
          IF(ISPC.EQ.6) THEN
            DK=(HK-4.5)*10./(SITEAR(ISPC)-4.5)
            IF(DK .LT. 0.1) DK=0.1
            DKK=(H-4.5)*10./(SITEAR(ISPC)-4.5)
            IF(DKK .LT. 0.1) DKK=0.1
            IF(H .LT. 4.5) DKK=D
          ELSE
            BX=HT2(ISPC)
            IF(IABFLG(ISPC).EQ.1) THEN
              AX=HT1(ISPC)
            ELSE
              AX=AA(ISPC)
            ENDIF
            DK=(BX/(ALOG(HK-4.5)-AX))-1.0
            IF(DK .LT. 0.1) DK=0.1
            IF(H .LE. 4.5) THEN
              DKK=D
            ELSE
              DKK=(BX/(ALOG(H-4.5)-AX))-1.0
            ENDIF
          ENDIF
          IF(DEBUG)WRITE(JOSTND,9986) AX,BX,ISPC,HK,BARK,
     &                              XRDGRO,DK,DKK
 9986     FORMAT('IN REGENT 9986 FORMAT AX,BX,ISPC,HK',
     &    ' BARK,XRDGRO,DK,DKK= '/T12, F10.3,2X,F10.3,2X,I5,2X,5F10.3)
        ELSEIF(TTVAR)THEN
C----------
C  ASSIGN DIAMETER INCREMENT AND SCALE FOR BARK THICKNESS AND
C  PERIOD LENGTH.  SCALE ADJUSTMENT IS ON GROWTH IN DDS RATHER
C  THAN INCHES OF DG TO MAINTAIN CONSISTENCY WITH GRADD.
C----------
          IF(HK .GE. 4.5) THEN
            HLESS4=HT(K)-4.5
            DLESS3=0.000231*HLESS4*CR - 0.00005*HLESS4*PCCF(ITRE(I))
     &    + 0.001711*CR + 0.17023*HLESS4
            DKK=(DLESS3+0.3)
            IF(DKK.LT.DIAM(ISPC))DKK=DIAM(ISPC)
            BARK = BRATIO(ISPC,D,H)
            DG(K)=(DK-DKK)*BARK
            DDS = DG(K)*(2.0*BARK*D+DG(K))
            IF(DEBUG)WRITE(JOSTND,*)'K,D,DKK,DK,BARK,DDS,DG(K)= ',
     &      K,D,DKK,DK,BARK,DDS,DG(K)
            DG(K)=SQRT((D*BARK)**2.0+DDS)-BARK*D
          ELSE
            DG(K)=0.0
          ENDIF
        ENDIF
C----------
C       IF CALLING FROM **ESTAB** ASSIGN DIAMETER AND DIAMETER
C       INCREMENT.
C----------
        IF(LESTB) THEN
          DBH(K)=DK
          IF(TTVAR.AND.DG(K).GT.DGMX)DG(K)=DGMX
          IF(NIVAR.OR.CRVAR)DG(K)=DK
          IF(CRVAR .OR. UTVAR)THEN
            IF(DBH(K).LT.DIAM(ISPC)) DBH(K)=DIAM(ISPC)
            DBH(K)=DBH(K)+0.001*HK
            DG(K)=DBH(K)
          ENDIF
        ELSE
C----------
C         DIAMETER INCREMENT IS THE DIFFERENCE BETWEEN COMPUTED
C         DIAMETERS.  MULTIPLIER IS APPLIED TO DIAMETER INCREMENT
C         AT THIS POINT.
C----------
          IF(.NOT.TTVAR)THEN
            IF(NIVAR)THEN
              DGK=(DK-D1)*XRDGRO
            ELSEIF(CRVAR.OR.UTVAR)THEN
              IF(DK.LT.0.0 .OR. DKK.LT.0.0)THEN
                DGK=HTG(K)*0.2*BARK*XRDGRO
                DK=D+DGK
              ELSE
                DGK=(DK-DKK)*BARK*XRDGRO
              ENDIF
              IF(DGK.GT.DGMX)DGK=DGMX
            ENDIF
          ENDIF
          IF(DGK.LT.0.0) DGK=0.0
C----------
C         SCALE DIAMETER INCREMENT FOR BARK AND PERIOD LENGTH.
C         IN ORDER TO MAINTAIN CONSISTENCY WITH **GRADD**,
C         ADJUSTMENTS ARE MADE ON THE DDS SCALE.
C----------
          BARK=BRATIO(ISPC,DBH(K),HT(K))
          IF(NIVAR)THEN
            DG(K)=DGK*BARK
          ELSEIF(CRVAR.OR.UTVAR)THEN
            DG(K) = DGK
          ENDIF
          DDS = DG(K)*(2.0*BARK*D+DG(K))*SCALE
          DG(K)=SQRT((D*BARK)**2.0+DDS)-BARK*D
        ENDIF
        IF((DBH(K)+DG(K)).LT.DIAM(ISPC))THEN
          DG(K)=DIAM(ISPC)-DBH(K)
        ENDIF
      ENDIF
C----------
C  CHECK FOR TREE SIZE CAP COMPLIANCE
C----------
   22 CONTINUE
      CALL DGBND(ISPC,DBH(K),DG(K))
C
C----------
C  IF THE TREE WILL ATTAIN A DBH OF 3 OR MORE INCHES THIS CYCLE
C  CALL **DUBSCR** TO ESTIMATE A NEW CROWN RATIO, IF IT DOESN'T HAVE ONE
C  DIAMETER GROWTH SCALED TO CYCLE LENGTH FOR THIS CALCULATION.
C  MAKE SURE NEW CROWN DOES NOT EXCEED MAX POSSIBLE GIVEN HTG.
C----------
      IF(EMVAR)GO TO 23
      IF(.NOT.LESTB) THEN
        SCALE2=FINT/YR
        D=DBH(K)
        BARK=BRATIO(ISPC,D,HT(K))
        DDS2=(DG(K)*(2.0*BARK*D+DG(K)))*SCALE2
        DG2=SQRT((D*BARK)**2+DDS2)-BARK*D
        IF (DG2.LT.0.0) DG2=0.0
        DNEW=D+DG2
        IITRE = ITRE(I)
        TPCCF = PCCF(IITRE)
        IF(DNEW.GE.3.0) THEN
          IF(ICRK .EQ. 0)THEN
            CALL DUBSCR(ISPC,DNEW,HK,BA,CR,TPCCF,AVH,RMAI)
            ICRK=IFIX(CR*100. + 0.5)
          ENDIF
          ICR(K)=ICRK
          IF(DEBUG)WRITE(JOSTND,*)'AFTER DUBSCR K,ISPC,DNEW,HK,BA,CR,',
     &    'ICR= ',K,ISPC,DNEW,HK,BA,CR,ICR(K)
        ENDIF
      ENDIF
   23 CONTINUE
C----------
C  PRINT DEBUG AND RETURN TO PROCESS NEXT TRIPLE OR NEXT TREE.
C----------
      IF(.NOT.DEBUG) GO TO 24
      WRITE(JOSTND,9000) I,K,ISPC,H,HTG(K),HK,DBH(K),DG(K)
 9000 FORMAT('IN REGENT LOOP 2, I=',I4,', K=',I4,', ISPC=',I3,
     &       ', CUR HT=',F7.2,', HT INC=',F7.4/T19,'NEW HT=',F7.2,
     &       ', CUR DBH=',F7.2,', 10-YR DBH INC=',F7.4)
   24 CONTINUE
      IF(LESTB .OR. .NOT.LTRIP .OR. L.GE.2) GO TO 25
      IF(EMVAR .OR. TTVAR)THEN
        K=ITRN+2*I-1
        DBH(K)=DBH(I)
        DG(K)=DG(I)
        HT(K)=HT(I)
        HTG(K)=HTG(I)
        ICR(K)=ICR(I)
        K=K+1
        DBH(K)=DBH(I)
        DG(K)=DG(I)
        HT(K)=HT(I)
        HTG(K)=HTG(I)
        ICR(K)=ICR(I)
        GO TO 25
      ELSE
        L=L+1
        K=ITRN+2*I-2+L
        GO TO 918
      ENDIF
C----------
C  END OF GROWTH PREDICTION LOOP.  PRINT DEBUG INFO IF DESIRED.
C----------
   25 CONTINUE
   30 CONTINUE
      RETURN
C----------
C  SMALL TREE HEIGHT CALIBRATION SECTION.
C----------
   40 CONTINUE
      DO 45 ISPC=1,MAXSP
      HCOR(ISPC)=0.0
      CORTEM(ISPC)=1.0
      NUMCAL(ISPC)=0
   45 CONTINUE
      IF (ITRN.LE.0) RETURN
      IF(IFINTH .EQ. 0)  GOTO 100
      SCALE3 = REGYR/FINTH
C----------
C  DETERMINE BASAL AREA IN LARGE TREES AT START OF EACH PREDICTION SUBCYCLE.
C----------
      DO 46 J=1,NPER
      BANEXT(J)=TEMBA
      RDNEXT(J)=TEMCCF
   46 CONTINUE
      IF(NPER.EQ.1) GO TO 50
C----------
C  IF THERE IS MORE THAN 1 SUBCYCLE FOR HEIGHT INCREMENT PREDICTION,
C  (IFINTH > 5) ESTIMATE VALUES OF BA AND RELATIVE DENSITY (CCF) AT
C  START OF EACH SUBCYCLE.  10-YEAR CHANGE IS COMPUTED FROM BACKDATED
C  DIAMETER (WK3) AND 10-YEAR DIAMETER INCREMENT COMPUTED DURING CALIBRATION.
C  LINEAR INTERPOLATION IS USED TO ASSIGN VALUES FOR SUBCYCLES.
C----------
      DO 49 I=1,ITRN
      D1=WK3(I)
      IS=ISP(I)
      P=PROB(I)
      D2=WK3(I)+DG(I)/BRATIO(IS,D1,HT(I))
      B1=BACON*D1*D1
      B2=BACON*D2*D2
      CALL CCFCAL(IS,D1,HT(I),ICR(I),P,.FALSE.,C1,CW,1)
      CALL CCFCAL(IS,D2,HT(I),ICR(I),P,.FALSE.,C2,CW,1)
      BI=(B2-B1)/10.0
      CI=(C2-C1)/10.0
      K=0
      DO 48 J=2,NPER
      K=K+KPER(J-1)
      PN=P*0.985**K
      RDNEXT(J)=RDNEXT(J)+K*CI/P*PN
      BANEXT(J)=BANEXT(J)+K*BI*PN
   48 CONTINUE
   49 CONTINUE
   50 CONTINUE
C---------
C COMPUTE DENSITY MODIFIER FROM CCF AND TOP HEIGHT FOR CR & UT VARIANT
C---------
      X=AVH*(RELDEN/100.0)
      IF(X .GT. 300.0) X=300.0
      PCTRED=1.11436 + X*(-.011493 + X*(.43012E-4 + X*(-.72221E-7
     &   + X*(.5607E-10- X*0.1641E-13))))
      IF(PCTRED .GT. 1.0) PCTRED = 1.0
      IF(PCTRED .LT. 0.01) PCTRED = 0.01
      IF(DEBUG) WRITE(JOSTND,9989) AVH,RELDEN,X,PCTRED
 9989 FORMAT('IN REGENT AVH,RELDEN,X,PCTRED = ',4F10.4)
C----------
C  BEGIN PROCESSING TREE LIST IN SPECIES ORDER.  DO NOT CALCULATE
C  CORRECTION TERMS IF THERE ARE NO TREES FOR THIS SPECIES.
C----------
      DO 90 ISPC=1,MAXSP
C----------
C  ASSIGN VARIANT ACCORDING TO SPECIES
C----------
      EMVAR = .FALSE.
      NIVAR = .FALSE.
      TTVAR = .FALSE.
      UTVAR = .FALSE.
      CRVAR = .FALSE.
      IF(ISPC .EQ. 5)THEN
        NIVAR = .TRUE.
      ELSEIF(ISPC .EQ. 4)THEN
        TTVAR = .TRUE.
      ELSEIF(ISPC.EQ.11 .OR. (ISPC.GE.13 .AND. ISPC.LE.16) .OR.
     &       ISPC.EQ.19 )THEN
        CRVAR = .TRUE.
      ELSEIF(ISPC.EQ.6 .OR. ISPC.EQ.12 .OR. ISPC.EQ.17)THEN
        UTVAR = .TRUE.
      ELSE
        EMVAR = .TRUE.
      ENDIF
C
      CORNEW=1.0
      I1=ISCT(ISPC,1)
      IF(I1.EQ.0 .OR. .NOT. LHTCAL(ISPC)) GO TO 90
      I2=ISCT(ISPC,2)
      IREFI=IREF(ISPC)
      N=0
      SNP=0.0
      SNX=0.0
      SNY=0.0
      BHAB=RHCON(ISPC)
C
C  VALUES FOR THE NEXT 3 VARIABLES ARE FROM SUBALPINE FIR IN NI/IE
C  USED FOR SUBALPINE LARCH (LL) IN THIS VARIANT
C
      BLH = 0.3740
      BCCF = -.00391
      BBAL = -0.22957
C
      IF(CRVAR.OR.UTVAR)THEN
        SI=SITEAR(ISPC)
        IF(SI .GT. SHI(ISPC)) SI=SHI(ISPC)
        IF(SI .LE. SLO(ISPC)) SI=SLO(ISPC) + 0.5
        RELSI=(SI-SLO(ISPC))/(SHI(ISPC)-SLO(ISPC))
        RSIMOD = 0.5 * (1.0 + RELSI)
        X=RELSI*100.0
      ENDIF
C----------
C  BEGIN TREE LOOP WITHIN SPECIES.  IF MEASURED HEIGHT INCREMENT IS
C  LESS THAN OR EQUAL TO ZERO, OR DBH IS GREATER THAN 5.0, THE RECORD
C  WILL BE EXCLUDED FROM THE CALIBRATION.
C----------
      DO 60 I3=I1,I2
      I=IND1(I3)
      H=HT(I)
      IF(IHTG.LT.2) H=H-HTG(I)
      IF(DBH(I).GE.5.0.OR.H.LT.0.01) GO TO 60
      IF(HTG(I).LT.0.001) GO TO 60
      HK=H
      D=DBH(I)
      CR=FLOAT(ICR(I))
      DO 55 J=1,NPER
      BAJ=BANEXT(J)
      RDJ=RDNEXT(J)
      BAL=BAJ*(100.0-PCT(I))*0.0001
C----------
C  FOR CR AND UT VARIANT SPECIES
C  COMPUTE POTENTIAL GROWTH FROM SITE INDEX AND SPECIES.
C----------
      IF(CRVAR.OR.UTVAR)THEN
        IF(CRVAR)THEN
          POTHTG = SI/(15.0 - 4.0*RELSI) * 1.0
        ELSEIF(ISPC.EQ.15 .OR. ISPC.EQ.16)THEN
          POTHTG = (SI/10.0)*(SI*1.5-H)/(SI*1.5)
        ELSEIF(ISPC.EQ.6)THEN
          POTHTG = ((SI/5.0)*(SI*1.5-H)/(SI*1.5))* 0.83
        ELSE
          POTHTG = 0.
        ENDIF
        IF(DEBUG)WRITE(JOSTND,9988)SI,RELSI,X,ISPC,J,POTHTG
 9988   FORMAT('IN REGENT SI,RELSI,X,ISPC,J,POTHTG = ',
     &  F7.2,F10.3,F10.4,2I6,F10.3)
      ENDIF
      IF(EMVAR)THEN
        IF(TEMCCF .LE. 0.)THEN
          PPCCF=0.
        ELSE
          PPCCF=(RDJ-TEMCCF)/TEMCCF
        ENDIF
      ELSE
        PPCCF=(RDJ-RELDM1)/RELDM1
      ENDIF
      TPCCF=PCCF(ITRE(I))*PPCCF
      IF(TPCCF.GT.300.0) TPCCF=300.0
      IF(TPCCF.LT.25.0) TPCCF=25.0
      IF(EMVAR)THEN
        CALL SMHTGF(ISPC,I,EDH,CR,TPCCF)
        HK=HK+EDH
        CALL SMDGF(ISPC,HK,CR,PCCF(ITRE(I)),D2)
        IF(D2.LT.DIAM(ISPC)) D2=DIAM(ISPC)
      ELSEIF(NIVAR)THEN
        EDH=EXP(BHAB + BLH*ALOG(HK) + BCCF*RDJ + BBAL*BAL)
        HK=HK+EDH
C
      ELSEIF(TTVAR)THEN
C----------
C  RESET ZRAND IF THIS IS THE START OF THE PROJECTION, THIS IS THE FIRST
C  PREDICTION FOR A NEW TRIPLE, OR IF GROWTH IN THE PREVIOUS CYCLE WAS
C  LESS THAN 0.1 FT.
C----------
        IF(ZRAND(I).NE.-999.) GO TO 921
  911   CONTINUE
        ZRAND(I)=BACHLO(0.0,1.0,RANN)
        IF(ZRAND(I).LT.-2.0 .OR. ZRAND(I).GT.2.0) GO TO 911
  921   CONTINUE
        D = DBH(I)
        IF (D.LE.0.0) THEN
         EDH=0.0
         GO TO 931
        ENDIF
        BETA1=EXP(1.17527 - 0.42124*ALOG(TPCCF))
        BETA2=EXP(-2.56002 - 0.58642*ALOG(TPCCF))
        HTG1=BETA1 + BETA2*CR
        STDDEV=HTG1*(1.08720 - 0.00230*CR)
        EDH=HTG1 + ZRAND(I)*STDDEV
C----------
C  IF ESTIMATED HEIGHT INCREMENT IS CLOSE TO ZERO, SET FLAG TO DRAW
C  A NEW RANDOM ERROR ON NEXT PASS THROUGH.
C----------
        IF(EDH .LE. 0.1)THEN
          EDH = 0.1
          ZRAND(I)=-999.
        ENDIF
  931   CONTINUE
C
        HK=HK+EDH
        HLESS4=HK-4.5
        DLESS3=0.000231*HLESS4*CR - 0.00005*HLESS4*PCCF(ITRE(I))
     &    + 0.001711*CR + 0.17023*HLESS4
        D2=(DLESS3+0.3)
        IF(D2.LT.DIAM(ISPC)) D2=DIAM(ISPC)
C
      ELSEIF(CRVAR .OR. UTVAR)THEN
        X=CR/100.
        VIGOR = (150.0 * (X**3.0)*EXP(-6.0*X))+0.3
        IF(VIGOR .GT. 1.0)VIGOR=1.0
C----------
C  VIGOR ADJUSTMENT TO DRASTIC FOR JUNIPER,
C  CUT IT BY TWO-THIRDS
C----------
        IF(ISPC.EQ.6)VIGOR=1.-((1.-VIGOR)/3.)
C----------
C COMPUTE HT GROWTH AND AGE FOR ASPEN. EQN FROM WAYNE SHEPPARD RMS.
C ALSO USED FOR PAPER BIRCH
C----------
        IF(ISPC.EQ.12 .OR. ISPC.EQ.17)THEN
          AG1 = (H*12.0*2.54/26.9825)**0.8509
          AG2 = AG1+10.0
          H2  = (26.9825*AG2**1.1752)/(2.54*12.0)
          EDH = (H2-H) * RSIMOD * RHCON(ISPC)*0.75
        ELSE
          EDH=POTHTG*PCTRED*VIGOR*RHCON(ISPC)
        ENDIF
C----------
C CR AND UT MODELS ARE 10-YEAR MODELS, ADJUST TO 5-YEAR BASIS
C----------
        EDH=EDH*0.5
C
        IF(DEBUG)WRITE(JOSTND,9990) X,VIGOR,EDH
 9990   FORMAT('IN REGENT X,VIGOR,EDH = ',3F10.4)
      ENDIF
   55 CONTINUE
      IF(EMVAR)THEN
        EDH=(HK-H)*RHCON(ISPC)
      ELSEIF(NIVAR)THEN
        EDH=HK-H
      ELSEIF(TTVAR)THEN
        EDH=(HK-H)*RHCON(ISPC)
      ENDIF
      P=PROB(I)
      TERM=HTG(I)*SCALE3
      SNP=SNP+P
      SNX=SNX+EDH*P
      SNY=SNY+TERM*P
      N=N+1
C----------
C  PRINT DEBUG INFO IF DESIRED.
C----------
      IF(DEBUG) WRITE(JOSTND,9001) NPLT,I,ISPC,H,DBH(I),ICR(I),
     & PCT(I),TEMCCF,RHCON(ISPC),EDH,TERM
 9001 FORMAT('NPLT=',A26,',  I=',I5,',  ISPC=',I3,',  H=',F6.1,
     & ',  DBH=',F5.1,',  ICR',I5,',  PCT=',F6.1,',  RELDEN=',
     & F6.1 / 12X,'RHCON=',F10.3,',  EDH=',F10.3,', TERM=',F10.3)
C----------
C  END OF TREE LOOP WITHIN SPECIES.
C----------
   60 CONTINUE
      IF(DEBUG) WRITE(JOSTND,9010) ISPC,SNP,SNX,SNY
 9010 FORMAT(/'SUMS FOR SPECIES ',I2,':  SNP=',F10.2,
     & ';   SNX=',F10.2,';   SNY=',F10.2)
C----------
C  COMPUTE CALIBRATION TERMS.  CALIBRATION TERMS ARE NOT COMPUTED
C  IF THERE WERE FEWER THAN NCALHT (DEFAULT=5) HEIGHT INCREMENT
C  OBSERVATIONS FOR A SPECIES.
C----------
      IF(N.LT.NCALHT) GO TO 80
C----------
C  CALCULATE MEANS FOR THE FOR THE GROWTH SAMPLE ON THE
C  NATURAL SCALE.
C----------
      SNX=SNX/SNP
      SNY=SNY/SNP
C----------
C  THE CORRECTION TERM IS THE MEAN OF OBSERVED INCREMENTS
C  DIVIDED BY THE MEAN OF PREDICTED INCREMENTS (NOT THE REGRESSION
C  ESTIMATE USED FOR DIAMETER INCREMENT CALIBRATION).
C----------
      CORNEW=SNY/SNX
      IF(CORNEW.LE.0.0) CORNEW=1.0E-4
      HCOR(ISPC)=ALOG(CORNEW)
C----------
C  TRAP CALIBRATION VALUES OUTSIDE 2.5 STANDARD DEVIATIONS FROM THE 
C  MEAN. IF C IS THE CALIBRATION TERM, WITH A DEFAULT OF 1.0, THEN
C  LN(C) HAS A MEAN OF 0.  -2.5 < LN(C) < 2.5 IMPLIES 
C  0.0821 < C < 12.1825
C----------
      IF(CORNEW.LT.0.0821 .OR. CORNEW.GT.12.1825) THEN
        CALL ERRGRO(.TRUE.,27)
        WRITE(JOSTND,9194)ISPC,JSP(ISPC),CORNEW
 9194   FORMAT(T28,'SMALL TREE HTG: SPECIES = ',I2,' (',A3,
     &  ') CALCULATED CALIBRATION VALUE = ',F8.2)
        CORNEW=1.0
        HCOR(ISPC)=0.0
      ENDIF
   80 CONTINUE
      CORTEM(IREFI) = CORNEW
      NUMCAL(IREFI) = N
   90 CONTINUE
C----------
C  END OF CALIBRATION LOOP.  PRINT CALIBRATION STATISTICS AND RETURN
C----------
      WRITE(JOSTND,9002) (NUMCAL(I),I=1,NUMSP)
 9002 FORMAT(/'NUMBER OF RECORDS AVAILABLE FOR SCALING'/
     >       'THE SMALL TREE HEIGHT INCREMENT MODEL',
     >        ((T48,11(I4,2X)/)))
  100 CONTINUE
      WRITE(JOSTND,9003) (CORTEM(I),I=1,NUMSP)
 9003 FORMAT(/'INITIAL SCALE FACTORS FOR THE SMALL TREE'/
     >      'HEIGHT INCREMENT MODEL',
     >       ((T48,11(F5.2,1X)/)))
C----------
C OUTPUT CALIBRATION TERMS IF CALBSTAT KEYWORD WAS PRESENT.
C----------
      IF(JOCALB .GT. 0) THEN
        KOUT=0
        DO 207 K=1,MAXSP
        IF(CORTEM(K).NE.1.0 .OR. NUMCAL(K).GE.NCALHT) THEN
          SPEC=NSP(MAXSP,1)(1:2)
          ISPEC=MAXSP
          DO 203 KK=1,MAXSP
          IF(K .NE. IREF(KK)) GO TO 203
          ISPEC=KK
          SPEC=NSP(KK,1)(1:2)
          GO TO 2031
  203     CONTINUE
 2031     WRITE(JOCALB,204)ISPEC,SPEC,NUMCAL(K),CORTEM(K)
  204     FORMAT(' CAL: SH',1X,I2,1X,A2,1X,I4,1X,F6.3)
          KOUT = KOUT + 1
        ENDIF
  207   CONTINUE
        IF(KOUT .EQ. 0)WRITE(JOCALB,209)
  209   FORMAT(' NO SH VALUES COMPUTED')
        WRITE(JOCALB,210)
  210   FORMAT(' CALBSTAT END')
      ENDIF
      RETURN
      ENTRY REGCON
C----------
C  ENTRY POINT FOR LOADING OF REGENERATION GROWTH MODEL
C  CONSTANTS  THAT REQUIRE ONE-TIME RESOLUTION.
C  IDTYPE IS A HABITAT INDEX THAT IS COMPUTED IN **RCON**.
C  RHGL IS AN ARRAY FOR LOCATION CONSTANTS,
C  RHHAB IS AN ARRAY FOR HABITAT DEPENDENT CONSTANTS, AND
C  RSAB0, RSAB1, AND RSAB2 ARE COEFFICIENTS FOR
C  THE SLOPE AND ASPECT TRANSFORMATION.
C----------
      DATA RHHAB/  -0.2146, -0.0941, -0.4916, -0.3582, 0.0/
      DATA MAPHAB/12*4, 3,2, 4*5, 1, 7*4, 1,3,3,4/
      DATA  RHGL/  -.2785,-.0480,0./
      DATA RSAB0,RSAB1,RSAB2/ -0.10987, 0.22157, -0.12432/
C*    WRITE(JOSTND,777)  IGL,ITYPE,ASPECT,SLOPE
C*777 FORMAT('IN REGCON IGL ITYPE ASPECT SLOPE=',2I5,2F8.2)
C----------
C  COMBINE SITE EFFECTS THAT ARE INDEPENDENT OF SPECIES.
C----------
      REGCH= RHGL(IGL) +
     &   (RSAB0 + RSAB1*COS(ASPECT) + RSAB2*SIN(ASPECT))*SLOPE
C----------
C  LOAD OVERALL SITE CONSTANTS INTO RHCON BY SPECIES.  IF SCALE FACTORS
C  HAVE BEEN INPUT WITH THE READCORR KEYWORD, INCORPORATE THEM INTO
C  THE OVERALL CONSTANTS.
C---------
      DO 110 ISPC=1,MAXSP
C----------
C  ASSIGN VARIANT ACCORDING TO SPECIES
C----------
      EMVAR = .FALSE.
      NIVAR = .FALSE.
      TTVAR = .FALSE.
      UTVAR = .FALSE.
      CRVAR = .FALSE.
      IF(ISPC .EQ. 5)THEN
        NIVAR = .TRUE.
      ELSEIF(ISPC .EQ. 4)THEN
        TTVAR = .TRUE.
      ELSEIF(ISPC.EQ.11 .OR. (ISPC.GE.13 .AND. ISPC.LE.16) .OR.
     &       ISPC.EQ.19 )THEN
        CRVAR = .TRUE.
      ELSEIF(ISPC.EQ.6 .OR. ISPC.EQ.12 .OR. ISPC.EQ.17)THEN
        UTVAR = .TRUE.
      ELSE
        EMVAR = .TRUE.
      ENDIF
C
      IF(NIVAR)THEN
        IRHHAB=MAPHAB(ITYPE)
C*******
C*      WRITE(JOSTND,778) ISPC,IRHHAB
C*778   FORMAT('REGCON ISPC IRHHAB=',2I6)
C*******
        RHCON(ISPC)=REGCH + 1.0667 + RHHAB(IRHHAB)
        IF(LRCOR2.AND.RCOR2(ISPC).GT.0.0) RHCON(ISPC)=RHCON(ISPC) +
     &                                  ALOG(RCOR2(ISPC))
      ELSE
        RHCON(ISPC) = 1.0
        IF(LRCOR2 .AND. RCOR2(ISPC).GT.0.0)
     &   RHCON(ISPC)=RCOR2(ISPC)
      ENDIF
  110 CONTINUE
      RETURN
      END
