      SUBROUTINE REGENT(LESTB,ITRNIN)
      IMPLICIT NONE
C----------
C CI $ID$
C----------
C  **REGENT** COMPUTES HEIGHT AND DIAMETER INCREMENTS FOR SMALL TREES.
C
C  HEIGHT INCREMENT IS A FUNCTION OF HABITAT TYPE, SLOPE, ASPECT, TREE 
C  HEIGHT, BASAL AREA IN LARGER TREES, AND STAND CROWN COMPETITION FACTOR.  
C
C  THE HEIGHT INCREMENT MODEL IS APPLIED TO TREES THAT ARE LESS
C  THAN THE MAXIMUM DIAMETER SPECIFIED IN ARRAY XMAX. 
C  FOR TREES THAT ARE GREATER THAN THE MINIMUM DIAMETER SPECIFIED IN 
C  ARRAY XMIN, HEIGHT INCREMENT PREDICTIONS ARE AVERAGED WITH PREDICTIONS
C  FROM THE LARGE TREE MODEL. HEIGHT INCREMENT IS SCALED TO THE CYCLE
C  LENGTH (FINT) BY APPLICATION OF THE VARIABLE SCALE.
C
C  DIAMETER IS ASSIGNED FROM A HEIGHT DIAMETER FUNCTION WITH ADJUSTMENTS 
C  FOR RELATIVE SIZE AND STAND DENSITY.  INCREMENT IS COMPUTED BY  
C  SUBTRACTION. THE DBH INCREMENT MODEL IS APPLIED TO TREES THAT ARE LESS
C  THAN THE BREAKPOINT DIAMETER SPECIFIED IN ARRAY BREAK IN **BLKDAT**.
C  DIAMETER INCREMENT IS SCALED FROM A FINT-YEAR BASIS TO A 10-YR BASIS
C  BY APPLICATION OF THE VARIABLE SCALE2. IT GETS SCALED BACK TO A 
C  FINT-YEAR BASIS IN SUBROUTINE **UPDATE**.
C
C  WHEN THE TREE ATTAINS A DBH OF BREAK INCHES IN A CYCLE, **DUBSCR** IS 
C  CALLED TO ASSIGN A CROWN RATIO.
C
C  **REGENT** IS CALLED FROM **CRATET** DURING CALIBRATION AND
C  FROM **GRINCR** DURING CYCLING.  ENTRY **REGCON** IS CALLED FROM
C  **RCON** TO LOAD MODEL PARAMETERS THAT NEED ONLY BE RESOLVED ONCE.
C
C  **REGENT** IS ALSO USED TO PREDICT HEIGHT INCREMENT, DBH AND CROWN
C  RATIO FOR TREES THAT ARE CREATED BY THE REGENERATION ESTABLISHMENT
C  MODEL.  5-YEAR OLD TREES ARE GENERATED BY **ESTAB**, AND **REGENT**
C  COMPUTES INCREMENTS FROM AGE 5 TO THE END OF THE CYCLE.
C----------
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'CALCOM.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
      INCLUDE 'COEFFS.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
      INCLUDE 'OUTCOM.F77'
C
C
      INCLUDE 'PLOT.F77'
C
C
      INCLUDE 'PDEN.F77'
C
C
      INCLUDE 'HTCAL.F77'
C
C
      INCLUDE 'MULTCM.F77'
C
C
      INCLUDE 'ESTCOR.F77'
C
C
      INCLUDE 'VARCOM.F77'
C
C
COMMONS
C----------
C  DIMENSIONS FOR INTERNAL VARIABLES:
C
C   BANEXT -- ESTIMATED STAND BASAL AREA AT START OF EACH HEIGHT INCREMENT
C             PREDICTION SUBCYCLE.
C   CORTEM -- A TEMPORARY ARRAY FOR PRINTING CORRECTION TERMS.
C     KPER -- NUMBER OF YEARS (MAX OF 5) IN EACH HEIGHT INCREMENT PREDICTION
C             SUBCYCLE.
C   NUMCAL -- A TEMPORARY ARRAY FOR PRINTING NUMBER OF HEIGHT
C             INCREMENT OBSERVATIONS BY SPECIES.
C   RDNEXT -- RELATIVE DENSITY (CCF) AT START OF EACH HEIGHT INCREMENT
C             PREDICTION SUBCYCLE.
C    RHCON -- CONSTANT FOR THE HEIGHT INCREMENT MODEL.  INCLUDES EFFECTS
C             OF HABITAT TYPE, LOCATION, SLOPE, AND ASPECT AS LOADED IN
C             RCON.  HABITAT EFFECTS ARE BORROWED FROM LARGE TREE DBH
C             INCREMENT MODEL FOR ALL BUT TYPES 520, 530, AND 570.
C             ADJUSTMENTS ARE THE DIFFERENCE BETWEEN THE HABITAT
C             CONSTANT FOR A GIVEN TYPE AND THE CONSTANT FOR TYPE 520.
C     RHLH -- THE COEFFICIENTS FOR EACH SPECIES FOR THE LN(HEIGHT)
C             TERM IN THE HEIGHT INCREMENT MODEL.
C     XMAX -- UPPER END OF THE RANGE OF DIAMETERS OVER WHICH HEIGHT
C             INCREMENT PREDICTIONS FROM SMALL AND LARGE TREE MODELS
C             ARE AVERAGED.
C     XMIN -- LOWER END OF THE RANGE OF DIAMETERS OVER WHICH HEIGHT
C             INCREMENT PREDICTIONS FROM THE SMALL AND LARGE TREE
C             ARE AVERAGED.
C
C  NOTE: UT AND CR LOGIC IS BASED ON A 10-YEAR REGYR; SO IS ASPEN
C----------
      EXTERNAL RANN
      CHARACTER SPEC*2
      LOGICAL DEBUG,LESTB,LSKIPH,CIVAR,UTVAR,TTVAR
C
      INTEGER I,I1,I2,I3,ICRK,IICR,IITRE,IS,IP,IPCCF,IREFI,ISPC
      INTEGER ISPEC,ITOT,ITRNIN,IYR
      INTEGER J
      INTEGER K,KK,KOUT,KPER(10),KY
      INTEGER L
      INTEGER N,NPER,NTYR,NUMCAL(MAXSP),NYR
C
      REAL AB(9),AG1,AG2,AH,AGMAX,AX
      REAL B1,B2,BACHLO,BACON,BAJ,BAL(MAXSP),BANEXT(10),BARK,BAYR,BBAL
      REAL BETA1,BETA2,BH,BI,BRATIO,BKPT,BX
      REAL C1,C2,CCFYR,CI,CNST(MAXSP),CON,CORNEW,CORTEM(MAXSP)
      REAL CR(MAXSP),CRCODE,CRI,CRSQ(MAXSP),CW
      REAL D,D1,D1F,D2,D2F,DADJ,DAT45,DDS,DDS2,DELMAX,DG2,DGJ,DGK
      REAL DGMX,DHCN(MAXSP),DHCR(MAXSP),DHHT(MAXSP)
      REAL DIAM(MAXSP),DK,DKK,DLESS3,DNEW,EDH,FNT,DGMAX(MAXSP)
      REAL H,H1,H2,HAT3,HDM1(MAXSP),HDM2(MAXSP),HHT1(MAXSP),HHT2(MAXSP)
      REAL HITE1,HITE2,HK,HLESS4
      REAL HSIGMA,HTBA(MAXSP),HTG1,HTGR,HTGR1,HTGRL,HTMAX,HTMAX2,HTNEW
      REAL P,P2,P3,P4,PBAL(MAXSP),PCTRED,PN,POTHTG,PPBA,PPBAD,PPBAL
      REAL PPCCF,PS,PTBA(MAXSP),PTBALI
      REAL R,RAN,RCR,RD,RDJ,RDNEXT(10),REGYR,RELH,RELHT,RELSDI,RELSI
      REAL RHDM1,RHDM2,RHGL(3),RHHAB(6,MAXSP),RHLH(MAXSP),RLHT(MAXSP)
      REAL RHSC(MAXSP),RSAB0,RSAB1,RSAB2,RSIMOD
      REAL SBA,SBAL,SCALE,SCALE2,SCALE3,SCNST,SCR,SCRSQ,SDHCN,SDHHT
      REAL SDHCR,SHDM1,SHDM2,SHI(MAXSP),SHTBA,SI,SITAGE,SITHT,SJ
      REAL SLO(MAXSP)
      REAL SNP,SNX,SNY,SOBAL,SPBAL,SPTBA,SRLHT,STBA(MAXSP),STDDEV
      REAL TBAL,TCR,TEMAHT,TEMBA,TEMCCF,TERM,TPCCF,VIGOR
      REAL X,XMAX(MAXSP),XMIN(MAXSP),XMN,XMX,XPPMLT,XRDGRO,XRHGRO,XWT
      REAL ZBAL,ZZRAN
C----------
C     SPECIES LIST FOR CENTRAL IDAHO VARIANT.
C
C     1 = WESTERN WHITE PINE (WP)          PINUS MONTICOLA
C     2 = WESTERN LARCH (WL)               LARIX OCCIDENTALIS
C     3 = DOUGLAS-FIR (DF)                 PSEUDOTSUGA MENZIESII
C     4 = GRAND FIR (GF)                   ABIES GRANDIS
C     5 = WESTERN HEMLOCK (WH)             TSUGA HETEROPHYLLA
C     6 = WESTERN REDCEDAR (RC)            THUJA PLICATA
C     7 = LODGEPOLE PINE (LP)              PINUS CONTORTA
C     8 = ENGLEMANN SPRUCE (ES)            PICEA ENGELMANNII
C     9 = SUBALPINE FIR (AF)               ABIES LASIOCARPA
C    10 = PONDEROSA PINE (PP)              PINUS PONDEROSA
C    11 = WHITEBARK PINE (WB)              PINUS ALBICAULIS
C    12 = PACIFIC YEW (PY)                 TAXUS BREVIFOLIA
C    13 = QUAKING ASPEN (AS)               POPULUS TREMULOIDES
C    14 = WESTERN JUNIPER (WJ)             JUNIPERUS OCCIDENTALIS
C    15 = CURLLEAF MOUNTAIN-MAHOGANY (MC)  CERCOCARPUS LEDIFOLIUS
C    16 = LIMBER PINE (LM)                 PINUS FLEXILIS
C    17 = BLACK COTTONWOOD (CW)            POPULUS BALSAMIFERA VAR. TRICHOCARPA
C    18 = OTHER SOFTWOODS (OS)
C    19 = OTHER HARDWOODS (OH)
C
C  SURROGATE EQUATION ASSIGNMENT:
C
C  FROM THE IE VARIANT:
C      USE 17(PY) FOR 12(PY)             (IE17 IS REALLY TT2=LM)
C      USE 18(AS) FOR 13(AS)             (IE18 IS REALLY UT6=AS)
C      USE 13(LM) FOR 11(WB) AND 16(LM)  (IE13 IS REALLY TT2=LM)
C      USE 19(CO) FOR 17(CW) AND 19(OH)  (IE19 IS REALLY CR38=OH)
C
C  FROM THE UT VARIANT:
C      USE 12(WJ) FOR 14(WJ)
C      USE 20(MC) FOR 15(MC)             (UT20 = SO30=MC, WHICH IS
C                                                  REALLY WC39=OT)
C----------
C  DATA STATEMENTS.
C----------
      DATA XMIN/
     & 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
     & 1.5, 1.5, 2.0, 90., 90., 1.5, 0.5, 2.0, 0.5/ 
      DATA XMAX/
     & 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
     & 3.0, 3.0, 4.0, 99., 99., 3.0, 2.0, 5.0, 2.0/ 
C
      DATA REGYR/ 5.0 /
C
      DATA BACON/0.005454154/
C
      DATA DIAM/
     & 0.4, 0.3, 0.3, 0.3, 0.2, 0.2, 0.4, 0.3, 0.3, 0.5,
     & 0.3, 0.3, 0.2, 0.3, 0.2, 0.3, 0.2, 0.2, 0.2/
C
      DATA PTBA/
     &       0.0,       0.0,       0.0,       0.0,       0.0,
     &       0.0,       0.0,       0.0,   .041624,       0.0,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,       0.0,        0./
C
      DATA HDM1/
     &       0.0,       0.0,       0.0,  -.148242,  -.148242,
     &       0.0,  1.344571,       0.0,       0.0,       0.0,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,  1.344571,        0./
C
      DATA HDM2/
     &       0.0,       0.0,       0.0,       0.0,       0.0,
     &       0.0,   .941685,  -.170390,  -.351491,       0.0,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,   .941685,        0./
C
      DATA BAL/
     &  -.004243,  -.004243,  -.004243,       0.0,       0.0,
     &  -.004243,   .046846,  -.002575,       0.0,       0.0,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,   .046846,        0./
C
      DATA CR/
     &       0.0,       0.0,       0.0,  -.056683,  -.056683,
     &       0.0,  -.429924,  -.240189,  -.184459,       0.0,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,  -.429924,        0./
C
      DATA CRSQ/
     &   .019979,   .019979,   .019979,   .027878,   .027878,
     &   .019979,   .059260,   .033463,   .030547,   .025303,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,   .059260,        0./
C
      DATA RLHT/
     &  1.360483,  1.360483,  1.360483,   .625564,   .625564,
     &  1.360483,  2.559428,  1.564875,  1.919543,        .0,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,  2.559428,        0./
C
      DATA STBA/
     &       0.0,       0.0,       0.0,  -.001581,  -.001581,
     &       0.0,  -.057022,       0.0,       0.0,  -.009643,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,  -.057022,        0./
C
      DATA PBAL/
     &  -.002027,  -.002027,  -.002027,  -.001873,  -.001873,
     &  -.002027,       0.0,  -.001630,  -.043304,       0.0,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,       0.0,        0./
C
      DATA HTBA/
     &       0.0,       0.0,       0.0,   .007883,   .007883,
     &       0.0,  -.010395,       0.0,       0.0,       0.0,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,  -.010395,        0./
C
      DATA CNST/
     &  1.598975,  1.598975,  1.598975,  1.222128,  1.222128,
     &  1.598975,  2.133995,  1.768804,  1.253349,  2.764559,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,  2.133995,        0./
C
      DATA DHCN/
     &  -1.10700,  -2.47253,  -2.91444,  -2.44705,  -2.23082,
     &  -2.23082,  -2.34117,  -2.51259,  -2.59515,  -1.10700,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,  -2.23082,        0./
C
      DATA DHHT/
     &   .830144,  1.045526,  1.234512,  1.154547,  1.173253,
     &  1.173253,   .957510,  1.151275,  1.236187,   .830144,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,  1.173253,        0./
C
      DATA DHCR/
     &       0.0,       0.0,   .098784,   .019108,   .010090,
     &       0.0,   .191396,  0.071330,       0.0,       0.0,
     &        0.,        0.,        0.,        0.,        0.,
     &        0.,        0.,       0.0,        0./
C----------
C  IF THESE CHANGE, ALSO CHANGE THEM IN SITSET
C  THESE VALUES SHOULD BE BASED ON THE BASE-AGE OF THE SITE CURVE
C  BEING USED FOR THAT SPECIES.
C
C  SITE INDEX NOT USED FOR THESE SPECIES BUT VALUES ASSIGNED FOR
C  TRANSLATION TO SPECIES THAT DO USE SITE INDEX:
C  FROM BM: WP, WL, GF, CW
C  FROM TT: DF, LP, ES, AF, PP
C  FROM SO: WH, RC
C  OS USES DF, OH USES CW
C----------
      DATA SLO/
     &  20.,  50.,  30.,  50.,   6.,  29.,  20.,  40.,  40.,  40.,
     &  25.,  25.,  30.,   5.,   5.,  25.,  30.,  30.,  30./
C
      DATA SHI/
     &  80., 110.,  70., 110., 203., 152., 100., 100.,  90.,  80.,
     &  50.,  50.,  70.,  15.,  15.,  50., 120.,  70., 120./
C
      DATA DGMAX/
     &  99.,  99.,  99.,  99.,  99.,  99.,  99.,  99.,  99.,  99.,
     &  2.0,  2.0,  2.5,  2.0,  2.0,  2.0,  2.5,  99.,  2.5/
C----------
C  CHECK FOR DEBUG.
C----------
      CALL DBCHK (DEBUG,'REGENT',6,ICYC)
      IF(DEBUG) WRITE(JOSTND,9980)ICYC
 9980 FORMAT('ENTERING SUBROUTINE REGENT  CYCLE =',I5)
C----------
C  THE SMALL TREE HEIGHT INCREMENT MODEL IS BASED ON 5-YEAR INCREMENT DATA.
C  TO AVOID BIAS, PREDICTIONS ARE MADE FOR SUBCYCLES THAT ARE LESS THAN OR
C  EQUAL TO 5 YEARS IN LENGTH.  THE FOLLOWING CODE DETERMINES THE NUMBER
C  AND LENGTH OF SUBCYCLES FROM CYCLE LENGTH.
C----------
      LSKIPH=.FALSE.
      SCALE2=1.
      DO 1 I=1,10
      KPER(I)=0
      BANEXT(I)=0.0
      RDNEXT(I)=0.0
    1 CONTINUE
      NTYR=FINT
      IF(LSTART) NTYR=IFINTH
      IF(LESTB) NTYR=NTYR-5
      IF(LESTB.AND.NTYR.LE.0) LSKIPH=.TRUE.
      IYR=REGYR
      NPER=NTYR/IYR
      IF(MOD(NTYR,IYR).NE.0) NPER=NPER+1
      ITOT=NTYR
      N=NPER
      DO 2 I=1,NPER
      IF(N.EQ.1) GO TO 3
      KPER(I)=ITOT/N
      ITOT=ITOT-KPER(I)
      N=N-1
    2 CONTINUE
    3 CONTINUE
      IF(NPER.GT.0)KPER(NPER)=ITOT
C----------
C  LOAD TEMPORARY VARIABLES WITH AFTER THINNING BA, CCF, AND TOPHT.
C----------
      TEMBA  = ATBA
      IF(ATBA .LE. 0.)TEMBA=BA
      TEMCCF = ATCCF
      IF(ATCCF .LE. 0.)TEMCCF=RELDEN
      TEMAHT = ATAVH
      IF(DEBUG)WRITE(16,*)'TEMBA,TEMCCF,TEMAHT,BA,RELDEN= ',
     & TEMBA,TEMCCF,TEMAHT,BA,RELDEN
C----------
C  SET VARIABLES WHICH ARE HABITAT DEPENDENT.
C----------
      RHDM1=0.0
      RHDM2=0.0
      IF(ICL5.GE.500 .AND. ICL5.LT.600)RHDM1=1.0
      IF(ICL5.GE.600 .AND. ICL5.LT.700)RHDM2=1.0
C----------
C  IF THIS IS THE FIRST ENTRY, BRANCH TO THE CALIBRATION SECTION.
C----------
      IF(LSTART) GOTO 40
C----------
C  LOAD MULTIPLIERS.
C----------
      CALL MULTS (3,IY(ICYC),XRHMLT)
      CALL MULTS(6,IY(ICYC),XRDMLT)
      IF(DEBUG) WRITE(JOSTND,8996) LESTB,LSKIPH,ITRN,ITRNIN,NPER
 8996 FORMAT('IN REGENT, LESTB = ',L1,', LSKIPH = ',L1,
     &  ', ITRN = ',I4,', ITRNIN = ',I4,', NPER = ',I3)
      IF (ITRN.LE.0) GO TO 91
C----------
C  ESTIMATE THE CONTRIBUTION TO STAND BASAL AREA AND CCF FOR LARGE TREES AT
C  THE START OF EACH PROJECTION SUBCYCLE.  IF CALLED FROM **ESTAB**, BRANCH
C  TO STATEMENT 9 AND INTERPOLATE FROM OLD AND NEW DENSITY VALUES.
C  OTHERWISE, 10-YEAR CHANGE IS COMPUTED FROM PREDICTED DBH INCREMENT AND
C  ANNUALIZED.  THEN, ANNUAL RATE IS MULTIPLIED BY SUBCYCLE LENGTH TO
C  DETERMINE CONTRIBUTION FOR EACH SUBCYCLE.  A ONE PERCENT ANNUAL RATE
C  OF MORTALITY IS ASSUMED.  CONTRIBUTIONS OF SMALL TREES ARE COMPUTED AS
C  INCREMENT PREDICTIONS ARE MADE FOR PRECEDING SUBCYCLE.
C----------
      IF(LESTB) GO TO 8
      DO 4 J=1,NPER
      BANEXT(J)=BA
      RDNEXT(J)=RELDEN
    4 CONTINUE
      IF(DEBUG) WRITE(JOSTND,*)'NPER,BA,RELDEN= ',NPER,BA,RELDEN
      IF(NPER.EQ.1) GO TO 11
      DO 6 I=1,ITRN
      D1=DBH(I)
      IF(D1.LT.3.0) GO TO 6
      IS=ISP(I)
      P=PROB(I)
      D2=D1+DG(I)/BRATIO(IS,D1,HT(I))
      B1=BACON*D1*D1
      B2=BACON*D2*D2
      CALL CCFCAL(IS,D1,HT(I),ICR(I),P,.FALSE.,C1,CW,1)
      CALL CCFCAL(IS,D2,HT(I),ICR(I),P,.FALSE.,C2,CW,1)
      BI=(B2-B1)/10.0
      CI=(C2-C1)/10.0
      K=0
      DO 5 J=2,NPER
      K=K+KPER(J-1)
      PN=P*0.985**K
      RDNEXT(J)=RDNEXT(J)+K*CI/P*PN
      BANEXT(J)=BANEXT(J)+K*BI*PN
    5 CONTINUE
    6 CONTINUE
      IF(DEBUG)WRITE(16,*)'AFTER 6 NPER,RDNEXT1-2, BANEXT1-2= ',
     & NPER,RDNEXT(1),RDNEXT(2),BANEXT(1),BANEXT(2)
      GO TO 11
C----------
C  IF CALLED FROM **ESTAB**, DIAMETERS AND DENSITY STATISTICS HAVE
C  BEEN UPDATED AND DENSITIES CORRESPONDING TO BEGINNINGS OF SUBCYCLES
C  CAN BE INTERPOLATED FROM DIFFERENCE BETWEEN OLD AND NEW STATS.  THE
C  TREES ARE SENT TO REGENT WITH A HEIGHT CORRESPONDING TO 5 YEARS AFTER
C  THE START OF THE CYCLE.
C----------
    8 CONTINUE
      BAYR=0.0
      CCFYR=0.0
      IF(LSKIPH) GO TO 9
      BAYR=(BA-TEMBA)/ITOT
      CCFYR=(RELDEN-TEMCCF)/ITOT
    9 CONTINUE
      NYR=5
      DO 10 J=1,NPER
      RDNEXT(J)=TEMCCF+NYR*CCFYR
      BANEXT(J)=TEMBA+NYR*BAYR
      NYR=NYR+KPER(J)
   10 CONTINUE
      IF(DEBUG)WRITE(16,*)'AFTER 10 NPER,RDNEXT1-2, BANEXT1-2= ',
     & NPER,RDNEXT(1),RDNEXT(2),BANEXT(1),BANEXT(2)
   11 CONTINUE
C----------
C  STORE INITIAL HEIGHTS IN WK3; DUB CROWN RATIO FOR NEWLY ESTABLISHED
C  SEEDLINGS.
C----------
      DO 13 I=1,ITRN
      IF(LESTB.AND.I.GE.ITRNIN) THEN
        IPCCF=ITRE(I)
        CRI = 0.89722 - 0.0000461*PCCF(IPCCF)
   12   CONTINUE
        RAN = BACHLO(0.0,1.0,RANN)
        IF(RAN .LT. -1.0 .OR. RAN .GT. 1.0) GO TO 12
        CRI = CRI + 0.07985 * RAN
        IF(CRI .GT. .90) CRI = .90
        IF(CRI .LT. .20) CRI = .20
        ICR(I)=(CRI*100.0)+0.5
        IF(DEBUG)WRITE(JOSTND,*)'DUB CROWN ESTAB TREES I,PCCF,RAN,CRI,I
     &  CR= ',I,PCCF(IPCCF),RAN,CRI,ICR(I)
      ENDIF
      WK3(I)=HT(I)
      WK5(I)=DBH(I)
   13 CONTINUE
C----------
C  DELMAX IS USED TO COMPUTE A DENSITY-DEPENDENT ADJUSTMENT FOR
C  THE HEIGHT-DIAMETER FUNCTION.  DELMAX IS BASED ON AVERAGE HEIGHT AND
C  CCF AT THE BEGINNING OF THE CYCLE AND DOES NOT VARY BY SUBCYCLE.
C----------
      IF(LESTB) THEN
        R=TEMCCF
        AH=TEMAHT
      ELSE
        R=RELDEN
        AH=AVH
      ENDIF
      DELMAX=(AH/36.0)*(0.01232*R-1.75)
      IF(DELMAX.GT.0.0) DELMAX=0.0
C---------
C COMPUTE DENSITY MODIFIER FROM CCF AND TOP HEIGHT FOR CR & UT VARIANT
C---------
      X=AH*(R/100.0)
      IF(X .GT. 300.0) X=300.0
      PCTRED=1.11436 + X*(-.011493 + X*(.43012E-4 + X*(-.72221E-7
     &   + X*(.5607E-10- X*0.1641E-13))))
      IF(PCTRED .GT. 1.0) PCTRED = 1.0
      IF(PCTRED .LT. 0.01) PCTRED = 0.01
      IF(DEBUG) WRITE(JOSTND,9982) AH,R,X,PCTRED
 9982 FORMAT('IN REGENT AVHT,CCF,X,PCTRED = ',4F10.4)
      IF(DEBUG) WRITE(JOSTND,8995) R,AH,DELMAX
 8995 FORMAT('R = ',F10.4,', AH = ',F10.4,', DELMAX = ',F10.4)
C----------
C  ENTER LOOP FOR NEXT SUBCYCLE.
C  AFTER ALL SUBCYCLES ARE COMPLETE, THE END OF CYCLE HEIGHT SHOULD
C  BE IN ARRAY WK3 AND SCALED TO THE APPROPRIATE CYCLE LENGTH. 
C  END OF CYCLE DIAMETER IS STORED IN ARRAY WK5
C----------
      KY=0
      DO 17 J=1,NPER
      KY=KY+KPER(J)
      BAJ=BANEXT(J)
      RDJ=RDNEXT(J)
C----------
C  PPCCF IS A PROPORTIONAL ADJUSTMENT FOR POINT CCF VALUES BASED ON
C  CHANGE IN STAND CCF FOR THE SUBCYCLE.
C----------
      PPCCF=0.0
      IF(RELDEN.GT.0.0) PPCCF=1.0+(RDJ-RELDEN)/RELDEN
      IF(DEBUG)WRITE(16,*)'J,KY,BAJ,RDJ,RELDEN,PPCCF= ',
     & J,KY,BAJ,RDJ,RELDEN,PPCCF
C----------
C  PROCESS ALL TREES WITHIN THIS SUBCYCLE IN SPECIES ORDER.  LOAD
C  SPECIES DEPENDENT CONSTANTS.
C----------
      DO 16 ISPC=1,MAXSP
      I1=ISCT(ISPC,1)
      IF(I1.EQ.0) GO TO 16
      I2=ISCT(ISPC,2)
C
      SELECT CASE (ISPC)
      CASE(17,19)
        BKPT=1.0
      CASE(14,15)
        BKPT=99.0
      CASE DEFAULT
        BKPT=3.0
      END SELECT
C----------
C  ASSIGN VARIANT ACCORDING TO SPECIES
C  SET SCALE AND SCALE2 DEPENDING ON WHAT VARIANT THE EQUATIONS FOR
C  THE SPECIES CAME FROM.
C----------
      CIVAR = .FALSE.
      TTVAR = .FALSE.
      UTVAR = .FALSE.
C
      SELECT CASE (ISPC)
      CASE(11,12,16)
        TTVAR = .TRUE.
        SCALE=FLOAT(KPER(J))/REGYR
        IF(.NOT.LSKIPH)SCALE2 = YR/FLOAT(NTYR)
      CASE(1:10,18)
        CIVAR = .TRUE.
        SCALE = FLOAT(NTYR)/REGYR
        IF(.NOT.LSKIPH)SCALE2 = YR/FLOAT(NTYR)
      CASE(13,14,15,17,19)
        UTVAR = .TRUE.
        SCALE=FLOAT(NTYR)/YR
        IF(.NOT.LSKIPH)SCALE2 = YR/FLOAT(NTYR)
      END SELECT
C
      IF(DEBUG)WRITE(JOSTND,*)'CIVAR,TTVAR,UTVAR,LSKIPH,SCALE,',
     &'SCALE2= ',CIVAR,TTVAR,UTVAR,LSKIPH,SCALE,SCALE2
      IF(TTVAR .AND. LSKIPH)GOTO 16
C----------
C  SPECIES BASED ON A 10-YR REGYR ONLY NEED ONE PASS THROUGH THIS LOGIC
C----------
      IF((CIVAR .OR. UTVAR) .AND. J.GT.1)GO TO 16
C
      XRHGRO=XRHMLT(ISPC)
      XRDGRO=XRDMLT(ISPC)
      IF(CIVAR)THEN
        FNT=FINT
        IF(LESTB) THEN
          IF(FINT.LE.5.0) THEN
            LSKIPH=.TRUE.
          ELSE
            FNT=FNT-5.0
          ENDIF
        ENDIF
        CON = RHCON(ISPC) * EXP(HCOR(ISPC))
      ELSE
        CON=RHCON(ISPC)*EXP(HCOR(ISPC))
      ENDIF
      XMX=XMAX(ISPC)
      XMN=XMIN(ISPC)
      IF(DEBUG)WRITE(16,*)'ISPC,RHCON,HCOR,CON,XMX,XMN= ',
     & ISPC,RHCON(ISPC),HCOR(ISPC),CON,XMX,XMN
C----------
C  COMPUTE POTENTIAL GROWTH FROM SITE INDEX AND SPECIES.
C----------
      SI=SITEAR(ISPC)
      IF(SI .GT. SHI(ISPC)) SI=SHI(ISPC)
      IF(SI .LE. SLO(ISPC)) SI=SLO(ISPC) + 0.5
      RELSI=(SI-SLO(ISPC))/(SHI(ISPC)-SLO(ISPC))
      RSIMOD = 0.5 * (1.0 + RELSI)
      X=RELSI*100.0
      SJ=SITEAR(ISPC)
      IF(DEBUG) WRITE(JOSTND,9981) ISPC,SI,RELSI,X
 9981 FORMAT('IN REGENT ISPC,SI,RELSI,X = ',
     &I6,F7.2,F10.3,F10.4)
C
      SPTBA=PTBA(ISPC)
      SHDM1=HDM1(ISPC)
      SHDM2=HDM2(ISPC)
      SBAL =BAL(ISPC)
      SCR  =CR(ISPC)
      SCRSQ=CRSQ(ISPC)
      SRLHT=RLHT(ISPC)
      SBA  =STBA(ISPC)
      SPBAL=PBAL(ISPC)
      SHTBA=HTBA(ISPC)
      SCNST=CNST(ISPC)
      SDHCN=DHCN(ISPC)
      SDHHT=DHHT(ISPC)
      SDHCR=DHCR(ISPC)
C----------
C  PROCESS NEXT TREE RECORD.  STORE INTERMEDIATE HEIGHTS IN WK3.
C----------
      DO 15 I3=I1,I2
C----------
C  BYPASS INCREMENT CALCULATION IF DBH IS GREATER THAN XMX OR IF
C  CALL IS FROM **ESTAB** AND TREE SUBSCRIPT IS LESS THAN ITRNIN.
C----------
      I=IND1(I3)
      D=DBH(I)
      H=HT(I)
      IP=ITRE(I)
      IF(DEBUG)WRITE(JOSTND,*)'ISPC,I,D,XMX,LESTB,ITRNIN= ',
     &ISPC,I,D,XMX,LESTB,ITRNIN
      IF(D.GE.XMX) GO TO 15
C
      IF(LESTB .AND. I.LT.ITRNIN) GO TO 15
      P=PROB(I)
      H1=WK3(I)
      D1=WK5(I)
      ZBAL=BAJ*(100.0-PCT(I))*0.0001
      CALL CCFCAL(ISPC,D,H1,ICR(I),P,.FALSE.,C1,CW,1)
      B1=BACON*D*D
      BARK=BRATIO(ISPC,D,H)
      IF(DEBUG)WRITE(16,*)'I,D1,H1= ',I,D1,H1
C
      IF(UTVAR)THEN
        POTHTG = ((SJ/5.0)*(SJ*1.5-H)/(SJ*1.5))* 0.83
        IF(DEBUG)WRITE(JOSTND,*)'I,SJ,H,POTHTG= ',
     &  I,SJ,H,POTHTG
      ENDIF
C----------
C  DETERMINE POINT CCF FOR THIS SUBCYCLE (BOUND BETWEEN 25 AND 300).
C----------
      IPCCF=ITRE(I)
      TPCCF=PCCF(IPCCF)*PPCCF
      IF(TPCCF.GT.300.0) TPCCF=300.0
      IF(TPCCF.LT.25.0) TPCCF=25.0
      CRI=FLOAT(ICR(I))
C----------
C  CI VARIANT CODE: SPECIES 1-10 AND 18
C  COMPUTE ADJUSTMENT FOR BIAS, DENSITY, AND RELATIVE SIZE.
C----------
      IF(CIVAR)THEN
        IF(LESTB) THEN
          PTBALI = BA       *(1.0-(PCT(I)/100.))
        ELSE
          PTBALI = PTBAA(IP)*(1.0-(PCT(I)/100.))
        ENDIF
        IF(ATAVH .GT. 0.0) THEN
          RELHT=HT(I)/ATAVH
        ELSE IF(AVH .GT. 0.0) THEN
          RELHT=HT(I)/AVH
        ELSE
          RELHT=1.5
        ENDIF
        IF(RELHT.GT.1.5) RELHT=1.5
        TBAL=(1.0 - (PCT(I)/100.)) * BA
        IICR=((ICR(I)-1)/10)+1
        IF(IICR.GT.9) IICR=9
        RCR=FLOAT(IICR)
C----------
C  COMPUTE HEIGHT INCREMENT.  STORE UPDATED HEIGHT IN WK3.
C----------
        HTGRL = SCNST + SHTBA*RELHT*PTBAA(IP) + SPBAL*PTBALI
     &         + SBA*BA + SRLHT*RELHT + SCRSQ*RCR*RCR + SCR*RCR
     &         + SBAL*TBAL + SHDM1*RHDM1 + SHDM2*RHDM2 + SPTBA*PTBAA(IP)
C
        IF(DEBUG)WRITE(JOSTND,*)'CI SECTION, I,HTGRL= ',I,HTGRL
C----------
C  TT VARIANT CODE: 11=WB, 12=PY, 16=LM
C----------
      ELSEIF(TTVAR)THEN
          CALL SMHTGF(ISPC,I,HTGRL,CRI,TPCCF,LESTB,DEBUG)
          IF(DEBUG) WRITE(JOSTND,*)'TT SECTION, I,POTHTG,PCTRED,',
     &    'VIGOR,CON,X,HTGRL= ',I,POTHTG,PCTRED,VIGOR,CON,X,HTGRL
          IF(DEBUG)WRITE(16,*)'AFTER SMHTGF,I,HTGRL,CRI,TPCCF= ',
     &     I,HTGRL,CRI,TPCCF
          IF(DEBUG)WRITE(16,*)'LVING TTVAR SECTION RSIMOD,HTGRL= ',
     &     RSIMOD,HTGRL
C----------
C  UT VARIANT CODE: 13=AS, 14=WJ, 15=MC, 17=CW, 19=OH
C----------
      ELSEIF(UTVAR)THEN
C----------
C COMPUTE HT GROWTH AND AGE FOR ASPEN. EQN FROM WAYNE SHEPPARD RMRS.
C----------
        IF(ISPC .EQ. 13)THEN
          SITAGE = 0.0
          SITHT = 0.0
          AGMAX = 0.0
          HTMAX = 0.0
          HTMAX2 = 0.0
          D1F = DBH(I)
          D2F = 0.0
          IF(DEBUG)WRITE(JOSTND,*)'IN HTGF, CALLING FINDAG I= ',I
          CALL FINDAG(I,ISPC,D1F,D2F,H,SITAGE,SITHT,AGMAX,HTMAX,HTMAX2,
     &                DEBUG)
C
          IF(LESTB)THEN
            SITAGE = ABIRTH(I)
          ENDIF
          HITE1 = 26.9825 * SITAGE**1.1752
          AG2 = SITAGE+10.0
          HITE2 = 26.9825 * AG2**1.1752
          HTGR = (HITE2-HITE1)/(2.54*12.0) * RSIMOD * CON
C----------
C GROWTH RATES APPEAR HIGH, REDUCE BY 25 PERCENT. DIXON 8-27-92
C----------
          HTGRL = HTGR * .75
          IF(DEBUG)WRITE(16,*)'I,HITE1,HITE2,RSIMOD,CON,HTGR,HTGRL= ',
     &    I,HITE1,HITE2,RSIMOD,CON,HTGR,HTGRL     
          GO TO 33
        ENDIF
C
          X=CRI/100.
          VIGOR = (150.0 * (X**3.0)*EXP(-6.0*X))+0.3
          IF(VIGOR .GT. 1.0)VIGOR=1.0
C----------
C  VIGOR ADJUSTMENT TO DRASTIC FOR PINYON, JUNIPER, CUT IT BY TWO-THIRDS
C----------
          SELECT CASE (ISPC)
          CASE(14)
            VIGOR=1.-((1.-VIGOR)/3.)
          END SELECT
C
          HTGRL=POTHTG*PCTRED*VIGOR*CON
          IF(DEBUG) WRITE(JOSTND,*)'UT SECTION, I,POTHTG,PCTRED,',
     &    'VIGOR,CON,X,HTGRL= ',I,POTHTG,PCTRED,VIGOR,CON,X,HTGRL
      ENDIF
   33 CONTINUE
C----------
C     GET A MULTIPLIER FOR THIS TREE FROM PPREGT TO ACCOUNT FOR
C     THE DENSITY EFFECTS OF NEIGHBORING TREES.
C----------
      IF(CIVAR)THEN
        SELECT CASE (ISPC)
        CASE(9)
          PPBA=PTBAA(IP)
          PPBAD=SPTBA
        CASE DEFAULT
          PPBA=BA
          PPBAD=SBA
        END SELECT
        PPBAL=SPBAL+SBAL
        XPPMLT=0.
      ELSE
        PPBA=0.
        PPBAD=0.
        PPBAL=0.
        XPPMLT=0.
      ENDIF
      CALL PPREGT (XPPMLT,PPBA,TBAL,RELHT*SHTBA,PPBAD,PPBAL)
C----------
C H2 IS THE END OF CYCLE HEIGHT ON A FINT-YEAR BASIS
C----------
      IF(CIVAR)THEN
        H2 = H1 + HTGRL*SCALE*XRHGRO*CON + XPPMLT
      ELSEIF(TTVAR)THEN
        H2 = H1 + HTGRL*SCALE*XRHGRO*CON*WK4(I) + XPPMLT
      ELSEIF(UTVAR)THEN
        H2 = H1 + HTGRL*SCALE*XRHGRO  + XPPMLT
        IF(DEBUG)WRITE(16,*)'H2,H1,HTGRL,SCALE,XRHGRO,XPPMLT= ',
     & H2,H1,HTGRL,SCALE,XRHGRO,XPPMLT
      ELSE
        H2 = H1 + HTGRL*SCALE + XPPMLT
      ENDIF
      WK3(I)=H2
      IF(DEBUG)WRITE(JOSTND,*)'I,H1,HTGRL,XPPMLT,H2,KPER,REGYR,',
     &'XRHGRO,WK4,CON= ',
     &I,H1,HTGRL,XPPMLT,H2,KPER(J),REGYR,XRHGRO,CON,WK4(I)
C----------
C  UPDATE DENSITY FOR NEXT SUBCYCLE.  IF ONLY ONE SUBCYCLE OR
C  IF INITIAL DBH IS GREATER THAN 3 INCHES, BYPASS DENSITY UPDATE.
C  DIAMETER IS ADJUSTED FOR DENSITY AND USER-SUPPLIED MULTIPLIER.
C  INCREMENT IS DETERMINED FROM THE DIFFERENCE BETWEEN COMPUTED
C  DIAMETERS AND IS BOUNDED TO BE GREATER THAN OR EQUAL TO ZERO.
C----------
      IF(CIVAR)THEN
        WK3(I)=H2
        D2=D
        WK5(I)=D2
      ELSEIF(TTVAR)THEN
        RD = PCCF(ITRE(I))
        HLESS4 = H2 - 4.5
        D2 = 0.000231*HLESS4*CRI - 0.00005*HLESS4*RD
     &           + 0.001711*CRI + 0.17023*HLESS4 + 0.3
        D2=D2*XRDGRO
        IF(D2.LT.DIAM(ISPC)) D2=DIAM(ISPC)
        IF(DEBUG)WRITE(JOSTND,*)'TT SECTION, I,ISPC,CRI,PCCF,H2,D2,',
     &  'XRDGRO= ',I,ISPC,CRI,PCCF(ITRE(I)),H2,D2,XRDGRO
        WK3(I)=H2
        WK5(I)=D2
        IF(J.GE.NPER .OR. D.GE.3.0 .OR. H2.LE.4.5)GO TO 14
C----------
C  UTAH VARIANT SPECIES
C----------
      ELSE
        SELECT CASE (ISPC)
        CASE(13)
          D2 = -0.41227 + 0.16944*H2 + 0.003191*CRI - 0.00220*RD
          IF(DEBUG)WRITE(16,*)'I,H2,CRI,RD,D2= ',I,H2,CRI,RD,D2
C        
        CASE DEFAULT
          WK3(I)=H2
          D2=D
          WK5(I)=D2
          IF((ISPC.EQ.17 .OR. ISPC.EQ.19) .AND. D.GE.BKPT)
     &    GO TO 14
          IF(H2.LE.4.5) THEN
            D2=D+0.001*H2
            WK5(I)=D2
          ENDIF
          IF(DEBUG)WRITE(JOSTND,*)'I,D,D2,H2,SITEAR= ',
     &    I,D,D2,H2,SITEAR(ISPC)
        END SELECT
      ENDIF
C----------
C  COMPUTE ADJUSTMENT TO STAND BASAL AREA AND CCF FOR NEXT SUBCYCLE.
C  ASSUME A 1.5 PERCENT ANNUAL MORTALITY RATE.
C----------
      CALL CCFCAL(ISPC,D1,H1,ICR(I),P,.FALSE.,C1,CW,1)
      CALL CCFCAL(ISPC,D2,H2,ICR(I),P,.FALSE.,C2,CW,1)
      RDNEXT(J+1)=RDNEXT(J+1)+KY*(C2-C1)/10.*0.985**KY
        BANEXT(J+1)=BANEXT(J+1)+(BACON*(D2*D2-D1*D1))*P*0.985**KY
 8897 CONTINUE
      IF(DEBUG) WRITE(JOSTND,8997) I,D2,BANEXT(J+1),RDNEXT(J+1)
 8997 FORMAT('UPDATE DENSITY: TREE = ',I4,', D2 = ',F8.4,
     & ', BANEXT(J+1) = ',F8.2,', RDNEXT(J+1) = ',F8.2)
C----------
C  END OF TREE LOOP WITHIN SPECIES. PRINT DEBUG IF REQUESTED.
C----------
   14 CONTINUE
      IF(.NOT.DEBUG) GO TO 15
      WRITE(JOSTND,8999) J,KPER(J),ISPC,I,H1,H2,RDJ,ZBAL,
     &                   BAJ,PCT(I)
 8999 FORMAT('IN REGENT L1: SUBC=',I2,', KPER=',I2,', SP=',I2,
     &  ', I=',I4,', H1=',F8.4,', H2=',F8.4,/T4,'RDJ=',
     &  F8.4,', ZBAL=',F8.4,', BAJ=',F8.4,', PCT=',F8.4)
   15 CONTINUE
C----------
C  END OF SPECIES LOOP WITHIN SUBCYCLE
C----------
   16 CONTINUE
      IF(DEBUG)WRITE(16,*)'AFTER 16 CIVAR,TTVAR,UTVAR= ',
     &CIVAR,TTVAR,UTVAR
C----------
C  END OF SUBCYCLE LOOP.  END OF PERIOD HEIGHT IS STORED IN WK3.
C----------
   17 CONTINUE
C----------
C  AFTER LAST SUBCYCLE, COMPUTE ACTUAL HEIGHT INCREMENT FOR FULL CYCLE BY
C  SUBTRACTION; CONVERT BACK TO LOG SCALE TO ADD IN RANDOM ERROR.
C----------
      IF(DEBUG)WRITE(16,*)'ENTERING DO 30 LOOP'
   18 CONTINUE
      DO 30 ISPC=1,MAXSP
      I1=ISCT(ISPC,1)
      IF(I1.EQ.0) GO TO 30
      I2=ISCT(ISPC,2)
C
      SELECT CASE (ISPC)
      CASE(17,19)
        BKPT=1.0
      CASE(14,15)
        BKPT=99.0
      CASE DEFAULT
        BKPT=3.0
      END SELECT
C
C----------
C  ASSIGN VARIANT ACCORDING TO SPECIES
C----------
      CIVAR = .FALSE.
      TTVAR = .FALSE.
      UTVAR = .FALSE.
      SELECT CASE (ISPC)
      CASE(11,12,16)
        TTVAR = .TRUE.
        SCALE=YR/FINT
        IF(.NOT.LSKIPH)SCALE2 = YR/FLOAT(NTYR)
      CASE(1:10,18)
        CIVAR = .TRUE.
        SCALE = FLOAT(NTYR)/REGYR
        IF(.NOT.LSKIPH)SCALE2 = YR/FLOAT(NTYR)
      CASE(13,14,15,17,19)
        UTVAR = .TRUE.
        SCALE=FLOAT(NTYR)/YR
        IF(.NOT.LSKIPH)SCALE2 = YR/FLOAT(NTYR)
      END SELECT
C
      XRDGRO=XRDMLT(ISPC)
      XMX=XMAX(ISPC)
      XMN=XMIN(ISPC)
      DGMX=DGMAX(ISPC) * SCALE
      IF(TTVAR)DGMX=FINT*DGMAX(ISPC)
      IF(DEBUG)WRITE(16,*)'ENTERING 25 LOOP, CIVAR,TTVAR,UTVAR,',
     &'XMX,XMN,AX,BX,DGMX,LSKIPH= ',
     &CIVAR,TTVAR,UTVAR,XMX,XMN,AX,BX,DGMX,LSKIPH
      IF(DEBUG)WRITE(16,*)'YR,NTYR,REGYR,SCALE,SCALE2= ',
     & YR,NTYR,REGYR,SCALE,SCALE2
C
      DO 25 I3=I1,I2
      I=IND1(I3)
      D=DBH(I)
      IF(DEBUG)WRITE(16,*)'I,D= ',I,D
      CRI = FLOAT(ICR(I))
      IICR=((ICR(I)-1)/10)+1
      IF(IICR.GT.9) IICR=9
      RCR=FLOAT(IICR)
      IF(D.GE.XMX) GO TO 25
      IF(LESTB .AND. I.LT.ITRNIN) GO TO 25
      K=I
      L=0
      H=HT(I)
      HK=WK3(I)
C
      D1=DIAM(ISPC)
      DK=WK5(I)
      HTGR1=HK-H
      HTGR = HTGR1
      IF(DEBUG)WRITE(16,*)'I,H,HK,HTGR1,DK= ',I,H,HK,HTGR1,DK
      IF(TTVAR .AND. D.LT.D1)D=D1
C----------
C  IF CALLED FROM **ESTAB** AND TOTAL CYCLE LENGTH IS LESS THAN OR EQUAL
C  TO 5 YEARS, SKIP HEIGHT INCREMENT CALCULATION BUT ASSIGN CR AND DBH.
C----------
      IF((CIVAR .OR. UTVAR) .AND. LSKIPH) THEN
         HTG(K)=0
         GO TO 20
      ELSEIF(TTVAR .AND. LSKIPH)THEN
         IPCCF=ITRE(I)
         TPCCF=PCCF(IPCCF)
         IF(H.GE.4.5) THEN
C        
           SELECT CASE (ISPC)
           CASE(11,12,16)
             HLESS4 = H - 4.5
             DK = 0.000231*HLESS4*CRI - 0.00005*HLESS4*TPCCF
     &             + 0.001711*CRI + 0.17023*HLESS4 + 0.3
           CASE(13)
             DK = -0.41227 + 0.16944*H + 0.003191*CRI - 0.00220*TPCCF
           END SELECT
C        
           DK=DK*XRDGRO
           IF(DK.LT.D) DK=D
           DBH(I)=DK
           DG(I)=DK
           IF(DG(I).GT.DGMX) DG(I)=DGMX
         ENDIF
         GO TO 25
      ENDIF
      IF(CIVAR)THEN
        HTGR1=HK-H
        IF (HTGR1.LT.0.0) HTGR1=0.0
      ENDIF
C----------
C  DRAW RANDOM INCREMENT GIVEN EXPECTED VALUE, HTGR, AND STD. DEV.,
C  HSIGMA.  BOUND DRAW TO (-1.5*SD < ZZRAN < 1.0*SD); IF TRIPLING,
C  EACH TRIPLE GETS A NEW RANDOM NUMBER.  DO NOT TRIPLE IF CALLING
C  FROM **ESTAB**.  DO NOT APPLY HEIGHT GROWTH MULTIPLIER; MULTIPLIER
C  WAS USED DURING SUBCYCLING.
C----------
      ICRK=ICR(I)
  918 CONTINUE
      IF(.NOT.TTVAR)THEN
        IF(CIVAR)THEN
  920     CONTINUE
          ZZRAN=0.0
          IF (DGSD.GE.1.0) ZZRAN = BACHLO(0.0,1.0,RANN)
          IF((ZZRAN .GT. 0.5) .OR. (ZZRAN .LT. -2.0)) GO TO 920
          HTGR = (HTGR1 +ZZRAN*0.1*SCALE)
          IF(DEBUG)WRITE(JOSTND,*)'CI SECTION K,ZZRAN,XRHGRO,SCALE,',
     &    'CON,HTGR,HTGR1= ',K,ZZRAN,XRHGRO,SCALE,CON,HTGR,HTGR1
C
C UTAH VARIANT LOGIC: 13=AS, 14=WJ, 15=MC, 17=CW, 19=OH
C
        ELSE
  919     CONTINUE
          ZZRAN=0.0
          IF (DGSD.GE.1.0) ZZRAN = BACHLO(0.0,1.0,RANN)
          IF((ZZRAN .GT. 0.5) .OR. (ZZRAN.LT.-2.0)) GOTO 919
          IF(DEBUG)WRITE(JOSTND,9984) HTGR1,ZZRAN,XRHGRO,WK4(I)
 9984     FORMAT('IN REGENT 9984 FORMAT',4(F10.4,2X))
C
          SELECT CASE (ISPC)
          CASE(13)
            HTGR = (HTGR1 +ZZRAN*0.1*(FLOAT(NTYR)/10.))
            IF(DEBUG)WRITE(16,*)'I,HTGR,ZZRAN,NTYR,XRHGRO= ',
     &       I,HTGR,ZZRAN,NTYR,XRHGRO
          CASE(14)
            HTGR = (HTGR1 +ZZRAN*0.1*(FLOAT(NTYR)/10.))
          CASE(17,19)
            HTGR = (HTGR1 +ZZRAN*0.2*(FLOAT(NTYR)/10.))*WK4(I)
          CASE(15)
            HTGR = (HTGR1 +ZZRAN*0.1*(FLOAT(NTYR)/10.))
          END SELECT
          IF(DEBUG)WRITE(JOSTND,*)'UT SECTION K,ZZRAN,XRHGRO,',
     &    'HTGR= ',K,ZZRAN,XRHGRO,HTGR
          ENDIF       
        ENDIF
C----------
C THIS CHECK ADDED BY DIXON 3/4/09 TO PREVENT NEGATIVE HEIGHT GROWTH
C MAY NEED A MORE ELEGANT FIX AT SOME POINT; BUT IT WORKS.
C----------
        IF(HTGR .LT. 0.1)THEN
          HTGR = 0.1
          IF(DEBUG)WRITE(JOSTND,*)'CI/CR/UT RESETTING HTGR ',
     &    'TO 0.1 FOOT'
      ENDIF       
C----------
C  COMPUTE WEIGHTS FOR THE LARGE AND SMALL TREE HEIGHT INCREMENT
C  ESTIMATES.  IF DBH IS LESS THAN OR EQUAL TO XMN OR IF CALLED
C  FROM **ESTAB**, THE LARGE TREE PREDICTION IS IGNORED (XWT=0.0).
C----------
      XWT=0.0
      IF(D.LE.XMN.OR.LESTB) GO TO 19
      XWT=(D-XMN)/(XMX-XMN)
   19 CONTINUE
      IF(DEBUG)WRITE(JOSTND,*)'WEIGHTING K,HTGR,HTG,XWT= ',
     &K,HTGR,HTG(K),XWT 
      HTG(K)=HTGR*(1.0-XWT) + XWT*HTG(K)
C----------
C CHECK FOR SIZE CAP COMPLIANCE.
C----------
      IF((H+HTG(K)).GT.SIZCAP(ISPC,4))THEN
        HTG(K)=SIZCAP(ISPC,4)-H
        IF(HTG(K) .LT. 0.1) HTG(K)=0.1
      ENDIF
C
   20 CONTINUE
C----------
C  ASSIGN DBH AND COMPUTE DBH INCREMENT FOR TREES WITH DBH LESS
C  THAN BREAKPOINT.  COMPUTE 10-YEAR DBH INCREMENT REGARDLESS OF
C  PROJECTION PERIOD LENGTH.  BYPASS INCREMENT CALCULATION IF
C  D GE BREAKPOINT.
C----------
      IF(D .GE. BKPT) GO TO 23
      HK=H+HTG(K)
      IF(.NOT.TTVAR .AND. HK.LT.4.5) THEN
        DG(K)=0.0
        DBH(K)=D+0.001*HK
      ELSE
        IF(CIVAR)THEN
          DK =EXP(  SDHCN + SDHHT*ALOG(HK) + SDHCR*ALOG(RCR) )
          IF(H .LT. 4.5) THEN
            DKK=D
          ELSE
            DKK =EXP( SDHCN + SDHHT*ALOG(H) + SDHCR*ALOG(RCR) )
          ENDIF
          IF(DEBUG)WRITE(JOSTND,*)'I,ISPC,H,HK,DK,DKK,XRDGRO= ',
     &    I,ISPC,H,HK,DK,DKK,XRDGRO
        ELSEIF(UTVAR)THEN
C
          SELECT CASE(ISPC)
          CASE(14)
            DK=(HK-4.5)*10./(SITEAR(ISPC)-4.5)
            IF(DK .LT. 0.1) DK=0.1
            DKK=(H-4.5)*10./(SITEAR(ISPC)-4.5)
            IF(DKK .LT. 0.1) DKK=0.1
            IF(H .LT. 4.5) DKK=D
          CASE(13,15,17,19)
            BX=HT2(ISPC)
            IF(IABFLG(ISPC).EQ.1) THEN
              AX=HT1(ISPC)
            ELSE
              AX=AA(ISPC)
            ENDIF
C----------
C  SPECIES FROM SO (ORIGINALY FROM WC) VARIANT
C----------
            IF(ISPC.EQ.15)THEN
C----------
C   BEGIN THE DIAMETER LOOKUP SECTION
C      DK = DIAMETER WITH HTG ADDED TO THE STARTING HEIGHT
C      DKK  = DIAMETER AT THE START OF THE PROJECTION
C   DAT45  = DIAMETER AT 4.5 FEET PREDICTED FROM EQUATION.
C----------
              CRCODE = FLOAT(ICR(K))/10.0
              DAT45 = 3.1020 + 0.0210*4.5
C
              DKK = 3.1020 + 0.0210*H
              IF(DKK .LT. 0.0) DKK=D
C
              DK = 3.1020 + 0.0210*HK
              IF(DK .LT. DKK) DK=DKK+.01
              IF(DEBUG)WRITE(JOSTND,*)'I,ISPC,DBH,H,HK,DK,DKK,CRCODE,',
     &        '= ',I,ISPC,DBH(I),H,HK,DK,DKK,CRCODE
C----------
C  USE INVENTORY EQUATIONS IF CALIBRATION OF THE HT-DBH FUNCTION IS TURNED
C  OFF, OR IF WYKOFF CALIBRATION DID NOT OCCUR.
C  NOTE: THIS SIMPLIFIES TO IF(IABFLB(ISPC).EQ.1) BUT IS SHOWN IN IT'S
C        ENTIRITY FOR CLARITY.
C----------
              IF(.NOT.LHTDRG(ISPC) .OR. 
     &        (LHTDRG(ISPC) .AND. IABFLG(ISPC).EQ.1))THEN
                P2 = 1709.7229
                P3 = 5.8887
                P4 = -0.2286
                HAT3 = 4.5 + P2 * EXP(-1.*P3*3.0**P4)
                IF(HK .GE. HAT3) THEN
                  DK = EXP( ALOG((ALOG(HK-4.5)-ALOG(P2))/(-1.*P3)) *
     &                 1./P4)
                ELSE
                  DK = (((HK-4.51)*2.7)/(4.5+P2*EXP(-1.*P3*(3.**P4))
     &                 -4.51))+0.3
                ENDIF
                IF(H .LE. 4.5) THEN
                  DKK=D
                ELSE
                  IF(H .GE. HAT3) THEN
                    DKK = EXP( ALOG((ALOG(H-4.5)-ALOG(P2))/(-1.*P3)) *
     &                   1./P4)
                  ELSE
                    DKK = (((H-4.51)*2.7)/(4.5+P2*EXP(-1.*P3*(3.**P4))
     &                   -4.51))+0.3
                  ENDIF
                ENDIF
                IF(DEBUG)WRITE(JOSTND,*)'INV EQN DUBBING ISPC,H,HK,DK,'
     &          ,'DKK= ',ISPC,H,HK,DK,DKK
                IF(DEBUG)WRITE(JOSTND,*)'ISPC,LHTDRG,IABFLG= ',
     &          ISPC,LHTDRG(ISPC),IABFLG(ISPC)
              ENDIF
            ELSE
              DK=(BX/(ALOG(HK-4.5)-AX))-1.0
              IF(DK .LT. 0.1) DK=0.1
              IF(H .LE. 4.5) THEN
                DKK=D
              ELSE
                DKK=(BX/(ALOG(H-4.5)-AX))-1.0
              ENDIF
              IF(DEBUG)WRITE(JOSTND,9986) AX,BX,ISPC,HK,BARK,
     &                                  XRDGRO,DK,DKK
 9986         FORMAT('IN REGENT 9986 FORMAT AX,BX,ISPC,HK',
     &        ' BARK,XRDGRO,DK,DKK= '/T12, F10.3,2X,F10.3,2X,I5,2X,
     &        5F10.3)
            ENDIF
          END SELECT
C
        ELSEIF(TTVAR)THEN
C----------
C  ASSIGN DIAMETER INCREMENT AND SCALE FOR BARK THICKNESS AND
C  PERIOD LENGTH.  SCALE ADJUSTMENT IS ON GROWTH IN DDS RATHER
C  THAN INCHES OF DG TO MAINTAIN CONSISTENCY WITH GRADD.
C----------
          IF(HK .GE. 4.5) THEN
            RD = PCCF(ITRE(I))
C        
           SELECT CASE (ISPC)
           CASE(11,12,16)
             HLESS4 = HT(I) - 4.5
             DKK = 0.000231*HLESS4*CRI - 0.00005*HLESS4*RD
     &             + 0.001711*CRI + 0.17023*HLESS4 + 0.3
           CASE(13)
C             DKK = -0.41227 + 0.16944*HT(I) + 0.003191*CRI - 0.00220*RD
              IF(DEBUG)WRITE(16,*)'I,H,D= ',I,H,D
             BX=HT2(ISPC)
             IF(IABFLG(ISPC).EQ.1) THEN
               AX=HT1(ISPC)
             ELSE
               AX=AA(ISPC)
             ENDIF
             DK=(BX/(ALOG(HK-4.5)-AX))-1.0
             IF(DK .LT. 0.1) DK=0.1
             IF(H .LE. 4.5) THEN
               DKK=D
             ELSE
               DKK=(BX/(ALOG(H-4.5)-AX))-1.0
             ENDIF
             IF(DEBUG)WRITE(JOSTND,9786) AX,BX,ISPC,HK,BARK,
     &                              XRDGRO,DK,DKK
 9786        FORMAT('IN REGENT 9986 FORMAT AX,BX,ISPC,HK',
     &       'BARK,XRDGRO,DK,DKK= '/T12, F10.3,2X,F10.3,2X,I5,2X,5F10.3)
           END SELECT
C        
            IF(DEBUG)WRITE(JOSTND,*)'I,ISPC,HT,CRI,RD,DKK = ',
     &      I,ISPC,HT(I),CRI,RD,DKK
C            IF(DKK.LT.DIAM(ISPC))DKK=DIAM(ISPC)
            BARK = BRATIO(ISPC,D,H)
            DG(K)=(DK-DKK)*BARK
            DDS = DG(K)*(2.0*BARK*D+DG(K))*SCALE2
            IF(DEBUG)WRITE(JOSTND,*)'K,D,DKK,DK,BARK,DDS,DG(K)= ',
     &      K,D,DKK,DK,BARK,DDS,DG(K)
            DG(K)=SQRT((D*BARK)**2.0+DDS)-BARK*D
          ELSE
            DG(K)=0.0
          ENDIF
        ENDIF
C----------
C       IF CALLING FROM **ESTAB** ASSIGN DIAMETER AND DIAMETER
C       INCREMENT.
C----------
        IF(LESTB) THEN
C
          SELECT CASE (ISPC)
          CASE(15)
            IF(DAT45.GT.0.0 .AND. HK.GE.4.5 .AND. LHTDRG(ISPC) .AND.
     &         IABFLG(ISPC).EQ.0) THEN
             DBH(K)=DK - DAT45 + DIAM(ISPC)
            ELSE
              DBH(K)=DK
            ENDIF
          CASE DEFAULT
            DBH(K)=DK
          END SELECT
C
          IF(TTVAR.AND.DG(K).GT.DGMX)DG(K)=DGMX
          IF(UTVAR .OR. CIVAR)THEN
            IF(DBH(K).LT.DIAM(ISPC)) DBH(K)=DIAM(ISPC)
            DBH(K)=DBH(K)+0.001*HK
            DG(K)=DBH(K)
          ENDIF
        ELSE
C----------
C         DIAMETER INCREMENT IS THE DIFFERENCE BETWEEN COMPUTED
C         DIAMETERS.  MULTIPLIER IS APPLIED TO DIAMETER INCREMENT
C         AT THIS POINT.
C----------
          IF(.NOT.TTVAR)THEN
            IF(CIVAR)THEN
              IF(H .LT. 4.5 )DKK = D
              IF(DK.LT.0.0 .OR. DKK.LT.0.0)THEN
                DG(K)=HTG(K)*0.2*BARK*XRDGRO
                DK=D+DG(K)
              ELSE
                DG(K)=(DK-DKK)*BARK*XRDGRO
              ENDIF
              IF(DG(K) .LT. 0.0) DG(K)=0.0
            ELSEIF(UTVAR)THEN
C
              SELECT CASE (ISPC)
C
C----------
C FROM SO (ORIGINALLY WC)
C PROBLEM WITH HARDWOOD EQN, REDUCES TO .021*HG. SET TO RULE
C OF THUMB VALUE .1*HG FOR NOW. DIXON 11-04-92
C DON'T USE R.O.T. IF USING INVENTORY EQNS.  DIXON 03-31-98
C
C IF THE TREE JUST REACHED 4.5 FEET, SET DKK TO PRESENT DBH.
C RJ 12/6/91
C----------
              CASE(15)
                IF(H .LT. 4.5 )DKK = D
                BARK=BRATIO(ISPC,D,H)
                IF(DEBUG)WRITE(JOSTND,*)'BARK,XRDGRO= ',BARK,XRDGRO
                IF(DK.LT.0.0 .OR. DKK.LT.0.0)THEN
                  DG(K)=HTG(K)*0.2*BARK*XRDGRO
                  DK=D+DG(K)
                ELSE
                  DG(K)=(DK-DKK)*BARK*XRDGRO
                ENDIF
                IF(DEBUG)WRITE(JOSTND,*)'K,DK,DKK,DG,BARK,XRDGRO= ',
     &           K,DK,DKK,DG(K),BARK,XRDGRO
                IF(LHTDRG(ISPC) .AND. IABFLG(ISPC).EQ.0)
     &           DG(K)=0.1*HTG(K)*XRDGRO
                IF(DG(K) .LT. 0.0) DG(K)=0.1
                IF (DG(K) .GT. DGMX) DG(K)=DGMX
                IF(DEBUG)WRITE(JOSTND,*)'HARDWOOD EQU DG(K),DGMX,',
     &           'LHTDRG= '
                IF(DEBUG)WRITE(JOSTND,*)DG(K),DGMX,LHTDRG(ISPC)
C
              CASE(13,14,17,19)
                BARK=BRATIO(ISPC,D,H)
                IF(DK.LT.0.0 .OR. DKK.LT.0.0)THEN
                  DG(K)=HTG(K)*0.2*BARK*XRDGRO
                  DK=D+DG(K)
                ELSE
                  DG(K)=(DK-DKK)*BARK*XRDGRO
                ENDIF
                IF(DG(K).GT.DGMX)DG(K)=DGMX
                IF(DEBUG)WRITE(JOSTND,*)'K,DK,DKK,DG= ',K,DK,DKK,DG(K)
              END SELECT
C
            ENDIF
          ENDIF
          IF(DG(K).LT.0.0) DG(K)=0.0
C----------
C         SCALE DIAMETER INCREMENT FOR BARK AND PERIOD LENGTH.
C         IN ORDER TO MAINTAIN CONSISTENCY WITH **GRADD**,
C         ADJUSTMENTS ARE MADE ON THE DDS SCALE.
C----------
          BARK=BRATIO(ISPC,DBH(K),HT(K))
          IF(CIVAR)THEN
            DG(K)=(DK-DKK)*BARK*XRDGRO
            IF(DG(K).LT.0.)DG(K)=0.
          ELSEIF(UTVAR)THEN
            IF (DG(K) .GT. DGMX) DG(K)=DGMX
          ENDIF
          IF(CIVAR .OR. UTVAR)THEN
            DDS=(DG(K)*(2.0*BARK*D+DG(K))) * SCALE2
          ELSE
            DDS = DG(K)*(2.0*BARK*D+DG(K))*SCALE2
          ENDIF
          DG(K)=SQRT((D*BARK)**2.0+DDS)-BARK*D
        ENDIF
        IF((DBH(K)+DG(K)).LT.DIAM(ISPC))THEN
          DG(K)=DIAM(ISPC)-DBH(K)
        ENDIF
      ENDIF
C----------
C  CHECK FOR TREE SIZE CAP COMPLIANCE
C----------
      CALL DGBND(ISPC,DBH(K),DG(K))
C
   23 CONTINUE
C----------
C  PRINT DEBUG AND RETURN TO PROCESS NEXT TRIPLE OR NEXT TREE.
C----------
      IF(.NOT.DEBUG) GO TO 24
      HK=H+HTG(K)
      WRITE(JOSTND,9000) I,K,ISPC,H,HTG(K),HK,DBH(K),DG(K)
 9000 FORMAT('IN REGENT LOOP 2, I=',I4,', K=',I4,', ISPC=',I3,
     &       ', CUR HT=',F7.2,', HT INC=',F7.4/T19,'NEW HT=',F7.2,
     &       ', CUR DBH=',F7.2,', 10-YR DBH INC=',F7.4)
   24 CONTINUE
      IF(LESTB .OR. .NOT.LTRIP .OR. L.GE.2) GO TO 25
      IF(TTVAR)THEN
        K=ITRN+2*I-1
        DBH(K)=DBH(I)
        DG(K)=DG(I)
        HT(K)=HT(I)
        HTG(K)=HTG(I)
        ICR(K)=ICR(I)
        K=K+1
        DBH(K)=DBH(I)
        DG(K)=DG(I)
        HT(K)=HT(I)
        HTG(K)=HTG(I)
        ICR(K)=ICR(I)
        GO TO 25
      ELSE
        L=L+1
        K=ITRN+2*I-2+L
        GO TO 918
      ENDIF
C----------
C  END OF GROWTH PREDICTION LOOP.  PRINT DEBUG INFO IF DESIRED.
C----------
   25 CONTINUE
   30 CONTINUE
      RETURN
C----------
C  SMALL TREE HEIGHT CALIBRATION SECTION.
C----------
   40 CONTINUE
      DO 45 ISPC=1,MAXSP
      HCOR(ISPC)=0.0
      CORTEM(ISPC)=1.0
      NUMCAL(ISPC)=0
   45 CONTINUE
      IF (ITRN.LE.0) RETURN
      IF(IFINTH .EQ. 0)  GOTO 100
C
      SELECT CASE (ISPC)
C
C  SPECIES WITH REGYR=5: ORIGINAL TT SPECIES, SPECIES FROM CI AND IE VARIANTS
C
      CASE(1:12,16,18)
        SCALE3 = REGYR/FINTH
C
C  SPECIES WITH REGYR=10: SPECIES FROM UT VARIANT
C
      CASE(13,14,15,17,19)
        SCALE3 = 10./FINTH
      END SELECT
C
C----------
C  DETERMINE BASAL AREA IN LARGE TREES AT START OF EACH PREDICTION SUBCYCLE.
C----------
      DO 46 J=1,NPER
      BANEXT(J)=TEMBA
      RDNEXT(J)=TEMCCF
   46 CONTINUE
      IF(NPER.EQ.1) GO TO 50
C----------
C  IF THERE IS MORE THAN 1 SUBCYCLE FOR HEIGHT INCREMENT PREDICTION,
C  (IFINTH > 5) ESTIMATE VALUES OF BA AND RELATIVE DENSITY (CCF) AT
C  START OF EACH SUBCYCLE.  10-YEAR CHANGE IS COMPUTED FROM BACKDATED
C  DIAMETER (WK3) AND 10-YEAR DIAMETER INCREMENT COMPUTED DURING CALIBRATION.
C  LINEAR INTERPOLATION IS USED TO ASSIGN VALUES FOR SUBCYCLES.
C----------
      DO 49 I=1,ITRN
      D1=WK3(I)
      IS=ISP(I)
      P=PROB(I)
      D2=WK3(I)+DG(I)/BRATIO(IS,D1,HT(I))
      B1=BACON*D1*D1
      B2=BACON*D2*D2
      CALL CCFCAL(IS,D1,HT(I),ICR(I),P,.FALSE.,C1,CW,1)
      CALL CCFCAL(IS,D2,HT(I),ICR(I),P,.FALSE.,C2,CW,1)
      BI=(B2-B1)/10.0
      CI=(C2-C1)/10.0
      K=0
      DO 48 J=2,NPER
      K=K+KPER(J-1)
      PN=P*0.985**K
      RDNEXT(J)=RDNEXT(J)+K*CI/P*PN
      BANEXT(J)=BANEXT(J)+K*BI*PN
   48 CONTINUE
   49 CONTINUE
   50 CONTINUE
C---------
C COMPUTE DENSITY MODIFIER FROM CCF AND TOP HEIGHT FOR UT VARIANT
C---------
      X=AVH*(RELDEN/100.0)
      IF(X .GT. 300.0) X=300.0
      PCTRED=1.11436 + X*(-.011493 + X*(.43012E-4 + X*(-.72221E-7
     &   + X*(.5607E-10- X*0.1641E-13))))
      IF(PCTRED .GT. 1.0) PCTRED = 1.0
      IF(PCTRED .LT. 0.01) PCTRED = 0.01
      IF(DEBUG) WRITE(JOSTND,9989) AVH,RELDEN,X,PCTRED
 9989 FORMAT('IN REGENT AVH,RELDEN,X,PCTRED = ',4F10.4)
C----------
C  BEGIN PROCESSING TREE LIST IN SPECIES ORDER.  DO NOT CALCULATE
C  CORRECTION TERMS IF THERE ARE NO TREES FOR THIS SPECIES.
C----------
      DO 90 ISPC=1,MAXSP
C----------
C  ASSIGN VARIANT ACCORDING TO SPECIES
C----------
      CIVAR = .FALSE.
      TTVAR = .FALSE.
      UTVAR = .FALSE.
      SELECT CASE (ISPC)
      CASE(11,12,16)
        TTVAR = .TRUE.
      CASE(1:10,18)
        CIVAR = .TRUE.
      CASE(13,14,15,17,19)
        UTVAR = .TRUE.
      END SELECT
C
      CORNEW=1.0
      I1=ISCT(ISPC,1)
      IF(I1.EQ.0 .OR. .NOT. LHTCAL(ISPC)) GO TO 90
      I2=ISCT(ISPC,2)
      IREFI=IREF(ISPC)
      N=0
      SNP=0.0
      SNX=0.0
      SNY=0.0
C----------
C  BEGIN TREE LOOP WITHIN SPECIES.  IF MEASURED HEIGHT INCREMENT IS
C  LESS THAN OR EQUAL TO ZERO, OR DBH IS GREATER THAN 5.0, THE RECORD
C  WILL BE EXCLUDED FROM THE CALIBRATION.
C----------
      DO 60 I3=I1,I2
      I=IND1(I3)
      H=HT(I)
      IF(IHTG.LT.2) H=H-HTG(I)
      IF(DBH(I).GE.5.0.OR.H.LT.0.01) GO TO 60
      IF(HTG(I).LT.0.001) GO TO 60
      HK=H
      D=DBH(I)
      CRI=FLOAT(ICR(I))
      DO 55 J=1,NPER
      BAJ=BANEXT(J)
      RDJ=RDNEXT(J)
      ZBAL=BAJ*(100.0-PCT(I))*0.0001
      IF(TEMCCF .LE. 0.)THEN
        PPCCF=0.
      ELSE
        PPCCF=(RDJ-TEMCCF)/TEMCCF
      ENDIF
      TPCCF=PCCF(ITRE(I))*PPCCF
      IF(TPCCF.GT.300.0) TPCCF=300.0
      IF(TPCCF.LT.25.0) TPCCF=25.0
      IF(CIVAR)THEN
        IICR=((ICR(I)-1)/10)+1
        IF(IICR.GT.9) IICR=9
        RCR=FLOAT(IICR)
C----------
C  DIA GT 3 INCHES INCLUDED IN OVERALL MEAN
C----------
        IF(IHTG.LT.2) H=H-HTG(I)
        IF(DBH(I).GE.5.0.OR.H.LT.0.01) GO TO 60
        EDH = 2.764559 - 0.009643*BA + 0.025303*RCR*RCR
C
      ELSEIF(TTVAR)THEN
        CALL SMHTGF(ISPC,I,EDH,CR,TPCCF,LESTB,DEBUG)
        HK=HK+EDH
        RD = PCCF(ITRE(I))
C        
        SELECT CASE (ISPC)
        CASE(11,12,16)
          HLESS4 = HK - 4.5
          D2 = 0.000231*HLESS4*CRI - 0.00005*HLESS4*RD
     &         + 0.001711*CRI + 0.17023*HLESS4 + 0.3
        END SELECT
C        
        IF(D2.LT.DIAM(ISPC)) D2=DIAM(ISPC)
C
      ELSEIF(UTVAR)THEN
C----------
C  FOR UT VARIANT SPECIES
C  COMPUTE POTENTIAL GROWTH FROM SITE INDEX AND SPECIES.
C----------
        SI=SITEAR(ISPC)
        IF(SI .GT. SHI(ISPC)) SI=SHI(ISPC)
        IF(SI .LE. SLO(ISPC)) SI=SLO(ISPC) + 0.5
        RELSI=(SI-SLO(ISPC))/(SHI(ISPC)-SLO(ISPC))
        RSIMOD = 0.5 * (1.0 + RELSI)
        X=RELSI*100.0
        SJ=SITEAR(ISPC)
        POTHTG = ((SJ/5.0)*(SJ*1.5-H)/(SJ*1.5))* 0.83
        IF(DEBUG)WRITE(JOSTND,9988)SI,RELSI,X,ISPC,J,POTHTG
 9988   FORMAT('IN REGENT SI,RELSI,X,ISPC,J,POTHTG = ',
     &  F7.2,F10.3,F10.4,2I6,F10.3)
C
        X=CRI/100.
        VIGOR = (150.0 * (X**3.0)*EXP(-6.0*X))+0.3
        IF(VIGOR .GT. 1.0)VIGOR=1.0
C----------
C  VIGOR ADJUSTMENT TO DRASTIC FOR PINYON, JUNIPER, AND OAK
C  CUT IT BY TWO-THIRDS
C----------
        SELECT CASE (ISPC)
        CASE(14)
          VIGOR=1.-((1.-VIGOR)/3.)
        END SELECT
C
        IF(ISPC .EQ. 13) THEN
          AG1 = (H*12.0*2.54/26.9825)**0.8509
          AG2 = AG1 + 10.0
          H2  = (26.9825*AG2**1.1752)/(2.54*12.0)
          EDH = (H2-H) * RSIMOD * RHCON(ISPC)
C----------
C GROWTH RATES APPEAR HIGH, REDUCE BY 25 PERCENT. DIXON 8-27-92.
C----------
          EDH=EDH*.75
          IF(EDH .LT. 0.0) EDH=0.0
        ELSE
          EDH=POTHTG*PCTRED*VIGOR*RHCON(ISPC)
        ENDIF
C----------
C UT MODELS ARE 10-YEAR MODELS, ADJUST TO 5-YEAR BASIS
C----------
        EDH=EDH*0.5
C
        IF(DEBUG)WRITE(JOSTND,9990) X,VIGOR,EDH
 9990   FORMAT('IN REGENT X,VIGOR,EDH = ',3F10.4)
      ENDIF
   55 CONTINUE
      IF(CIVAR)THEN
        EDH = EDH * RHCON(ISPC)
      ELSEIF(TTVAR)THEN
        EDH=(HK-H)*RHCON(ISPC)
      ENDIF
      P=PROB(I)
      IF(HTG(I).LT.0.001) GO TO 60
      TERM=HTG(I)*SCALE3
      SNP=SNP+P
      SNX=SNX+EDH*P
      SNY=SNY+TERM*P
      N=N+1
C----------
C  PRINT DEBUG INFO IF DESIRED.
C----------
      IF(DEBUG) WRITE(JOSTND,9001) NPLT,I,ISPC,H,DBH(I),ICR(I),
     & PCT(I),TEMCCF,RHCON(ISPC),EDH,TERM
 9001 FORMAT('NPLT=',A26,',  I=',I5,',  ISPC=',I3,',  H=',F6.1,
     & ',  DBH=',F5.1,',  ICR',I5,',  PCT=',F6.1,',  RELDEN=',
     & F6.1 / 12X,'RHCON=',F10.3,',  EDH=',F10.3,', TERM=',F10.3)
C----------
C  END OF TREE LOOP WITHIN SPECIES.
C----------
   60 CONTINUE
      IF(DEBUG) WRITE(JOSTND,9010) ISPC,SNP,SNX,SNY
 9010 FORMAT(/'SUMS FOR SPECIES ',I2,':  SNP=',F10.2,
     & ';   SNX=',F10.2,';   SNY=',F10.2)
C----------
C  COMPUTE CALIBRATION TERMS.  CALIBRATION TERMS ARE NOT COMPUTED
C  IF THERE WERE FEWER THAN NCALHT (DEFAULT=5) HEIGHT INCREMENT
C  OBSERVATIONS FOR A SPECIES.
C----------
      IF(N.LT.NCALHT) GO TO 80
C----------
C  CALCULATE MEANS FOR THE FOR THE GROWTH SAMPLE ON THE
C  NATURAL SCALE.
C----------
      SNX=SNX/SNP
      SNY=SNY/SNP
C----------
C  THE CORRECTION TERM IS THE MEAN OF OBSERVED INCREMENTS
C  DIVIDED BY THE MEAN OF PREDICTED INCREMENTS (NOT THE REGRESSION
C  ESTIMATE USED FOR DIAMETER INCREMENT CALIBRATION).
C----------
      CORNEW=SNY/SNX
      IF(CORNEW.LE.0.0) CORNEW=1.0E-4
      HCOR(ISPC)=ALOG(CORNEW)
C----------
C  TRAP CALIBRATION VALUES OUTSIDE 2.5 STANDARD DEVIATIONS FROM THE 
C  MEAN. IF C IS THE CALIBRATION TERM, WITH A DEFAULT OF 1.0, THEN
C  LN(C) HAS A MEAN OF 0.  -2.5 < LN(C) < 2.5 IMPLIES 
C  0.0821 < C < 12.1825
C----------
      IF(CORNEW.LT.0.0821 .OR. CORNEW.GT.12.1825) THEN
        CALL ERRGRO(.TRUE.,27)
        WRITE(JOSTND,9194)ISPC,JSP(ISPC),CORNEW
 9194   FORMAT(T28,'SMALL TREE HTG: SPECIES = ',I2,' (',A3,
     &  ') CALCULATED CALIBRATION VALUE = ',F8.2)
        CORNEW=1.0
        HCOR(ISPC)=0.0
      ENDIF
   80 CONTINUE
      CORTEM(IREFI) = CORNEW
      NUMCAL(IREFI) = N
   90 CONTINUE
C----------
C  END OF CALIBRATION LOOP.  PRINT CALIBRATION STATISTICS AND RETURN
C----------
      WRITE(JOSTND,9002) (NUMCAL(I),I=1,NUMSP)
 9002 FORMAT(/'NUMBER OF RECORDS AVAILABLE FOR SCALING'/
     >       'THE SMALL TREE HEIGHT INCREMENT MODEL',
     >        ((T48,11(I4,2X)/)))
  100 CONTINUE
      WRITE(JOSTND,9003) (CORTEM(I),I=1,NUMSP)
 9003 FORMAT(/'INITIAL SCALE FACTORS FOR THE SMALL TREE'/
     >      'HEIGHT INCREMENT MODEL',
     >       ((T48,11(F5.2,1X)/)))
C----------
C OUTPUT CALIBRATION TERMS IF CALBSTAT KEYWORD WAS PRESENT.
C----------
      IF(JOCALB .GT. 0) THEN
        KOUT=0
        DO 207 K=1,MAXSP
        IF(CORTEM(K).NE.1.0 .OR. NUMCAL(K).GE.NCALHT) THEN
          SPEC=NSP(MAXSP,1)(1:2)
          ISPEC=MAXSP
          DO 203 KK=1,MAXSP
          IF(K .NE. IREF(KK)) GO TO 203
          ISPEC=KK
          SPEC=NSP(KK,1)(1:2)
          GO TO 2031
  203     CONTINUE
 2031     WRITE(JOCALB,204)ISPEC,SPEC,NUMCAL(K),CORTEM(K)
  204     FORMAT(' CAL: SH',1X,I2,1X,A2,1X,I4,1X,F6.3)
          KOUT = KOUT + 1
        ENDIF
  207   CONTINUE
        IF(KOUT .EQ. 0)WRITE(JOCALB,209)
  209   FORMAT(' NO SH VALUES COMPUTED')
        WRITE(JOCALB,210)
  210   FORMAT(' CALBSTAT END')
      ENDIF
   91 IF(DEBUG)WRITE(JOSTND,9995)ICYC
 9995 FORMAT('LEAVING SUBROUTINE REGENT  CYCLE =',I5)
      RETURN
C
C
      ENTRY REGCON
C----------
C  ENTRY POINT FOR LOADING OF REGENERATION GROWTH MODEL
C  CONSTANTS  THAT REQUIRE ONE-TIME RESOLUTION.
C----------
      DO 110 ISPC=1,MAXSP
      RHCON(ISPC) = 1.0
      IF(LRCOR2 .AND. RCOR2(ISPC).GT.0.0) RHCON(ISPC)=RCOR2(ISPC)
  110 CONTINUE
C
      DO I=1,MAXTRE
      ZRAND(I)=-999.0
      ENDDO
C
      RETURN
      END
