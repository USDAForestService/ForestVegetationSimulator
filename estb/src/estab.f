      SUBROUTINE ESTAB (KDT)
      IMPLICIT NONE
C----------
C ESTAB $ID$
C----------
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
      INCLUDE 'PLOT.F77'
C
C
      INCLUDE 'ESPARM.F77'
C
C
      INCLUDE 'ESTREE.F77'
C
C
      INCLUDE 'ESHAP.F77'
C
C
      INCLUDE 'ESHAP2.F77'
C
C
      INCLUDE 'PDEN.F77'
C
C
      INCLUDE 'CALDEN.F77'
C
C
      INCLUDE 'ESCOMN.F77'
C
C
      INCLUDE 'ESCOM2.F77'
C
C
      INCLUDE 'VARCOM.F77'
C
C
      INCLUDE 'STDSTK.F77'
C
C
COMMONS
C
C     REGENERATION ESTABLISHMENT MODEL   --   VERSION 2.0
C     USDA FOREST SERVICE, INTERMOUNTAIN RESEARCH STATION
C     1221 S. MAIN, MOSCOW, IDAHO  83843   (208) 882-3557
C
C     THIS PROGRAM MODELS REGENERATION ESTABLISHMENT IN MONTANA AND
C     IDAHO.  HABITAT TYPE SERIES = DF, GF, WRC, WH, AND SAF.
C
C     CODE ALPHA SPECIES MIN.HT | NAME & CODE     IFO     | PHY.POS.
C     ---- ----- ------- ------ | --------------- ---     | --------
C       1    WP   PIMO   1.0 FT | BITTERROOT(103)  3      | 1=BOTTOM
C       2    L    LAOC   1.0 FT | PANHANDLE (104)  4      | 2=LOWER
C       3    DF   PSME   1.0 FT | CLEARWATER(105)  5      | 3=MID
C       4    GF   ABGR   0.5 FT | COEUR D'A.(106)  4      | 4=UPPER
C       5    WH   TSHE   0.5 FT | COLVILLE  (621)  7      | 5=RIDGE
C       6    C    THPL   0.5 FT | FLATHEAD  (110) 10
C       7    LP   PICO   1.0 FT | KANIKSU   (113)  4 ->DEERLODGE(109) 9
C       8    S    PIEN   0.5 FT | KOOTENAI  (114) 14 | GALLATIN (111) 11
C       9    AF   ABLA   0.5 FT | LOLO      (116) 16 | HELENA   (112) 12
C      10    PP   PIPO   1.0 FT | NEZPERCE  (117) 17 | PAYETTE  (412) 19
C      11    MH   TSME   0.5 FT | ST. JOE   (118)  4-| BOISE    (402) 20
C
      EXTERNAL ESRANN
      LOGICAL LPPE,DEBUG
      INTEGER K,L,JJ,IBRKUP,ISHADE,IPNSPE,IDO,ITP,NDRAW,NSPNZ,NEWTPP
      REAL CW,CRDUM,XCSMAX,BRKUP,XXH,XH,TMTIME,SHADE,TREEHT,PTREE,ESAVE
      REAL HHT,TRAGE,DILATE,DELAY,TPPLN,TPP,EMSQR,PN,BAAOLN,BAAOLD
      REAL RADIAN,GENTIM,TBAAA,SUM1,SUM2,FTEMP2,FTEMP,SUM
      INTEGER MXRR,NUM2PK,NBEST,NUMSPE,ITPP,ITIME,IEVTYR,IHTSER,IREP
      INTEGER NTIMES,IPOLD,ITYPEP,IEND,ISTART,NCOUNT,IPYEAR,IACTK,NP
      INTEGER IZERO,MYDO,II,ISER,J,NN,MATCH,ITODO,NTODO,IDUP,N,I,INGRO
      INTEGER ITRNIN,NOFSPE,KDT
      REAL BACHLO,DRAW,SHORTY,PNONE,DUPNPT,DUP,TTOTTP,TCROP1,TCROP2
      REAL PASMAX,FLONPT,FLOKDT,ZHARV,SUMHTS(MAXSP)
      INTEGER*4 IDCMP1,ITMP,ITEMP,ITOOMP
      CHARACTER CPREP(4)*4,CTOPO(5)*4,CBLANK*2,CLAST(MAXSP)*2
      REAL EXCESS(MAXSP),PRMS(6),SUMESP(MAXSP),SUMUP(MAXSP)
      INTEGER MYTYPE(30),MYHABG(16),MYHTS(16),MYACTS(4)
      REAL TOTTPA(MAXSP),TOTPCT(MAXSP),BESTPA(MAXSP)
      REAL AVEHT(MAXSP),BESPCT(MAXSP)
      REAL PASTPA(MAXSP),PASPCT(MAXSP),PSPE(6)
      INTEGER ILSP(MAXSP),ICHOI(2,MAXSP),NULL(MAXSP)
      REAL FIRST(2,MAXSP)
      INTEGER NNPREP(4),MAXTPP(16),IBEST(MAXSP)
      REAL TALL(MAXSP)
      INTEGER ICODE(99)
      REAL HEIGHT(99)
      INTEGER NOTE(99)
      REAL ESPROB(99)
      INTEGER IASEP(99)
      REAL HTIMLT(99),STOMLT(MAXSP)
      INTEGER MAXSPP(16),IPLANT(MAXSP),MAXING(16)
      REAL AGADSB(99),AGEPL(99),AGEXC(99)
C
      DATA CBLANK/'  '/,CPREP/'NONE','MECH','BURN','ROAD'/,CTOPO/
     &  'BOTM','LOWR',' MID','UPPR','RIDG'/,MYTYPE/9*1,2*5,2*2,3*3,4,
     &  12*5,1/,MAXTPP/9,7,5,5,10,8,9,5,21,25,10,10,11,7,10,8/,
     &  IDCMP1/10000000/,MYHABG/4*1,4*2,3,4,6*5/,MYHTS/1,3*2,4*3,2*4,
     &  6*5/,MAXSPP/4,3*3,5,4,6,4,2*6,4,2*5,4,6,4/,MYACTS/430,431,
     &  491,493/,NOFSPE/MAXSP/,MAXING/4,4,3,3,5,4,5,4,7,7,5,5,5,4,5,4/
C
C     INITIALIZE ARRAYS AND VARIABLES
C
      CALL DBCHK (DEBUG,'ESTAB',5,ICYC)
      IF(DEBUG) WRITE(JOSTND,7000) KDT,IDSDAT,NTALLY
 7000 FORMAT(/'IN ESTAB; BEGIN DEBUG.  KDT=',I5,' IDSDAT=',I5,
     >        ' NTALLY=',I2)
      ITRNIN=ITRN+1
      INGRO=0
      ZHARV=FLOAT(IDSDAT)
      FLOKDT=FLOAT(KDT)
      TIME=FLOKDT - ZHARV +1.0
      FLONPT=FLOAT(NPTIDS)
      SUMPRB=0.0
      ELEVSQ=ELEV*ELEV
      ITMP=ICYC
      ITMP=ITMP*10000
      MODE=0
      IF(KDT+1-IY(1).GT.20) THEN
        INADV=1
        LOAD=0
      ENDIF
      PASMAX=CONFID
      DO 40 I= 1,99
      NOTE(I)= 0
      AGADSB(I)=0.0
      AGEPL(I)=0.0
      AGEXC(I)=0.0
C
   40 CONTINUE
      DO 41 I=1,2
      DO 41 N=1,NOFSPE
      FIRST(I,N)=0.1
   41 CONTINUE
      TCROP1=0.0
      TCROP2=0.0
      TTOTTP=0.0
      DO 181 I=1,NOFSPE
      TOTTPA(I)=0.0
      AVEHT(I)=0.0
      SUMPX(I)=0.0
      SUMPI(I)=0.0
      BESTPA(I)=0.0
      PASTPA(I)=0.0
      IPLANT(I)=0
  181 CONTINUE
C
C     PLOT REPLICATION
C
      DUP=0.0
      DO 138 I=1,MINREP
      DUP=DUP+1.0
      N=NPTIDS*I
      IF(NPTIDS*(I+1).GT.MAXPLT) GO TO 139
      IF(N.GE.MINREP) GO TO 139
  138 CONTINUE
  139 CONTINUE
      IDUP=DUP+0.5
      DUPNPT=FLONPT*DUP
C
C     CHANGE FOREST CODES
C
      DO 4 I=1,20
      IF (KODFOR.NE.IFORCD(I)) GO TO 4
      IFO=IFORST(I)
      GO TO 5
    4 CONTINUE
      STOADJ=0.0
      IFO=4
    5 CONTINUE
C
C     IF NOT THE FIRST TALLY, CANCEL MECH & BURNPREP'S IN THIS CYCLE.
C
      IF(NTALLY.GT.1) THEN
        CALL OPFIND (2,MYACTS(3),NTODO)
        IF(NTODO.GT.0) THEN
          DO 6 ITODO=1,NTODO
          CALL OPDEL1 (ITODO)
    6     CONTINUE
        ENDIF
      ENDIF
C
C     DO NOT CREATE TREE RECORDS THAT WOULD ESSENTIALLY BE REDUNDANT
C     WITH THOSE IN THE INVENTORY WHEN NTALLY IS 1 AND 20 YEARS HAS
C     ELAPSED SINCE THE INVENTORY (I.E. NO CALIBRATION).
C
      MATCH=0
      IF(NTALLY.EQ.1.AND.KDT+1-IY(1).GT.20) MATCH=1
C
C     WORK WITH INGROWTH (99) OPTION
C
      IF(NTALLY.EQ.99) THEN
        PNONE=1.0
        PMECH=0.0
        PBURN=0.0
        METH=0
        LOAD=0
        IALN(2)=1
        INGRO=1
        PASMAX=15.0
        ITEMP=((XTES/THRES1) *FINT) +0.5
        IF(ITEMP.LT.1) ITEMP=1
        SHORTY=FLOAT(ITEMP)
        ZHARV=FLOAT(KDT+1) -SHORTY
        ZMECH=ZHARV
        ZBURN=ZHARV
        NTALLY=1
      IF(DEBUG)WRITE(JOSTND,*)'SHORTY, XTES, THRES1, ITEMP= ',
     $SHORTY, XTES, THRES1, ITEMP
        GO TO 44
      ENDIF
C
C     IF NOT THE FIRST TALLY, THEN SKIP SITE PREPS.
C
      IF(NTALLY.NE.1) GO TO 276
      CALL ESETPR (METH,ZMECH,ZBURN,PNONE,PMECH,PBURN,IALN,
     &  IDSDAT,KDT,LOAD)
      IF(ZMECH.LT.ZHARV) ZMECH=ZHARV
      IF(ZBURN.LT.ZHARV) ZBURN=ZHARV
      IF(DEBUG) WRITE(JOSTND,7011) METH,IDSDAT,KDT,ZMECH,ZBURN,
     &  PNONE,PMECH,PBURN,(IALN(I),I=1,3)
 7011 FORMAT('AFTER ESETPR: METH=',I2,' IDSDAT=',I5,' KDT=',I5,
     &  ' ZMECH=',F7.1,' ZBURN=',F7.1,/,4X,'PNONE=',F7.4,' PMECH=',
     &  F7.4,' PBURN=',F7.4,3X,'IALN(I)=',3I5)
   44 CONTINUE
      KDTOLD=ZHARV-0.5
      DO 45 I=1,5
      SUMPRE(I)=0.0
   45 CONTINUE
      DO 46 I=1,16
      IHABT(I)=0
   46 CONTINUE
      DO 12 I=1,NPTIDS*IDUP
      ESB1(I)=0.0
      PNN(I)=0.0
      PLPROB(I)=0.0
      NSTORE(I)=0
   12 CONTINUE
      ESB=0.0
  276 CONTINUE
      IF(NTALLY.EQ.1) THEN
        CALL ESRANN (DRAW)
        ITEMP=DRAW*100000.0 +0.5
        ESDRAW=FLOAT(ITEMP)
      ENDIF
      CALL ESRNSD (.TRUE.,ESDRAW)
      IF(DEBUG) WRITE(JOSTND,7014) ESDRAW
 7014 FORMAT('RANDOM NUMBER SEED=',F9.2)
C
C     LOAD REGENERATION VECTORS FROM CURRENT INVENTORY.
C
      SUM=0.0
      IF(ITRN.EQ.0) GO TO 198
      DO 177 I=1,ITRN
      FTEMP=DBH(I)
      IF(FTEMP.GE.REGNBK) GO TO 177
      NN=ISP(I)
      IF(NN.LT.1.OR.NN.GT.NOFSPE) GO TO 177
      FTEMP2=PROB(I)
      PASTPA(NN)=PASTPA(NN)+FTEMP2
      TCROP2=TCROP2 +FTEMP2
      SUM=SUM+FTEMP2
      N=ITRE(I)
      PLPROB(N)=PLPROB(N) +(FTEMP2/DUP)
  177 CONTINUE
  198 CONTINUE
C
C     CALCULATE INTERCEPT OF ACTUAL STOCKING FROM THE INVENTORY.
C
      IF(INADV.EQ.1.OR.NTALLY.NE.1) GO TO 64
      TPACRE=SUM
      IF(TPACRE.LT.1.0) TPACRE=1.0
      ESA=1.0/(1.0+EXP(-1.0*(-5.17397 +0.85131*ALOG(TPACRE))))
      FTEMP=ESA
      IF(FTEMP.LT.0.10) FTEMP=0.10
      IF(FTEMP.GT.0.90) FTEMP=0.90
      ESB= -1.0 * ALOG(1.0/FTEMP -1.0)
      IF(DEBUG) WRITE(JOSTND,7030) ESA
 7030 FORMAT('IN CALIBRATION LOGIC; ESA=',F9.4)
   64 CONTINUE
C
C     WORK WITH SITE PREPARATION OPTIONS. EXIT = STMT 242
C
      DO 183 I=1,IDUP*NPTIDS
      CALL ESRANN (DRAW)
      WK6(I)=DRAW
  183 CONTINUE
      IF(NTALLY.NE.1) GO TO 242
      IF(LOAD.NE.1) GO TO 249
C
C     IF LOAD=1, REP PLOT PREPS; IF NEEDED COMPRESS ARRAY IPPREP.
C
      NN=0
      DO 243 I=1,NPTIDS
      NN=NN+1
      N=IPTIDS(I)
      IPPREP(NN)=IPPREP(N)
  243 CONTINUE
      IF(IDUP.LT.2) GO TO 49
      DO 251 I=1,IDUP
      DO 247 N=1,NPTIDS
      J=I*NPTIDS +N
      IPPREP(J)=IPPREP(N)
  247 CONTINUE
  251 CONTINUE
      GO TO 49
  249 CONTINUE
      IF(IALN(2).EQ.0.AND.IALN(3).EQ.0) GO TO 246
      SUM=PMECH+PBURN
      IF(SUM.LE.1.0) GO TO 248
      PMECH=PMECH/SUM
      PBURN=PBURN/SUM
  248 CONTINUE
      PNONE=1.0-PMECH-PBURN
      GO TO 252
  246 CONTINUE
C
C     USER HAS NOT SUPPLIED ANY SITE PREPARATION KEYWORDS.
C
      ISER=MYTYPE(ITYPE)
      CALL ESPREP (ISER,PNONE,PMECH,PBURN)
  252 CONTINUE
C
C     SECTION TO CHOOSE SITE PREPS.  SAMPLE WITHOUT REPLACEMENT.
C
      SUM=PNONE+PMECH+PBURN
      SUMUP(1)=PNONE/SUM
      SUMUP(2)=PMECH/SUM
      SUMUP(3)=PBURN/SUM
      IF(DEBUG) WRITE(JOSTND,7051) (SUMUP(I),I=1,3)
 7051 FORMAT('PNONE=',F8.4,'  PMECH=',F8.4,'  PBURN=',F8.4)
      N=0
      DO 10 II=1,IDUP
      DO 9 NN=1,NPTIDS
      N=N+1
      DRAW=WK6(N)
      DRAW=DRAW* (((DUPNPT+1.0)-FLOAT(N))/DUPNPT)
      SUM=0.0
      DO 2 I=1,2
      SUM=SUM+SUMUP(I)
      IF(DRAW.GT.SUM) GO TO 2
      GO TO 8
    2 CONTINUE
      I=3
      IF(SUMUP(3).LT.0.0) I=1
    8 CONTINUE
      IPPREP(N)=I
      SUMUP(I)=SUMUP(I)-(1.0/DUPNPT)
      IF(SUMUP(I).LT.0.0) SUMUP(I)=0.0
    9 CONTINUE
   10 CONTINUE
   49 CONTINUE
  242 CONTINUE
C
C     GET THE PLANT & NATURAL KEYWORDS READY TO ACCESS
C
      CALL OPFIND (2,MYACTS,NTODO)
      IF(DEBUG) WRITE (JOSTND,'(''# OF PLANT & NATURAL='',I4)') NTODO
      IF(NTODO.GT.0) MODE=1
C----------
C  IF NUMBER TO ESTABLISH IS NEAR ZERO, THEN MARK KEYWORD FOR DELETION.
C  IF THIS WAS THE ONLY ACTIVITY FOUND, SET MODE FLAG TO 0.
C  GED 10-23-97
C----------
      MYDO=NTODO
      DO 244 IZERO=1,NTODO
      CALL OPGET (IZERO,6,IPYEAR,IACTK,NP,PRMS)
      IF(PRMS(2).LE.0.001 .OR. PRMS(3).LE. 0.001) THEN
        CALL OPDEL1(IZERO)
        MYDO=MYDO-1
      ENDIF
  244 CONTINUE
      IF(MYDO .EQ. 0) MODE=0
C 
C     ACCUMULATE SUMS FOR CALCULATION OF SHADE ADJUSTMENTS
C
      SUM1=0.
      SUM2=0.
      DO 245 NN=1,NPTIDS
      NNID=IPTIDS(NN)
      TBAAA=BAAA(NNID)
      IF(TBAAA .LT. 1.)TBAAA=1.
      SUM1=SUM1+TBAAA
  245 CONTINUE
      DO 2451 NN=1,NPTIDS
      NNID=IPTIDS(NN)
      TBAAA=BAAA(NNID)
      IF(TBAAA .LT. 1.)TBAAA=1.
      SUM2=SUM2+SUM1/TBAAA
      IF(DEBUG)
     &WRITE(JOSTND,*)'NNID,BAAA,TBAAA,SUM1,SUM2= ',
     &NNID,BAAA(NNID),TBAAA,SUM1,SUM2
 2451 CONTINUE
      IF(DEBUG)WRITE(JOSTND,*)'SUM1,SUM2= ',SUM1,SUM2
C
C     BEGIN PROCESSING OF PLOTS                             HERE WE GO
C
      NCOUNT=0
      GENTIM=FINT-5.0
      IF(GENTIM.LT.0.0) GENTIM=0.0
      DO 203  NN=1,NPTIDS
      DO 38 I=1,4
      NNPREP(I)=0
   38 CONTINUE
      ISTART=NN*IDUP -IDUP+1
      IEND=NN*IDUP
      DO 39 I=ISTART,IEND
      N=IPPREP(I)
      IF(N.LT.1.OR.N.GT.4) N=1
      NNPREP(N)=NNPREP(N)+1
   39 CONTINUE
C
C     PROCESS REPLICATED PLOTS BY EACH OF THE 4 SITE PREPS
C
      DO 202 ITYPEP=1,4
      IPOLD=0
      IF(NNPREP(ITYPEP).LT.1) GO TO 202
      NTIMES=NNPREP(ITYPEP)
      DO 201 IREP=1,NTIMES
      NCOUNT=NCOUNT+1
      IPREP=ITYPEP
      IF(IPREP.EQ.IPOLD) GO TO 137
      IPOLD=IPREP
      NNID=IPTIDS(NN)
      PROB1(NCOUNT)=0.00001
      RADIAN=PASP(NNID)
      SLO=PSLO(NNID)
      IPHY=IPHYS(NNID)
      XCOSAS=COS(RADIAN)
      XSINAS=SIN(RADIAN)
      XCOS=XCOSAS*SLO
      XSIN=XSINAS*SLO
      BAA=BAAA(NNID)
      IF(BAA.LT.1.0) BAA=1.0
      IF(BAA.GT.400.0) BAA=400.0
      BAASQ=BAA*BAA
      BAALN=ALOG(BAA)
      BAAOLD=BAAINV(NNID)
      IF(BAAOLD.LT.1.0) BAAOLD=1.0
      IF(BAAOLD.GT.400.0) BAAOLD=400.0
      BAAOLN=ALOG(BAAOLD)
      IHAB=IPHAB(NNID)
      ISER=MYHABG(IHAB)
      IHTSER=MYHTS(IHAB)
      IF(DEBUG) THEN
        WRITE(JOSTND,6033) NNID,NOFSPE,IPREP,NTALLY,ISER,IFO,
     &  SLO,BAA,ELEV,ASPECT
 6033   FORMAT(/,72('='),/,'PLOT=',I4,'  NOFSPE=',I4,'  IPREP=',I3,
     &  '  NTALLY=',I3,'  ISER=',I3,/,'IFO=',I3,
     &  '  SLO=',F5.2,'  BAA=',F7.2,'  ELEV=',F6.1,'  ASPECT=',F7.3)
        WRITE(JOSTND,*) 'OCURHT = ',(OCURHT(IHAB,I),I=1,NOFSPE)
        WRITE(JOSTND,*) 'OCURNF = ',(OCURNF(IFO,I),I=1,NOFSPE)
        WRITE(JOSTND,*) 'XESMLT = ',(XESMLT(I),I=1,NOFSPE)
      ENDIF
      IF(STOADJ.LT.0.0001) GO TO 137
C
C     CALCULATE P(STOCKING) AT INVENTORY OR HARVEST, WHICHEVER CAME
C     LAST. IF ADVANCE COMPONENT OF THE INVENTORY IS INVALID (INADV=1)
C     OR THIS IS NOT THE FIRST TALLY OF REGEN, BYPASS PROCEDURES TO
C     CORRECT ACTUAL (INVENTORY) VS. PREDICTED (MODEL) INTERCEPT.
C
      IF(INADV.EQ.1.OR.NTALLY.NE.1) GO TO 241
      FTEMP=FLOAT(IY(1))
      IF(FTEMP.LT.ZHARV) FTEMP=ZHARV
      IF (IPREP.EQ.2) THEN
         TIME= FTEMP -ZMECH
         IEVTYR=IFIX(ZMECH)
      ELSEIF (IPREP.EQ.3) THEN
         TIME= FTEMP -ZBURN
         IEVTYR=IFIX(ZBURN)
      ELSE
         TIME= FTEMP  -ZHARV
         IEVTYR=IDSDAT
      ENDIF
      IF (TIME.LT.0.0) TIME=0.0
C
C     DEFINE WSBW VARIABLES AT TIME OF INVENTORY OR HARVEST.
C     ITEMP IS # YEARS FROM LAST DISTURBANCE TO INVENTORY.
C
      ITIME=TIME+0.5
      IF(DEBUG) WRITE (JOSTND,7010) TIME,IEVTYR
 7010 FORMAT('TIME=',F7.1,'; IEVTYR=',I5)
      CALL ESTIME (IEVTYR,KDT)
      IF(DEBUG) WRITE (JOSTND,7020) BWB4,BWAF,REGT,SQREGT,SQBWAF
 7020 FORMAT('BWB4=',F7.3,'  BWAF=',F7.3,'  REGT=',F7.3,'  SQREGT=',
     &  F7.3,'  SQBWAF=',F7.3)
      CALL ESTOCK (ELEV,IFO,BAAOLD,BAAOLN,PN)
      ESB1(NCOUNT)=PN
      IF(DEBUG) WRITE (JOSTND,6031) PN
 6031 FORMAT('PN FOR STOCKING= ',F10.4)
      FTEMP=1.0/(1.0+EXP(-PN))
      ITPP=(PLPROB(NNID)*DUPNPT)/(FTEMP*300.0) +0.5
      IF(DEBUG) WRITE(JOSTND,7021) ITPP
 7021 FORMAT('CALCULATION OF ITPP AT INVENTORY=',I10)
      NSTORE(NCOUNT)=ITPP
      PNN(NCOUNT)=ESA
      IF(NTIMES.GT.1) THEN
        DO 31 I=1,NTIMES-1
        NSTORE(NCOUNT+I)=ITPP
        PNN(NCOUNT+I)=ESA
   31   CONTINUE
      ENDIF
  241 CONTINUE
C
C     CHOOSE TIME INTERVAL FOR THE PLOT.
C
      IF (IPREP.EQ.2) THEN
         IEVTYR=IFIX(ZMECH)
         TIME=FLOKDT +1.0 -ZMECH
      ELSEIF (IPREP.EQ.3) THEN
         IEVTYR=IFIX(ZBURN)
         TIME=FLOKDT +1.0 -ZBURN
      ELSE
         IEVTYR=IDSDAT
         TIME=FLOKDT +1.0 -ZHARV
      ENDIF
      IF(DEBUG) WRITE (JOSTND,7010) TIME,IEVTYR
      CALL ESTIME (IEVTYR,KDT)
      IF (DEBUG) WRITE (JOSTND,7020) BWB4,BWAF,REGT,SQREGT,SQBWAF
C
C     CALCULATE P(STOCKING) AT THE END OF THE CYCLE
C
      CALL ESTOCK (ELEV,IFO,BAA,BAALN,PN)
      IF(DEBUG) WRITE (JOSTND,6031) PN
C
C     CORRECT FOR ACTUAL VS. PREDICTED REGENERATION. ESB IS FROM THE
C     INVENTORY. ESB1 IS PREDICTED AT INVENTORY.
C
      IF(STOADJ.LT.0.001) STOADJ=0.001
      FTEMP= 1.0/(1.0+EXP(-(PN+ESB-ESB1(NCOUNT) )))
      FTEMP= FTEMP *STOADJ
      IF(FTEMP.LT.0.0001) FTEMP=0.0001
      IF(FTEMP.GT.0.9990) FTEMP=0.9990
      IF(FTEMP.LT.PNN(NCOUNT)) FTEMP=PNN(NCOUNT) +0.0001
      PROB1(NCOUNT)=FTEMP
      IF(DEBUG) WRITE (JOSTND,6028) ESB,ESB1(NCOUNT),TPACRE,FTEMP
 6028 FORMAT('ESB(ACT)=',F7.4,'  ESB1(PRED)=',F7.4,'  TPACRE=',F7.1,
     &  '      PROB1=',F7.4)
      IF(INGRO.EQ.1.OR.MATCH.EQ.1) THEN
        ITPP=(PLPROB(NNID)*DUPNPT)/(FTEMP*300.0) +0.5
        NSTORE(NCOUNT)=ITPP
      ENDIF
      IF(NTIMES.GT.1) THEN
        DO 30 I=1,NTIMES-1
        PROB1(NCOUNT+I)=FTEMP
        ESB1(NCOUNT+I)=ESB1(NCOUNT)
        IF(INGRO.EQ.1.OR.MATCH.EQ.1) NSTORE(NCOUNT+I)=ITPP
   30   CONTINUE
      ENDIF
C
C     STATEMENT 137 IS USED WHEN BYPASSING PLOT REPS
C
  137 CONTINUE
C
C     CALCULATE PROB OF ADV, SUBS, AND EXCESS SPECIES AT 10 YEARS.
C
      TIME=10.0
      IF(INGRO.EQ.1) TIME=SHORTY
      ITIME=TIME+0.5
      CALL ESTIME (IDSDAT,(IDSDAT+ITIME))
      DO 115 I=1,NOFSPE
      PADV(I)=0.0
      PSUB(I)=0.0
      PXCS(I)=0.0
  115 CONTINUE
      CALL ESPADV
      IF(ITIME.GT.2) CALL ESPSUB
      CALL ESPXCS
      IF(DEBUG) THEN
        WRITE(JOSTND,7010) TIME
        WRITE(JOSTND,7020) BWB4,BWAF,REGT,SQREGT,SQBWAF
        WRITE(JOSTND,7002) (PADV(I),I=1,NOFSPE)
 7002   FORMAT('PADV=',15F6.3)
        WRITE(JOSTND,7003) (PSUB(I),I=1,NOFSPE)
 7003   FORMAT('PSUB=',15F6.3)
        WRITE(JOSTND,7005) (PXCS(I),I=1,NOFSPE)
 7005   FORMAT('PXCS=',15F6.3)
      ENDIF
C
C     RESET TIME TO YEARS SINCE DISTURBANCE OR SITE PREP.
C
      IF (IPREP.EQ.2) THEN
         IEVTYR=IFIX(ZMECH)
         TIME=FLOKDT +1.0 -ZMECH
      ELSEIF (IPREP.EQ.3) THEN
         IEVTYR=IFIX(ZBURN)
         TIME=FLOKDT +1.0 -ZBURN
      ELSE
         IEVTYR=IDSDAT
         TIME=FLOKDT + 1.0 - ZHARV
      ENDIF
      IF(DEBUG) WRITE (JOSTND,7010) TIME,IEVTYR
      CALL ESTIME (IEVTYR,KDT)
      IF(DEBUG) WRITE (JOSTND,7020) BWB4,BWAF,REGT,SQREGT,SQBWAF
      IF(DEBUG)WRITE(JOSTND,*)'IPREP,IEVTYR,FLOKDT,ZMECH,ZBURN,ZHARV='
      IF(DEBUG)WRITE(JOSTND,*)IPREP,IEVTYR,FLOKDT,ZMECH,ZBURN,ZHARV
      CALL ESRANN (DRAW)
      EMSQR=1.0
      IF(DRAW.LT.0.5) EMSQR= -1.0
      CALL ESRANN (DRAW)
      EMSQR=EMSQR*DRAW
      IF(DEBUG) WRITE (JOSTND,7015) EMSQR
 7015 FORMAT('EMSQR=',F10.3)
      IF(STOADJ.LT.0.0001) THEN
        CALL ESRANN (DRAW)
        DO 71 I=1,6
        CALL ESRANN (DRAW)
   71   CONTINUE
        DO 72 I=1,6
        CALL ESRANN (DRAW)
   72   CONTINUE
        DO 73 I=1,NOFSPE
        CALL ESRANN (DRAW)
   73   CONTINUE
        DO 74 I=1,NOFSPE*2
        CALL ESRANN (DRAW)
   74   CONTINUE
        DO 75 I=1,MAXTPP(IHAB)*2
        CALL ESRANN (DRAW)
   75   CONTINUE
        GO TO 163
      ENDIF
C
C     CHOOSE THE NUMBER OF TREES ON A STOCKED PLOT.
C
      CALL ESRANN (DRAW)
      IF(NTALLY.EQ.1) XSTORE(NCOUNT)=DRAW
      DRAW=XSTORE(NCOUNT)
      CALL ESTPP (DRAW,TPP)
      ITPP=TPP +0.5
      IF(ITPP.LT.1) ITPP=1
      IF(ITPP.GT.MAXTPP(IHAB)) ITPP=MAXTPP(IHAB)
      IF(INGRO.EQ.1.AND.ITPP.GT.MAXING(IHAB)) ITPP=MAXING(IHAB)
      NEWTPP=ITPP-NSTORE(NCOUNT)
      IF(NEWTPP.LT.0) NEWTPP=0
      NSTORE(NCOUNT)=ITPP
      TPP=FLOAT(ITPP)
      TPPLN=ALOG(TPP)
      IF(DEBUG) WRITE (JOSTND,7009) ITPP,NEWTPP,PLPROB(NNID)
 7009 FORMAT('TREES/PLOT=',I5,'  NEW TREES/PLOT=',I5,'  PLPROB=',F8.3)
C
C     DETERMINE NUMBER OF SPECIES ON THE PLOT.
C
      IF(DEBUG) WRITE (JOSTND,7010) TIME
      DO 15 I=1,6
      PSPE(I)=0.0
      CALL ESRANN (DRAW)
      WK6(I)=DRAW
   15 CONTINUE
      NUMSPE=1
      IF(ITPP.EQ.1) GO TO 19
      CALL ESNSPE (PSPE,TPPLN,ISER,ITPP,TPP)
      SUM=PSPE(1)
      DO 16 I=2,6
      SUM=SUM+PSPE(I)
   16 CONTINUE
      SUMUP(1)=PSPE(1)/SUM
      DO 17 I=2,5
      SUMUP(I)= SUMUP(I-1) + PSPE(I)/SUM
   17 CONTINUE
      DO 18 I=1,5
      DRAW=WK6(I)
      IF(DRAW.GT.SUMUP(I)) GO TO 18
      NUMSPE=I
      GO TO 19
   18 CONTINUE
      NUMSPE=6
   19 CONTINUE
      IF(NUMSPE.GT.MAXSPP(IHAB)) NUMSPE=MAXSPP(IHAB)
      IF(DEBUG) WRITE (JOSTND,7001) (PSPE(I),I=1,6),NUMSPE
 7001 FORMAT('P(1-6 SPECIES)',6F6.3,'; #SPECIES CHOSEN=',I3)
C
C     CHOOSE THE SPECIES TO OCCUPY THE PLOT
C
      SUM=0.0
      NSPNZ=0
      DO 56 I=1,NOFSPE
      IBEST(I)=0
      FTEMP=PADV(I)+PSUB(I)
      IF(FTEMP.GT.0.0001) NSPNZ=NSPNZ+1
      SUM=SUM+FTEMP
      SUMUP(I)=FTEMP
   56 CONTINUE
      DO 57 I=1,NOFSPE
      IF(SUM .GT. 0.)SUMUP(I)=SUMUP(I)/SUM
   57 CONTINUE
      IF(DEBUG) WRITE (JOSTND,7003) (SUMUP(I),I=1,NOFSPE)
      IF(NUMSPE.GT.NSPNZ) NUMSPE=NSPNZ
      DO 120 I=1,6
      CALL ESRANN (DRAW)
      WK6(I)=DRAW
  120 CONTINUE
      DO 60 I=1,NUMSPE
      SUM=0.0
      DRAW=WK6(I)
      DO 59 J=1,NOFSPE-1
      SUM=SUM+SUMUP(J)
      IF(DRAW.GT.SUM) GO TO 59
      SUMUP(J)=0.0
      IBEST(J)=1
      GO TO 58
   59 CONTINUE
      IBEST(NOFSPE)=1
      SUMUP(NOFSPE)=0.0
   58 CONTINUE
      SUM=0.0
      DO 47 N=1,NOFSPE
      SUM=SUM+SUMUP(N)
   47 CONTINUE
      IF(SUM.LT.0.0001) GO TO 60
      DO 61 N=1,NOFSPE
      IF(SUM .GT. 0.)SUMUP(N)=SUMUP(N)/SUM
   61 CONTINUE
   60 CONTINUE
      IF(DEBUG) WRITE (JOSTND,7004) (IBEST(I),I=1,NOFSPE)
 7004 FORMAT('ARRAY IBEST ',20I5)
C
C     DETERMINE ADV/SUBS STATUS OF THE FIRST TREE OF EACH SPECIES.
C
      DO 53 I=1,NOFSPE
      PADV(I)=0.0
      PSUB(I)=0.0
   53 CONTINUE
      IF(NTALLY.EQ.1) CALL ESPADV
      CALL ESPSUB
      DO 62 I=1,2
      DO 62 N=1,NOFSPE
      ICHOI(I,N)=0
   62 CONTINUE
      DO 63 I=1,NOFSPE
      CALL ESRANN (DRAW)
      IF(IBEST(I).NE.1) GO TO 63
      SUM=PADV(I)+PSUB(I)
      FTEMP=PADV(I)/SUM
      J=1
      IF(DRAW.GT.FTEMP) J=2
      ICHOI(J,I)=1
   63 CONTINUE
C
C     ASSIGN HEIGHTS TO TALLEST TREE BY SPECIES & ADVANCE/SUBS.
C
      TIME=FLOKDT-FLOAT(KDTOLD)
      IEVTYR=KDTOLD+1
      IF(DEBUG) WRITE (JOSTND,7010) TIME,IEVTYR
      CALL ESTIME (IEVTYR,KDT)
      IF(DEBUG) WRITE (JOSTND,7020) BWB4,BWAF,REGT,SQREGT,SQBWAF
      DO 122 I=1,NOFSPE*2
      CALL ESRANN (DRAW)
      WK6(I)=DRAW
  122 CONTINUE
      NDRAW=0
      DO 99 I=1,NOFSPE
      NDRAW=NDRAW+1
      TALL(I)=0.001
      STOMLT(I)=1.0
      IF(ICHOI(1,I).NE.1) GO TO 95
      DRAW=WK6(NDRAW)
      CALL ESDLAY (I,1,DRAW,DELAY)
      DILATE=FIRST(1,I)
      TRAGE=0.0
      CALL ESADVH (EMSQR,I,HHT,DELAY,ELEV,DILATE,IHTSER,GENTIM,TRAGE)
      IF(DEBUG) WRITE (JOSTND,7007) DELAY,I,GENTIM,TRAGE
 7007 FORMAT('DELAY TO GERM=',F10.4,'  SPECIES=',I5,
     &  '  GENTIM=',F5.2,'  TRAGE=',F5.1)
      TALL(I)=HHT
      AGADSB(I)=TRAGE
      ABIRTH(I)=AGADSB(I)
      FTEMP=TRAGE
      IF(FTEMP.GT.GENTIM) FTEMP=GENTIM
      STOMLT(I)=FTEMP/(GENTIM+0.0001)
      FIRST(1,I)=SQRT(DILATE)
   95 CONTINUE
      IF(ICHOI(2,I).NE.1) GO TO 99
      NDRAW=NDRAW+1
      DRAW=WK6(NDRAW)
      CALL ESDLAY (I,2,DRAW,DELAY)
      DILATE=FIRST(2,I)
      TRAGE=0.0
      CALL ESSUBH (I,HHT,EMSQR,DILATE,DELAY,ELEV,IHTSER,GENTIM,TRAGE)
      IF(DEBUG) WRITE (JOSTND,7007) DELAY,I,GENTIM,TRAGE
      TALL(I)=HHT
      AGADSB(I)=TRAGE
      ABIRTH(I)=AGADSB(I)
      FTEMP=TRAGE
      IF(FTEMP.GT.GENTIM) FTEMP=GENTIM
      STOMLT(I)=FTEMP/(GENTIM+0.0001)
      FIRST(2,I)=SQRT(DILATE)
   99 CONTINUE
      DO 114 I=1,NOFSPE
      IF(IBEST(I).NE.1) GO TO 114
      TALL(I)=TALL(I)+HTADJ(I)
      IF(TALL(I)-XMIN(I).LT.0.2) TALL(I)=XMIN(I)+0.2
      IF(TALL(I).GT.HHTMAX(I)) TALL(I)=HHTMAX(I)
  114 CONTINUE
      IF(DEBUG) THEN
        WRITE (JOSTND,7008) (TALL(I),I=1,NOFSPE)
 7008   FORMAT('TALLEST TREE',T14,20F5.2)
        WRITE (JOSTND,7016) (HTADJ(I),I=1,NOFSPE)
 7016   FORMAT('ARRAY HTADJ',T14,20F5.2)
        WRITE (JOSTND,7017) (ICHOI(1,I),I=1,NOFSPE)
 7017   FORMAT('ICHOI (ADV)',T14,20I5)
        WRITE (JOSTND,7018) (ICHOI(2,I),I=1,NOFSPE)
 7018   FORMAT('      (SUB)',T14,20I5)
        WRITE (JOSTND,7019) (STOMLT(I),I=1,NOFSPE)
 7019   FORMAT('ARRAY STOMLT',T14,20F5.2)
      ENDIF
C
C     MAKE SURE THERE IS A PROB FOR EXCESS TREES IF THERE IS A BEST
C     TREE OF THE SAME SPECIES ON THE PLOT.
C
      DO 141 I=1,NOFSPE
      WK6(I)=PXCS(I) *FLOAT(IBEST(I))
      IF(IBEST(I).NE.1) GO TO 141
      IF(WK6(I).LT.0.0001) WK6(I)=0.0001
  141 CONTINUE
      SUM=0.0
      DO 140 I=1,NOFSPE
      SUM=SUM+WK6(I)
  140 CONTINUE
      IF(SUM .gt. 0.)SUMUP(1)= WK6(1)/SUM
      DO 142 I=2,NOFSPE-1
      IF(SUM .GT. 0.)THEN
        SUMUP(I) = SUMUP(I-1) + WK6(I)/SUM
      ELSE
        SUMUP(I) = SUMUP(I-1)
      ENDIF
  142 CONTINUE
      IF(DEBUG) WRITE (JOSTND,7005) (SUMUP(I),I=1,NOFSPE)
      ITP=ITPP
      J=ITPP+NOFSPE
      DO 144 I=1,J
      NOTE(I)=0
      ICODE(I)=0
      IASEP(I)=0
      HEIGHT(I)=0.0
      ESPROB(I)=0.0
      HTIMLT(I)=1.0
  144 CONTINUE
C
C     ASSIGN SPECIES & HEIGHT TO FIRST TREE OF EACH SPECIES
C
      N=0
      DO 146 I=1,NOFSPE
      NULL(I)=0
      ILSP(I)=0
      IF(IBEST(I).EQ.0) GO TO 146
      N=N+1
      ICODE(N)=I
      IASEP(N)=2
      IF(ICHOI(1,I).EQ.1) IASEP(N)=1
      HEIGHT(N)=TALL(I)
      HTIMLT(N)=STOMLT(I)
  146 CONTINUE
C
C     ASSIGN SPECIES AND HEIGHTS TO 'EXCESS' TREES.  HTS MUST BE
C     BETWEEN THE MINIMUM ESTABLISHMENT HEIGHT FOR THAT SPECIES AND
C     THE TALLEST TREE OF THE SAME SPECIES.  EXIT=STMT 156
C
      DO 123 I=1,MAXTPP(IHAB)*2
      CALL ESRANN (DRAW)
      WK6(I)=DRAW
  123 CONTINUE
      NDRAW=0
      ITEMP=NUMSPE+1
      IF(ITEMP.GT.ITPP) GO TO 158
      DO 156 N=ITEMP,ITPP
      NDRAW=NDRAW+1
      DRAW=WK6(NDRAW)
      DO 148 I=1,NOFSPE-1
      IF(DRAW.GT.SUMUP(I)) GO TO 148
      II=I
      GO TO 150
  148 CONTINUE
      II=NOFSPE
  150 CONTINUE
      ICODE(N)=II
      IASEP(N)=3
      NDRAW=NDRAW+1
      DRAW=WK6(NDRAW)
      FTEMP=FLOKDT-FLOAT(KDTOLD)
      CALL ESXCSH (TALL(II),XMIN(II),FTEMP,II,DRAW,HHT)
      HEIGHT(N)= HHT+HTADJ(II)
      AGEXC(N)=FTEMP-DELAY
      ABIRTH(N)=AGEXC(N)
C
      IF(HEIGHT(N).LT.XMIN(II)) HEIGHT(N)=XMIN(II)
      IF(HEIGHT(N).GT.HHTMAX(II)) HEIGHT(N)=HHTMAX(II)
      HTIMLT(N)=STOMLT(I)
C
      IF(DEBUG)WRITE(JOSTND,*)'N, ITEMP, ITPP, HHT, FTEMP= ',
     &N,ITEMP,ITPP,HHT,FTEMP
C
  156 CONTINUE
  158 CONTINUE
      FTEMP=PROB1(NCOUNT)
      FTEMP2=FLOAT(NEWTPP)/FLOAT(ITPP)
      ITEMP=ITPP-NEWTPP
      DO 55 I=1,ITPP
      ESPROB(I)=FTEMP
      IF(I.LT.ITEMP+1) ESPROB(I)=FTEMP-PNN(NCOUNT)
      IF(INGRO.EQ.1.OR.MATCH.EQ.1) ESPROB(I)=FTEMP*FTEMP2
      IF(ESPROB(I).LT.0.0001) ESPROB(I)=0.0001
   55 CONTINUE
      PNN(NCOUNT)=FTEMP
C
C     STATEMENT 163 IS USED WHEN STOADJ .LE. 0.0
C
  163 CONTINUE
      IF(STOADJ.LT.0.0001) THEN
        ITPP=0
        TPPLN=0.0
        TPP=0.0
        NEWTPP=0
      ENDIF
C
C     CREATE TREES FROM 'PLANT' AND 'NATURAL' KEYWORDS.  EXIT=STMT 321
C
      CALL ESRANN (DRAW)
      ITEMP=DRAW*100000.0+0.5
      ESAVE=FLOAT(ITEMP)
      IF(MODE.NE.1) GO TO 321
      ITODO=0
      CALL OPFIND (2,MYACTS,NTODO)
      IF(DEBUG) WRITE (JOSTND,'(''# PLANT & NATURAL 322='',I4)') NTODO
      ITOOMP=0
      DO 322 IDO=1,NTODO
      CALL OPGET (IDO,6,IPYEAR,IACTK,NP,PRMS)
      IF(IACTK .LE. 0) GO TO 322
      ITODO=ITODO+1
      IF (ITPP+ITODO.GT.99) THEN
         ITOOMP=ITOOMP+1
         CALL OPDEL1(IDO)
         ITODO=ITODO-1
         GO TO 322
      ENDIF
      IPNSPE=IFIX(PRMS(1))
      PTREE=(PRMS(2)*(PRMS(3)/100.0)) /DUPNPT
      TRAGE=PRMS(4)
      IF(TRAGE.LT.0.5) TRAGE=2.0
      IF(TRAGE.GT.10.0) TRAGE=10.0
      AGEPL(ITODO)=TRAGE
      DELAY=FLOAT(IPYEAR) -(KDT+1-FINT)
      TREEHT=PRMS(5)
      ISHADE=IFIX(PRMS(6))
      SHADE=0.0
      IF(ISHADE.EQ.1) SHADE=1.0
      IF(ISHADE.EQ.2) SHADE=-1.0
      FTEMP=BAA
C      IF(FTEMP.LT.1.5) FTEMP=0.0
      IF(FTEMP.LT.1.0) FTEMP=1.0
      IF(DEBUG) WRITE(JOSTND,7048) PTREE,SHADE,FTEMP,DUPNPT,BA,TRAGE
 7048 FORMAT('PTREE=',F6.1,'  SHADE=',F4.1,'  FTEMP=',F6.1,
     &  '  DUPNPT=',F4.1,'  BA=',F6.1,'  TRAGE=',F4.1)
C
C THE ORIGINAL SHADE CODE ADJUSTMENT SHOWN HERE WAS NOT HAVING MUCH EFFECT.
C REPLACED BY A STRAIGHT RATIO OF BA ON THE PLOT BY DIXON 5/22/08
C NOTE CHANGED SETTING OF FTEMP, AND ACCUMULATIONS OF SUMS, ABOVE
C
C      IF(BA.GT.10.0) PTREE=PTREE +2.0*(PTREE*SHADE*(((FTEMP/DUPNPT)/BA)
C     &  -(1.0/DUPNPT) ) )
      IF(ISHADE.EQ.1)THEN
        PTREE=PTREE*NPTIDS*FTEMP/SUM1
      ELSEIF(ISHADE.EQ.2)THEN
        PTREE=PTREE*NPTIDS*(SUM1/FTEMP)/SUM2
      ENDIF
      IF(DEBUG)WRITE(JOSTND,*)'NNID,FTEMP,SUM1,SUM2,PTREE= ',
     &NNID,FTEMP,SUM1,SUM2,PTREE
C
      DILATE=FIRST(2,IPNSPE)
      TMTIME=TIME
      TIME=FINT
      CALL ESSUBH (IPNSPE,HHT,EMSQR,DILATE,DELAY,ELEV,IHTSER,GENTIM,
     &  TRAGE)
      TIME=TMTIME
      IF(TREEHT.GE.0.1) THEN
        HHT=TREEHT
        XH=ALOG(HHT)
  161   CONTINUE
        XXH=EXP(BACHLO(XH,0.5,ESRANN))
        IF(XXH.LT.(0.5*HHT) .OR. XXH.GT.(2.0*HHT)) GO TO 161
        HHT=XXH
        HHT=HHT+HTADJ(IPNSPE)
        IF(HHT.LT.0.05) HHT=0.05
      ELSE
        HHT=HHT+HTADJ(IPNSPE)
        IF(HHT.LT.XMIN(IPNSPE) ) HHT=XMIN(IPNSPE)
      ENDIF
      FIRST(2,IPNSPE)=SQRT(DILATE)
      IF(HHT.GT.HHTMAX(IPNSPE)) HHT=HHTMAX(IPNSPE)
      IF(DEBUG) WRITE(JOSTND,7050) IPNSPE,HHT,PTREE,ITODO,ITPP,IACTK,
     &  TRAGE
 7050 FORMAT('IPNSPE=',I3,'  HHT=',F6.2,'  PTREE=',F7.2,'  ITODO=',I4,
     &  '  ITPP=',I4,'  IACTK=',I4,'  TRAGE=',F4.1)
      ICODE(ITPP+ITODO)=IPNSPE
      IASEP(ITPP+ITODO)=4
      IF(IACTK.EQ.430) IASEP(ITPP+ITODO)=3
      HEIGHT(ITPP+ITODO)=HHT
      ESPROB(ITPP+ITODO)=PTREE
C----------
C     FOR PLANTED TREES, DELAY IS THE NUMBER OF YEARS BETWEEN THE START
C     OF THE PROJECTION CYCLE AND THE PLANTING OCCURRANCE (0 to FINT-1)
C     RESET GENTIM ACCORDINGLY. GED  03-27-09
C
      IF(FINT-DELAY .LT. 5)THEN
        GENTIM = 0.
      ELSE
        GENTIM = FINT-DELAY-5.0
      ENDIF
C----------
      FTEMP=TRAGE
      IF(FTEMP.GT.GENTIM) FTEMP=GENTIM
      HTIMLT(ITPP+ITODO)=FTEMP/(GENTIM+0.0001)
      AGEPL(ITPP+ITODO)=FINT-DELAY+AGEPL(ITODO)
C
  322 CONTINUE
      IF (ITOOMP.GT.0) THEN
         CALL RCDSET(1,.TRUE.)
         WRITE (JOSTND,323) ITOOMP
  323    FORMAT (/'******** WARNING:',I4,' PLANT OR NATURAL REQUESTS',
     >            ' WERE CANCELED BECAUSE THERE WERE TOO MANY.')
      ENDIF
      ITP=ITPP+ITODO
  321 CONTINUE
      CALL ESRNSD (.TRUE.,ESAVE)
      IF(DEBUG) WRITE(JOSTND,7014) ESAVE
      IF(STOADJ.LT.0.0001) GO TO 229
      IF(ITP.LT.5) THEN
        DO 160 I=1,ITP
        NOTE(I)=1
  160   CONTINUE
        GOTO 176
      ENDIF
C
C     SCREEN OUT TREES WITH VERY LOW PROBABILITIES.
C
      ISTART = 1
      IF(PROB1(NCOUNT).LT.0.00011) ISTART = ITPP +1
C
C     PICK BEST TREES.  STEP 1:  TWO TALLEST TREES REGARDLESS OF SPECIES
C
      NBEST=0
      NUM2PK=ITP-ISTART+1
      DO 166 J=1,2
      IF(NBEST.GE.NUM2PK) GO TO 176
      FTEMP=0.001
      DO 164 I=ISTART,ITP
      IF(NOTE(I).EQ.1) GO TO 164
      IF(HEIGHT(I).LT.FTEMP) GO TO 164
      FTEMP=HEIGHT(I)
      ITEMP=I
  164 CONTINUE
      N=ICODE(ITEMP)
      NULL(N)=1
      NOTE(ITEMP)=1
      NBEST=NBEST+1
  166 CONTINUE
C
C     STEP 2:  IDENTIFY THE TALLEST TREE OF EACH ADDITIONAL SPECIES
C
      DO 169 J=1,NOFSPE
      DO 168 I=ISTART,ITP
      IF(ICODE(I).NE.J) GO TO 168
      IF(NOTE(I).EQ.1) GO TO 168
      IF(HEIGHT(I).LT.TALL(J)) GO TO 168
      TALL(J) = HEIGHT(I)
      ILSP(J)=I
  168 CONTINUE
  169 CONTINUE
      DO 170 J=1,NOFSPE
      IF(NULL(J).EQ.1) GO TO 170
      ITEMP=ILSP(J)
      IF(ITEMP.EQ.0) GO TO 170
      NOTE(ITEMP)=1
      NBEST=NBEST+1
  170 CONTINUE
      IF(NBEST.GE.4.OR.NBEST.GE.NUM2PK) GO TO 176
C
C     STEP 3:  IDENTIFY TALLEST REMAINING TREES BY DECREASING HEIGHT
C     UNTIL A MINIMUM OF 4 TREES IS REACHED, IF POSSIBLE.
C
  172 CONTINUE
      FTEMP=0.001
      DO 174 J=ISTART,ITP
      IF(NOTE(J).EQ.1) GO TO 174
      IF(HEIGHT(J).LT.FTEMP) GO TO 174
      FTEMP=HEIGHT(J)
      ITEMP=J
  174 CONTINUE
      NBEST=NBEST+1
      NOTE(ITEMP)=1
      IF(NBEST.GE.NUM2PK) GO TO 176
      IF(NBEST.LT.4) GO TO 172
  176 CONTINUE
C
C     NOTE: STMT 229 IS USED WHEN STOADJ .LE. 0.0
C
  229 CONTINUE
C
C     PRINT OUT PLOT STATISTICS IF DEBUG IS ON.
C
      IF(DEBUG) THEN
        ITEMP=(RADIAN*57.2958) +0.5
        WRITE(JOSTND,6002) NN,IHAB,ITEMP,SLO,IPREP,PROB1(NCOUNT),
     &  ITPP,NEWTPP,NCOUNT
 6002   FORMAT(/,'PLOT  H.TYPE  ASP  SLO  PREP',2X,'P(STOCK)  TREES ',
     &  'PER PLOT    NCOUNT',/,4('-'),2X,6('-'),2X,2(3('-'),2X),
     &  4('-'),2X,8('-'),2X,16('-'),2X,6('-'),/,I3,T8,I3,T14,I4,T19,
     &  F4.2,T27,I1,T32,F6.4,T40,I3,' TOTAL,',I3,' NEW',T60,I3,//,T4,
     &  'TREE RECORDS:',T19,'TREE#  SPECIES  HEIGHT  BEST?  ASEP#  ',
     &  'ESPROB  HTIMLT',/,T19,'-----  -------  ------  -----  -----',
     &  '  ------  ------')
        IF (ITPP.GT.0) WRITE(JOSTND,6006) (I,ICODE(I),HEIGHT(I),
     &  NOTE(I),IASEP(I),ESPROB(I),HTIMLT(I),  I=1,ITPP)
 6006   FORMAT(T20,I3,T29,I2,T36,F4.1,T45,I1,T49,I4,2X,F8.4,2X,F6.3)
        IF(MODE.EQ.1) WRITE(JOSTND,6007)
 6007   FORMAT(T3,' PREDICTED NATURALS ABOVE; PLANT/NATURAL BELOW.')
        IF(MODE.EQ.1) WRITE(JOSTND,6006) (I,ICODE(I),HEIGHT(I),NOTE(I),
     &  IASEP(I),ESPROB(I),HTIMLT(I),  I=ITPP+1,ITP)
      ENDIF
      DO 205 I=1,NOFSPE
      EXCESS(I)=0.0
      SUMHTS(I)=0.0
      SUMESP(I)=0.0
  205 CONTINUE
C
C     MAKE SURE THAT THERE IS ROOM IN THE TREE LIST FOR REGENERATION.
C     THE CALL TO RDESCP INSURES THAT THE SPACE REQUIRED IS BELOW THAT
C     NEEDED BY THE ROOT DISEASE MODEL.  RDESCP RETURNS THE MAXIMUM
C     NUMBER OF TREES THAT ROOT DISEASE CAN HANDLE.  IF RROT IS NOT
C     BEING RUN, MXRR IS RETURNED AS MAXTRE.
C
      CALL RDESCP (MAXTRE, MXRR)
      IF(ITRN.GE.MXRR-99) THEN
        CALL ESGENT (ITRNIN)
        ITEMP=MXRR/2
        CALL ESCPRS (ITEMP,DEBUG)
        ITRNIN=ITRN+1
C
C       OPFIND IS CALLED TO RESET THE PARAMETERS FOR THE
C       PLANT & NATURAL KEYWORDS.
C
        CALL OPFIND (2,MYACTS,NTODO)
      ENDIF
C
C     PASS REGENERATION TO TREE LIST, NATURALS FIRST.  EXIT=STMT 200
C
      IF(ITPP.LT.1) GO TO 200
      DO 33 N=1,ITPP
      I=ICODE(N)
      IF((ISCT(I,1).EQ.0).AND.(ISCT(I,2).EQ.0))JSPIN(I)=JSPINDEF
      HHT=HEIGHT(N)
      IF(ESPROB(N).LT.0.00011) GO TO 199
      IF(NOTE(N).NE.1) GO TO 199
      ITRN=ITRN+1
      IMC(ITRN)=1
      ISP(ITRN)=I
      ITRE(ITRN)=NNID
      CFV(ITRN)=0.
      ITRUNC(ITRN)=0
      DEFECT(ITRN)=0.
      ISPECL(ITRN)=0
      NORMHT(ITRN)=0
      HT2TD(ITRN,1)=0.
      HT2TD(ITRN,2)=0.
      PROB(ITRN)=(ESPROB(N)*300.0) /DUPNPT
      DBH(ITRN)=0.1
      HT(ITRN)=HHT
      ABIRTH(ITRN)=AGADSB(N)
C
      PTOCFV(ITRN)=0.
      PMRCFV(ITRN)=0.
      PMRBFV(ITRN)=0.
      NCFDEF(ITRN)=0
      NBFDEF(ITRN)=0
      PDBH(ITRN)=0.
      PHT(ITRN)=0.
      ZRAND(ITRN)=-999.
C
      CALL RDESTB (ITRN,PROB(ITRN))
C
      ICR(ITRN)=0
      DG(ITRN)=0.0
      HTG(ITRN)=0.0
      PCT(ITRN)=0.0
      OLDPCT(ITRN)=0.0
      OLDRN(ITRN)=0.0
      WK1(ITRN)=0.0
      WK2(ITRN)=0.0
      WK4(ITRN)=HTIMLT(N)
      BFV(ITRN)=0.0
      PTBALT(ITRN)=PTBAA(NNID)
      IDTREE(ITRN)=IDCMP1+ITMP+ITRN
      CALL MISPUTZ(ITRN,0)
C
C     CALL BLISTER RUST TO PROCESS PLANTED TREES.
C
      CALL BRESTB (TIME,5,I)
C
C     BEST TREES NOT SUBJECT TO MORTALITY FOR THE FIRST 20 YEARS.
C
      IESTAT(ITRN)= IDSDAT+20
      GO TO 33
  199 CONTINUE
      EXCESS(I)=EXCESS(I)+1.0
      SUMHTS(I)=SUMHTS(I)+HHT
      SUMESP(I)=SUMESP(I)+ESPROB(N)
   33 CONTINUE
  200 CONTINUE
C
C     PASS EXCESS TREES TO THE TREE LIST.  EXIT=STMT 228
C
      DO 228 I=1,NOFSPE
      IF(EXCESS(I).LT.0.5) GO TO 228
      IF(SUMESP(I).LT.0.00011.AND.I.LT.NOFSPE) THEN
        SUMESP(I+1)=SUMESP(I+1)+SUMESP(I)
        SUMESP(I)=0.0
        GO TO 228
      ENDIF
      IF((ISCT(I,1).EQ.0).AND.(ISCT(I,2).EQ.0))JSPIN(I)=JSPINDEF
      FTEMP2=SUMESP(I)/(EXCESS(I)+0.00001)
      IBRKUP=EXCESS(I)/5.0 +1.0
      BRKUP=FLOAT(IBRKUP)
      DO 226 II=1,IBRKUP
      ITRN=ITRN+1
      HHT=SUMHTS(I)/EXCESS(I)
      IMC(ITRN)=2
      ISP(ITRN)=I
      ITRE(ITRN)=NNID
      CFV(ITRN)=0.0
      ITRUNC(ITRN)=0
      DEFECT(ITRN)=0.
      ISPECL(ITRN)=0
      NORMHT(ITRN)=0
      XCSMAX=EXCESS(I)/BRKUP
      FTEMP=PASMAX/BRKUP
      IF(XCSMAX.GT.FTEMP) XCSMAX=FTEMP
      PROB(ITRN)= (FTEMP2*300.0*XCSMAX) /DUPNPT
      DBH(ITRN)=0.1
      HT(ITRN)=HHT
      ABIRTH(ITRN)=AGEXC(I)
C
      PTOCFV(ITRN)=0.
      PMRCFV(ITRN)=0.
      PMRBFV(ITRN)=0.
      NCFDEF(ITRN)=0
      NBFDEF(ITRN)=0
      PDBH(ITRN)=0.
      PHT(ITRN)=0.
      ZRAND(ITRN)=-999.
C
      CALL RDESTB (ITRN,PROB(ITRN))
C
      ICR(ITRN)=0
      DG(ITRN)=0.0
      HTG(ITRN)=0.0
      PCT(ITRN)=0.0
      OLDPCT(ITRN)=0.0
      OLDRN(ITRN)=0.0
      WK1(ITRN)=0.0
      WK2(ITRN)=0.0
      WK4(ITRN)=STOMLT(I)
      BFV(ITRN)=0.0
      IESTAT(ITRN)=0
      PTBALT(ITRN)=PTBAA(NNID)
      IDTREE(ITRN)=IDCMP1+ITMP+ITRN
      CALL MISPUTZ(ITRN,0)
C
C     CALL BLISTER RUST TO PROCESS PLANTED TREES.
C
      CALL BRESTB (TIME,5,I)
      PASTPA(I)=PASTPA(I) +(FTEMP2*300.0*XCSMAX) /DUPNPT
      TCROP2=TCROP2 +(FTEMP2*300.0*XCSMAX) /DUPNPT
  226 CONTINUE
  228 CONTINUE
C
C     PASS TREES FROM 'PLANT' AND 'NATURAL' KEYWORDS.  EXIT = STMT 227
C
      IF(MODE.NE.1) GO TO 227
      J=ITP - ITPP
      DO 35 JJ=1,J
      I= ICODE(ITPP+JJ)
      IF((ISCT(I,1).EQ.0).AND.(ISCT(I,2).EQ.0))JSPIN(I)=JSPINDEF
      FTEMP=ESPROB(ITPP+JJ)
      IF(FTEMP.LT.0.00011.AND.JJ.LT.J) THEN
        ESPROB(ITPP+JJ+1)=ESPROB(ITPP+JJ+1)+FTEMP
        ESPROB(ITPP+JJ)=0.0
        GO TO 35
      ENDIF
      IBRKUP=FTEMP/10.0 +1.0
      BRKUP=FLOAT(IBRKUP)
      TOTTPA(I)=TOTTPA(I)+FTEMP
      PASTPA(I)=PASTPA(I)+FTEMP
      BESTPA(I)=BESTPA(I)+FTEMP
      TCROP1=TCROP1+FTEMP
      TCROP2=TCROP2+FTEMP
      TTOTTP=TTOTTP+FTEMP
      DO 24 II=1,IBRKUP
      ITRN=ITRN+1
      HHT=HEIGHT(ITPP+JJ)
      IMC(ITRN)=1
      IF(NOTE(ITPP+JJ).NE.1.AND.STOADJ.GT.0.0) IMC(ITRN)=2
      ISP(ITRN)=I
      CFV(ITRN)=0.
      ITRUNC(ITRN)=0
      DEFECT(ITRN)=0.
      ISPECL(ITRN)=0
      NORMHT(ITRN)=0
      ITRE(ITRN)=NNID
      FTEMP2=FTEMP/BRKUP
      PROB(ITRN)=FTEMP2
      DBH(ITRN)=0.1
      HT(ITRN)=HHT
      ABIRTH(ITRN)=AGEPL(ITPP+JJ)
C
      PTOCFV(ITRN)=0.
      PMRCFV(ITRN)=0.
      PMRBFV(ITRN)=0.
      NCFDEF(ITRN)=0
      NBFDEF(ITRN)=0
      PDBH(ITRN)=0.
      PHT(ITRN)=0.
      ZRAND(ITRN)=-999.
C
      CALL RDESTB (ITRN,PROB(ITRN))
C
      ICR(ITRN)=0
      DG(ITRN)=0.0
      HTG(ITRN)=0.0
      PCT(ITRN)=0.0
      OLDPCT(ITRN)=0.0
      OLDRN(ITRN)=0.0
      WK1(ITRN)=0.0
      WK2(ITRN)=0.0
      WK4(ITRN)=HTIMLT(ITPP+JJ)
      BFV(ITRN)=0.0
      IESTAT(ITRN)=0
      PTBALT(ITRN)=PTBAA(NNID)
      IDTREE(ITRN)=IDCMP1+ITMP+ITRN
      CALL MISPUTZ(ITRN,0)
C
C     CALL BLISTER RUST TO PROCESS PLANTED TREES.
C
      CALL BRESTB (TIME,5,I)
   24 CONTINUE
   35 CONTINUE
  227 CONTINUE
C
C     SUMMARIZE STATISTICS FOR THE PLOT
C
      SUMPRB=SUMPRB+PROB1(NCOUNT)
      SUMPRE(IPREP)=SUMPRE(IPREP) +1.0
      SUMPRE(5)=SUMPRE(5)+1.0
      IHABT(IHAB)=IHABT(IHAB) +1
      IF(ITPP.LT.1) GO TO 217
      DO 215 I=1,ITPP
      N=ICODE(I)
      FTEMP2=(ESPROB(I)*300.0) /DUPNPT
      TOTTPA(N)=TOTTPA(N)+FTEMP2
      TTOTTP=TTOTTP+FTEMP2
      IF(NOTE(I).NE.1) GO TO 215
      BESTPA(N)=BESTPA(N)+FTEMP2
      TCROP1=TCROP1+FTEMP2
      PASTPA(N)=PASTPA(N)+FTEMP2
      TCROP2=TCROP2+FTEMP2
  215 CONTINUE
  217 CONTINUE
C
C     END OF PLOT CYCLE. RETURN AND CONTINUE PROJECTION.
C
  201 CONTINUE
  202 CONTINUE
  203 CONTINUE
C
C     ALL PLOTS ARE PROCESSED.
C
      IF(DEBUG) WRITE (JOSTND,6030) ITRNIN,ITRN
 6030 FORMAT(36('= '),/,'ITRNIN=',I6,'  ITRN=',I6)
      IF(NTODO.GT.0) THEN
        DO 225 ITODO=1,NTODO
        CALL OPGET (ITODO,6,IPYEAR,IACTK,NP,PRMS)
        IF(IACTK .LE. 0) GO TO 225
        ITEMP=IFIX(PRMS(1))
        IPLANT(ITEMP)=1
        CALL OPDONE (ITODO,IPYEAR)
  225   CONTINUE
      ENDIF
C
C     IF NEW TREES HAVE BEEN ADDED TO THE TREELIST
C     'GROW' TREES TO THE END OF THE CYCLE
C
      IF(ITRN.GE.ITRNIN)CALL ESGENT (ITRNIN)
      IF(DEBUG)WRITE(JOSTND,*)'AFTER CALL TO ESGENT-ITRN,ITRNIN= ',
     &ITRN,ITRNIN 
      DO 230 I= ITRNIN,ITRN
C----------
C  CALCULATE A CROWN WIDTH FOR SEEDLINGS/SPROUTS
C----------
      CRDUM=1.
      CALL CWCALC(ISP(I),PROB(I),DBH(I),HT(I),CRDUM,
     &            ICR(I),CW,0,JOSTND)
      CRWDTH(I)=CW
      ABIRTH(I)= ABIRTH(I)+GENTIM
  230 CONTINUE
C
C     PRINT REGENERATION SUMMARY
C
      IF(IPRINT.EQ.0) GO TO 260
      SUMPRB=SUMPRB/DUPNPT
      IF(NTALLY.NE.1) GO TO 233
      DO 204 I=1,4
      SUMPRE(I)=(SUMPRE(I)/SUMPRE(5))*100.0
  204 CONTINUE
      DO 232 I=1,16
      IHABT(I)=IHABT(I)/IDUP
  232 CONTINUE
  233 CONTINUE
      DO 206 N=1,NOFSPE
      AVEHT(N)=SUMPX(N)/(SUMPI(N)+ .00001)
      IF(BESTPA(N).LT.0.5) AVEHT(N)=0.0
      TOTPCT(N)=(TOTTPA(N)/(TTOTTP+.00001))*100.0
      BESPCT(N)=(BESTPA(N)/(TCROP1+.00001))*100.0
      PASPCT(N)=(PASTPA(N)/(TCROP2+.00001))*100.0
  206 CONTINUE
      N=SUMPRE(1) +0.5
      NN=SUMPRE(2) +SUMPRE(4) +0.5
      ITEMP=SUMPRE(3) +0.5
      J = ZHARV+.5
      K = ZMECH+.5
      L = ZBURN+.5
      IF(INGRO.EQ.1) GO TO 258
      CALL PPEATV (LPPE)
      IF(NTALLY.EQ.1.OR.LPPE) THEN
        CALL GROHED (JOREGT)
        WRITE(JOREGT,6012) NPLT,MGMID
 6012   FORMAT(/,76('-'),/,T17,'REGENERATION ESTABLISHMENT ',
     &  'MODEL VERSION 2.0',/,T9,'STAND ID: ',A26,5X,
     &  'MANAGEMENT CODE: ',A4,/,76('-') )
        CALL PPLABS(JOREGT)
        WRITE(JOREGT,6013) J,K,L,N,NN,ITEMP,(IHABT(I),I=1,16)
 6013   FORMAT(/,T3,'SITE PREP SUMMARY',T37,'PLOT HABITAT TYPE SUMMARY',
     &  /,19('-'),T23,54('-'),/,'PREP:NONE MECH BURN   SERIES:',
     &  '<--- DF --> <--- GF -->  C WH <--- AF & MH --->',/,'YEAR:',
     &  3(I4,1X),'   GROUP: 1  2  3  4  5  6  7  8  9 10 11 12 13 14 ',
     &  '15 16',/,T2,'PCT:',I4,2I5,'   #PLOTS:',I2,15I3)
        IF(IPINFO.EQ.3) WRITE(JOREGT,6022)
 6022   FORMAT (/,'NOTE: SOME OR ALL PLOT ID CODES FROM THE TREE ',
     &  'DATA FILE DID NOT MATCH',/,T7,'THOSE IN THE PLOTINFO FILE.  ',
     &  'STAND VALUES WERE SUBSITUTED.')
        IF(NONSTK.GT.0) WRITE(JOREGT,6017) NONSTK
 6017   FORMAT(/,'NOTE:',I3,' NON-STOCKABLE PLOTS EXCLUDED FROM ',
     &  'THIS SUMMARY','.')
      ENDIF
      ITEMP=KDT+1-J
      IF(STOADJ.LT.0.0001) SUMPRB=0.0
      WRITE(JOREGT,6021) NTALLY,ITEMP,SUMPRB,KDT
 6021 FORMAT(/,'TALLY',I2,' AT',I3,' YEARS.  PROBABILITY OF',
     &  ' STOCKING IS ',F6.4,' IN THE FALL OF',I5,'.')
      N=0
      CLAST(1)=CBLANK
      DO 207 I=1,NOFSPE
      IF(IPLANT(I).LT.1) GO TO 207
      N=N+1
      CLAST(N)=NSP(I,1)
  207 CONTINUE
      IF(N.EQ.0) N=1
      IF(MODE.EQ.1) WRITE(JOREGT,6015) (CLAST(I),I=1,N)
 6015 FORMAT(/'NOTE: REPORTED PROBABILITY OF STOCKING DOES NOT ',
     &  'INCLUDE TREES FROM PLANT ',/,T7,'AND NATURAL KEYWORDS.  ',
     &  'SPECIES= ',20A4,(/,T40,20A4))
      WRITE(JOREGT,6016) REGNBK
 6016 FORMAT(/,T6,'SUMMARY OF ALL',T30,'SUMMARY OF BEST         ',
     &  'TREES <',F4.1,' IN. DBH',/,T6,'TREES REGENERATING',T30,
     &  'TREES REGENERATING      BEING PROJECTED BY',/,T6,
     &  'DURING THIS TALLY.',T30,'DURING THIS TALLY.      THE ',
     &  'PROGNOSIS MODEL',/,T6,19('-'),5X,19('-'),5X,19('-'),/,13X,
     &  'TREES % OF      TREES % OF  AVERAGE     TREES % OF',/,5X,
     &  'SPECIES /ACRE TOTAL     /ACRE TOTAL HEIGHT      /ACRE TOTAL ',
     &  'SPECIES',/,5X,7('-'),1X,5('-'),1X,5('-'),5X,5('-'),1X,5('-'),
     &  1X,7('-'),5X,5('-'),1X,5('-'),1X,7('-') )
      DO 222 I=1,NOFSPE
      IF(TOTTPA(I).LE.0. .AND. BESTPA(I).LE.0. .AND. PASTPA(I).LE.0.)
     &GO TO 222
      WRITE(JOREGT,6014) NSP(I,1),TOTTPA(I),TOTPCT(I),BESTPA(I),
     &  BESPCT(I),AVEHT(I),PASTPA(I),PASPCT(I),NSP(I,1)
 6014 FORMAT(T9,A2,2X,2F6.0,4X,2F6.0,1X,F5.1,6X,2F6.0,3X,A2)
  222 CONTINUE
      WRITE(JOREGT,6026) TTOTTP,TCROP1,TCROP2
 6026 FORMAT(T14,5('-'),T30,5('-'),T54,5('-'),/,T12,F7.0,T28,F7.0,
     &  T52,F7.0,/)
      GO TO 259
C
C     THIS SECTION PRINTS INGROWTH SUMMARY
C
  258 CONTINUE
      WRITE(JOREGT,6012) NPLT,MGMID
      IF(MODE.EQ.1) THEN
         IF (STOADJ.GT.0.) THEN
            WRITE(JOREGT,6011) TTOTTP,
     &           'INGROWTH, PLANT, AND NATURAL ',KDT
         ELSE
            WRITE(JOREGT,6011) TTOTTP,
     &           'PLANT AND NATURAL ',KDT
         ENDIF
      ELSE
         WRITE(JOREGT,6011) TTOTTP,'INGROWTH ',KDT
      ENDIF
 6011 FORMAT(F7.1,' ',A,
     &  'TREES/ACRE ADDED IN THE FALL OF',I5)
      WRITE(JOREGT,6029) (NSP(I,1),I=1,NOFSPE)
 6029 FORMAT(/('   SPECIES:',20(2X,A2,1X)))
      WRITE(JOREGT,6032)(TOTTPA(J),J=1,NOFSPE)
 6032 FORMAT(/('TREES/ACRE:',20F5.0))
  259 CONTINUE
  260 CONTINUE
C
C     PRINT PLOT SUMMARY TABLE IF REQUESTED.
C
      CALL DBCHK (DEBUG,'ESPSUM',6,ICYC)
      IF(DEBUG) THEN
        WRITE(JOREGT,6018) (NSP(I,1),I=1,NOFSPE)
 6018   FORMAT('IN ESTAB (ESPSUM PLOT SUMMARY): '/
     &  '     SLOPE ASPECT HAB. TOPO SITE       ',
     &  ' <------PLOT OVERSTORY DENSITY (SQ.FT./ACRE)----->',/,
     &  'PLOT %/100 (DEG.) GRP. POS. PREP  P(S)  TOTAL ',11(A2,2X))
        DO 221 I=1,NPTIDS
        NNID=IPTIDS(I)
        N=(PASP(NNID)*57.2958) +0.5
        NN=IPHYS(NNID)
        ITEMP=IPPREP(I*IDUP)
        WRITE(JOREGT,6020) NNID,PSLO(NNID),N,IPHAB(NNID),CTOPO(NN),
     &  CPREP(ITEMP),PROB1(I*IDUP),BAAA(NNID),(OVER(J,NNID),J=1,NOFSPE)
 6020   FORMAT(1X,I3,F6.2,I6,2X,I3,1X,2(1X,A4),F7.4,F6.0,
     &  (/,2X,25F4.0))
  221   CONTINUE
      ENDIF
      KDTOLD=KDT
      MODE=0
      RETURN
      END
