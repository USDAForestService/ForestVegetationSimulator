      SUBROUTINE PPIN
      IMPLICIT NONE
C----------
C  **PPIN--PPBASE   DATE OF LAST REVISION:  06/03/10
C----------
C
C     OPTION PROCESSOR FOR THE PARALLEL PROCESSING
C     EXTENSION TO THE STAND PROGNOSIS SYSTEM.
C
C     NICHOLAS L. CROOKSTON          DEC 1979 AND FEB 1982
C     INT-FORESTRY SCIENCES LABORATORY-MOSCOW, IDAHO
C
C     CALLED FROM : PPEMAIN.
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
      INCLUDE 'PPEPRM.F77'
      INCLUDE 'OPCOM.F77'
      INCLUDE 'PPHVCM.F77'
      INCLUDE 'HVDNCM.F77'
      INCLUDE 'CONTRL.F77'
      INCLUDE 'PPCNTL.F77'
      INCLUDE 'METRIC.F77'
C
COMMONS
C
      INTEGER ISIZE
      PARAMETER (ISIZE=72)

      INTEGER KODE,NUMBER,I,I2,J,ISAV,INFILE,IRC,IRPS
      REAL XWT,DMULT,AMULT,SNEI
      CHARACTER*10 KARD(7),CNEWID
      CHARACTER*80 RECORD
      CHARACTER*8 TABLE(ISIZE),KEYWRD
      CHARACTER*26 SRD1,SRD2
      CHARACTER*7 CSTAT
      CHARACTER*4 MRD1,MRD2,CFOUR
      LOGICAL LNOTBK(7),LALL,LPRT,LKECHO
      REAL ARRAY(7)
      DATA TABLE /
     >     'REWIND','ADDSTAND','    ','DEBUG','PROJECT'
     >     ,'MSTRINT','MSTRCYCS','STARTYR','NODEBUG'
     >     ,'ENDFILE','READHIST','SELISN','SELSTAND','SELMGMID'
     >     ,'NEWEIGHT','COMPID','COMPOSIT','NOCOMPOS','SUMMARY'
     >     ,'NOSUM','COPYSUM','NOCOPSUM','ACTSUM','NOACTSUM','STNDTABS'
     >     ,'YIELDS','SNDCMP','NOSNDCMP','SMPTRE','NOSMPTRE'
     >     ,'CVOUTPUT','MXCLRCUT','PPSINIT','INTERACT','PAUSE','RESTORE'
     >     ,'NBDENEFF','MSPOLICY','EXACT','NOTEXACT','DEFCCUT','WSBWALL'
     >     ,'TMPLINIT','TEMPLATE','AREALOCS','NEIGHBOR','    '
     >     ,'OPEN','CLOSE','AUTOID','NOAUTOID','SELSPLAB','SELMSPLB'
     >     ,'BYSTAND','BYMGMID','BYSPLAB','BYMSPLB','NOSELECT'
     >     ,'NOBYGRP','COPYCOMP','NOCOPCMP','LABWTS','NOLABWTS'
     >     ,'LABWTSID','RDACCESS','CMUNIT','NOCMUNIT','LDMGMTID'
     >     ,'COMMENT','ADDFILE','BMPPIN','SYSTEM'/
C
C     **********          EXECUTION BEGINS          **********
C
C     IF VARIABLES ARE INITIALIZED, THEN: SKIP INITIALIZATON.
C
    5 CONTINUE
      IF (.NOT.LIN1ST) GO TO 10
      LIN1ST=.FALSE.
      CALL PPINIT
   10 CONTINUE
      LKECHO=.TRUE.
      CALL KEYRDR (IREAD,JOPPRT,PDEBUG,KEYWRD,LNOTBK,
     >             ARRAY,IRECNT,KODE,KARD,LFLAG,LKECHO)
C
C     RETURN KODES 0=NO ERROR,1=COLUMN 1 BLANK,2=EOF
C
      IF (KODE.LE.0) GOTO 30
      IF (KODE.NE.2) GOTO 20
      IF (JADFIL.EQ.0) CALL ERRGRO(.FALSE.,2)
      IREAD=JADFIL
      JADFIL=0
      GOTO 10
   20 CONTINUE
      CALL ERRGRO (.TRUE.,6)
      GOTO 10
   30 CONTINUE
      CALL FNDKEY (NUMBER,KEYWRD,TABLE,ISIZE,KODE,PDEBUG,JOPPRT)
C
C     RETURN KODES 0=NO ERROR,1=KEYWORD NOT FOUND.
C
      IF (KODE .EQ. 0) GO TO 40
      IF (KODE .EQ. 1) THEN
         CALL ERRGRO (.TRUE.,1)
         GOTO 10
      ENDIF
   40 CONTINUE
      GO TO 90
C
C     SPECIAL END-OF-FILE TARGET
C
   80 CONTINUE
      IF(JADFIL .GT. 0)THEN
        IREAD=JADFIL
        JADFIL=0
        GO TO 10
      ENDIF
      CALL ERRGRO (.FALSE.,2)
   90 CONTINUE
C
C     PROCESS OPTIONS
C
      GO TO( 1000,1200,1300,1400,1500,1600,1700,1800,1900,2000
     >      ,2100,2200,2300,2400,2500,2600,2700,2800,2900,3000
     >      ,3100,3200,3300,3400,3500,3600,3700,3800,3900,4000
     >      ,4100,4200,4300,4400,4500,4600,4700,4800,4900,5000
     >      ,5100,5200,5300,5400,5500,5600,5700,5800,5900,6000
     >      ,6100,6200,6300,6400,6500,6600,6700,6800,6900,7000
     >      ,7100,7200,7300,7400,7500,7600,7700,7800,7900,8000
     >      ,8100,8200),  NUMBER
 1000 CONTINUE
C                        OPTION NUMBER 1 REWIND
      IF (LNOTBK(1)) GOTO 1005
      CALL KEYDMP (JOPPRT,IRECNT,KEYWRD,ARRAY,KARD)
      CALL ERRGRO (.TRUE.,4)
      GOTO 10
 1005 CONTINUE
      I=IFIX(ARRAY(1))
      WRITE (JOPPRT,1010) KEYWRD,I
 1010 FORMAT (/1X,A8,'   DATA SET REFERENCE NUMBER=',I3)
      REWIND I
      GOTO 10
 1200 CONTINUE
C                        OPTION NUMBER 2 ADDSTAND
C
C     IF RESTARTING, THIS COMMAND IS INVALID.
C
      IF (LRESTR) THEN
         CALL KEYDMP (JOPPRT,IRECNT,KEYWRD,ARRAY,KARD)
         CALL PPERRP (.TRUE.,7)
         GOTO 10
      ENDIF
C
C     IF THIS IS THE FIRST STAND, INITIALIZE THE TEMPLATE.
C     (THIS CALL IS HERE, RATHER IN PPINIT, SO IT WILL NOT
C     INTERFER WITH PAUSE/RESTART.)
C
      IF (NOSTND.LE.0 .AND. .NOT.(LTMPAC.OR.LTMPAD)) CALL MSTRIT
C
      WRITE (JOPPRT,1220) KEYWRD
 1220 FORMAT (/1X,A8,'   ADD ONE STAND TO THE DATA BASE.')
      NAURPS=1
      IF (ARRAY(1).GT.1) THEN
         NAURPS=IFIX(ARRAY(1))
         WRITE (JOPPRT,1230) NAURPS
 1230    FORMAT (T13,'AUTOMATICALLY CREATE ',I3,' REPLICATIONS ',
     >          'OF THIS STAND AND GIVE EACH A UNIQUE RANDOM NUMBER ',
     >          'SEQUENCE.')
      ENDIF
      RETURN
 1300 CONTINUE
C                        OPTION NUMBER 3 
      GOTO 10
C
 1400 CONTINUE
C                        OPTION NUMBER 4 DEBUG
      IF (LNOTBK(1)) THEN
         JOPPRT=IFIX(ARRAY(1))
         JOSTND=JOPPRT
      ENDIF
      WRITE (JOPPRT,1410) KEYWRD
 1410 FORMAT (/1X,A8,'   DEBUG PARALLEL PROCESSING EXTENSION.')
      PDEBUG=.TRUE.
      GOTO 10
 1500 CONTINUE
C                        OPTION NUMBER 5 PROJECT
C
C     IF END-OF-RUN IS ON, THEN: THE COMMAND IS IN ERROR.
C
      IF (.NOT.LEORUN) GOTO 1502
      WRITE (JOPPRT,1501) KEYWRD
 1501 FORMAT (/1X,A8,'   END OF PROJECTION ALREADY OCCURRED.')
      CALL PPERRP (.TRUE.,8)
      GOTO 10
 1502 CONTINUE
C
C     IF HISTRY FILE IS OPEN FOR INPUT, REWRITE IT.
C
      IF (LHIST) CALL WRTHST (JOHIST,JOHIST)
C
C     IF RESTARTING, BRANCH TO SPECIAL WRITE
C
      IF (LRESTR) GOTO 1540
      IF (ISTND.GT.0) GOTO 1520
      WRITE (JOPPRT,1510) KEYWRD,ISTND
 1510 FORMAT (/1X,A8,'   STAND COUNTER=',I3)
      CALL PPERRP (.TRUE.,8)
      GOTO 10
 1520 CONTINUE
      WRITE (JOPPRT,1530) KEYWRD,ISTND
 1530 FORMAT (/1X,A8,'   THERE ARE',I5,' STANDS TO PROJECT.')
      LASTIN=.TRUE.
      RETURN
 1540 CONTINUE
      WRITE (JOPPRT,1550) KEYWRD
 1550 FORMAT (/1X,A8,'   CONTINUE PROJECTION.')
      RETURN
 1600 CONTINUE
C                        OPTION NUMBER 6 MSTRINT
      IF (ISTND.LE.0) GOTO 1605
      CALL PPERRP (.TRUE.,9)
      GOTO 10
 1605 CONTINUE
      I2=10
      IF (LNOTBK(2)) I2 = IFIX(ARRAY(2))
      IF (.NOT.LNOTBK(1)) GOTO 1620
      I = IABS(IFIX(ARRAY(1))) + 1
      IF (I.EQ.1) GOTO 1620
      IF (I.GE.MAXCY1) THEN
         CALL KEYDMP (JOPPRT,IRECNT,KEYWRD,ARRAY,KARD)
         CALL ERRGRO (.TRUE.,4)
         GOTO 10
      ENDIF
      LMINT=.TRUE.
      MIY(I) = I2
      I=I-1
      WRITE (JOPPRT,1615) KEYWRD,I,I2
 1615 FORMAT(/1X,A8,3X,'MASTER CYCLE=',I3,'; PERIOD LENGTH=',I3)
      GOTO 10
 1620 CONTINUE
      LMINT=.TRUE.
      DO 1630 I=2,MAXCY1
      MIY(I) = I2
 1630 CONTINUE
      WRITE (JOPPRT,1635) KEYWRD,I2
 1635 FORMAT(/1X,A8,3X,'ALL MASTER CYCLES;  PERIOD LENGTH=',I3)
      GOTO 10
 1700 CONTINUE
C                        OPTION NUMBER 7 MSTRCYCS
      IF (ISTND.LE.0) GOTO 1710
      CALL PPERRP (.TRUE.,9)
      GOTO 10
 1710 CONTINUE
      LMCYC=.TRUE.
      IF (ARRAY(1).GE.1. .AND. ARRAY(1).LE.MAXCYC) GOTO 1720
      CALL KEYDMP (JOPPRT,IRECNT,KEYWRD,ARRAY,KARD)
      CALL ERRGRO (.TRUE.,4)
      GOTO 10
 1720 CONTINUE
      MNCYC=IFIX(ARRAY(1))
      LMCYC=.TRUE.
      WRITE (JOPPRT,1730) KEYWRD,MNCYC
 1730 FORMAT (/1X,A8,'   NUMBER OF MASTER CYCLES=',I3)
      GOTO 10
 1800 CONTINUE
C                        OPTION NUMBER 8 STARTYR
      IF (ISTND.LE.0) GOTO 1805
      CALL PPERRP(.TRUE.,9)
      GOTO 10
 1805 CONTINUE
      MIY(1)=IFIX(ARRAY(1))
      LSTYR=.TRUE.
      WRITE (JOPPRT,1810) KEYWRD,MIY(1)
 1810 FORMAT (/1X,A8,'   MASTER STARTING YEAR=',I5)
      GOTO 10
 1900 CONTINUE
C                        OPTION NUMBER 9 NODEBUG
      PDEBUG=.FALSE.
      WRITE (JOPPRT,1910) KEYWRD
 1910 FORMAT (/1X,A)
      GOTO 10
 2000 CONTINUE
C                        OPTION NUMBER 10 ENDFILE
      I=IFIX(ARRAY(1))
      IF (I.GT.0) GOTO 2010
      CALL KEYDMP (JOPPRT,IRECNT,KEYWRD,ARRAY,KARD)
      CALL ERRGRO (.TRUE.,4)
      GOTO 10
 2010 CONTINUE
      WRITE (JOPPRT,1010) KEYWRD,I
      END FILE I
      GOTO 10
 2100 CONTINUE
C                        OPTION NUMBER 11 READHIST
      IF (LNOTBK(1)) JOHIST=IFIX(ARRAY(1))
      WRITE (JOPPRT,2110) KEYWRD,JOHIST
 2110 FORMAT (/1X,A8,'   READ SIMULATION HISTORY FILE USING DATA ',
     >        'SET REFERENCE NUMBER',I3)
      CALL HISTRD (JOHIST)
      GOTO 10
 2200 CONTINUE
C                        OPTION NUMBER 12 SELISN
      CSISN='-1'
      CLISN='-1'
      READ (IREAD,2210,END=80) RECORD
 2210 FORMAT (A80)
      IRECNT=IRECNT+1
      IF (RECORD( 1:20).NE. ' ') CSISN=RECORD( 1:20)
      IF (RECORD(21:31).NE. ' ') CLISN=RECORD(21:40)
      IF (CLISN.NE.'-1') GOTO 2250
      IF (CSISN.NE.'-1') GOTO 2230
      WRITE (JOPPRT,2220) KEYWRD
 2220 FORMAT (/1X,A8,'   NO SELECTION CRITERIA SPECIFIED.')
      GOTO 10
 2230 CONTINUE
      DO 2235 I=5,11
      IF (CSISN(I:I).EQ.' ') CSISN(I:I)='0'
 2235 CONTINUE
      WRITE (JOPPRT,2240) KEYWRD,CSISN
 2240 FORMAT (/1X,A8,'   STAND WITH INTERNAL STAND NUMBER= ',A11,
     >        ' WILL BE PROCESSED FOR OUTPUT.')
      GOTO 10
 2250 CONTINUE
      IF (CSISN.NE.'-1') GOTO 2270
      WRITE (JOPPRT,2260) KEYWRD
 2260 FORMAT (/1X,A8,'   SECOND ISN SPECIFIED WITHOUT THE FIRST.')
      CALL ERRGRO (.TRUE.,4)
      GOTO 10
 2270 CONTINUE
      DO 2275 I=5,11
      IF (CSISN(I:I).EQ.' ') CSISN(I:I)='0'
      IF (CLISN(I:I).EQ.' ') CLISN(I:I)='0'
 2275 CONTINUE
      WRITE (JOPPRT,2280) KEYWRD,CSISN,CLISN
 2280 FORMAT (/1X,A8,'   STANDS WITH INTERNAL STAND NUMBERS GREATER ',
     >        'OR EQUAL TO ',A11/T13,'AND LESS THAN OR EQUAL TO ',A11,
     >        ' WILL BE PROCESSED FOR OUTPUT.')
      GOTO 10
 2300 CONTINUE
C                        OPTION NUMBER 13 SELSTAND
      SID1=NOTSET
      SID2=NOTSET
      READ (IREAD,2310,END=80) SRD1,SRD2
 2310 FORMAT (A26,2X,A26)
      IRECNT=IRECNT+1
      IF (SRD1.NE.' ') SID1=SRD1
      IF (SRD2.NE.' ') SID2=SRD2
      IF (SID2.NE.NOTSET) GOTO 2350
      IF (SID1.NE.NOTSET) GOTO 2330
      WRITE (JOPPRT,2220) KEYWRD
      GOTO 10
 2330 CONTINUE
      WRITE (JOPPRT,2340) KEYWRD,SID1
 2340 FORMAT (/1X,A8,'   STAND WITH STAND IDENTIFICATION= ''',A8,
     >        ''' WILL BE PROCESSED FOR OUTPUT.')
      GOTO 10
 2350 CONTINUE
      IF (SID1.NE.NOTSET) GOTO 2370
      WRITE (JOPPRT,2360) KEYWRD
 2360 FORMAT (/1X,A8,'   SECOND STAND ID SPECIFIED WITHOUT THE FIRST.')
      CALL ERRGRO (.TRUE.,4)
      GOTO 10
 2370 CONTINUE
      WRITE (JOPPRT,2380) KEYWRD,SID1,SID2
 2380 FORMAT (/1X,A8,'   STANDS WITH STAND IDENTIFICATIONS ',
     >        'GREATER OR EQUAL TO ''',A8,''''/T13,
     >        'AND LESS THAN OR EQUAL TO ''',A8,
     >        ''' WILL BE PROCESSED FOR OUTPUT.')
      GOTO 10
 2400 CONTINUE
C                        OPTION NUMBER 14 SELMGMID
      MGM1=NSET
      MGM2=NSET
      READ (IREAD,2410,END=80) MRD1,MRD2
 2410 FORMAT (A4,T11,A4)
      IRECNT=IRECNT+1
      IF (MRD1.NE.' ') MGM1=MRD1
      IF (MRD2.NE.' ') MGM2=MRD2
      IF (MGM2.NE.NSET) GOTO 2450
      IF (MGM1.NE.NSET) GOTO 2430
      WRITE (JOPPRT,2220) KEYWRD
      GOTO 10
 2430 CONTINUE
      WRITE (JOPPRT,2440) KEYWRD,MGM1
 2440 FORMAT (/1X,A8,'   STANDS WITH MANAGEMENT IDENTIFICATION ''',A4,
     >        ''' WILL BE PROCESSED FOR OUTPUT.')
      GOTO 10
 2450 CONTINUE
      IF (MGM1.NE.NSET) GOTO 2470
      WRITE (JOPPRT,2460) KEYWRD
 2460 FORMAT (/1X,A8,'   SECOND MANAGEMENT ID SPECIFIED WITHOUT ',
     >         'THE FIRST.')
      CALL ERRGRO (.TRUE.,4)
      GOTO 10
 2470 CONTINUE
      WRITE (JOPPRT,2480) KEYWRD,MGM1,MGM2
 2480 FORMAT (/1X,A8,'   STANDS WITH MANAGEMENT IDENTIFICATIONS ',
     >        'GREATER OR EQUAL TO ''',A4,''''/T13,
     >        'AND LESS THAN OR EQUAL TO ''',A4,
     >        ''' WILL BE PROCESSED FOR OUTPUT.')
      GOTO 10
 2500 CONTINUE
C                        OPTION NUMBER 15 NEWEIGHT
      READ (IREAD,2510,END=80) CNEWID,XWT
 2510 FORMAT (A11,T21,F10.0)
      IRECNT=IRECNT+1
C
C     IF THE VALUE OF NOSTND IS 0, THEN: EXIT VIA "NO DATA ERROR"
C
      IF (NOSTND.LE.0) THEN
         WRITE (JOPPRT,2540) KEYWRD,CNEWID
         CALL PPERRP (.TRUE.,8)
      ELSE
C
C        ELSE: FIND THE VALUE OF CNEWID IN THE ARRAY CISNUM
C
         DO 2530 I=1,NOSTND
         IF (CNEWID.NE.CISNUM(I)) GOTO 2530
         J=I
         GOTO 2550
 2530    CONTINUE
C
C        IF DO-LOOP EXITS (THE ISN WANTED CAN'T BE FOUND);
C        THEN: WRITE ERROR MSG, AND GO READ ANOTHER KEYWORD.
C
         WRITE (JOPPRT,2540) KEYWRD,CNEWID
 2540    FORMAT (/1X,A8,'   ATTEMPT TO FIND ISN= ',A11,' FAILED.')
         CALL ERRGRO (.TRUE.,4)
         GOTO 10
 2550    CONTINUE
C
C        ISN WAS FOUND:  WRITE MSG AND ASSIGN THE NEW WEIGHT.
C
         WRITE (JOPPRT,2560) KEYWRD,CNEWID,BRCHWT(J),XWT
 2560    FORMAT (/1X,A8,'   INTERNAL STAND NUMBER= ',A11,
     >           '; OLD BRANCH WEIGHT=',
     >           F15.7,'; NEW WEIGHT=',F15.7)
         BRCHWT(J)=XWT
      ENDIF
      GOTO 10
 2600 CONTINUE
C                        OPTION NUMBER 16 COMPID
      READ (IREAD,'(A4)',END=80) CMPID
      IRECNT=IRECNT+1
      WRITE (JOPPRT,2620) KEYWRD,CMPID
 2620 FORMAT (/1X,A8,'   COMPOSITE YIELD TABLES ARE IDENTIFIED BY ',
     >        'THE FOLLOWING: ',A4)
      GOTO 10
 2700 CONTINUE
C                        OPTION NUMBER 17 COMPOSIT
      LCMPS=.TRUE.
      WRITE (JOPPRT,2710) KEYWRD
 2710 FORMAT (/1X,A8,'   COMPOSITE YIELD TABLES WILL BE GENERATED.')
      GOTO 10
 2800 CONTINUE
C                        OPTION NUMBER 18 NOCOMPOS
      LCMPS=.FALSE.
      WRITE (JOPPRT,2810) KEYWRD
 2810 FORMAT(/1X,A8,'   COMPOSITE YIELD TABLES WILL NOT BE GENERATED.')
      GOTO 10
 2900 CONTINUE
C                        OPTION NUMBER 19 SUMMARY
      LSUM=.TRUE.
      WRITE (JOPPRT,2910) KEYWRD
 2910 FORMAT (/1X,A8,'   SUMMARY DATA WILL BE PRINTED.')
      GOTO 10
 3000 CONTINUE
C                        OPTION NUMBER 20 NOSUM
      LSUM=.FALSE.
      WRITE (JOPPRT,3010) KEYWRD
 3010 FORMAT (/1X,A8,'   SUMMARY DATA WILL NOT BE PRINTED.')
      GOTO 10
 3100 CONTINUE
C                        OPTION NUMBER 21 COPYSUM
      JCPSUM=JOCOPY
      IF (LNOTBK(1)) JCPSUM=IFIX(ARRAY(1))
      WRITE (JOPPRT,3110) KEYWRD,JOCOPY
 3110 FORMAT (/1X,A8,'   SUMMARY YIELD TABLES WILL ',
     >        'BE COPIED, WITHOUT HEADINGS, ',
     >        'TO THE DATA SET REFERENCED BY ',I2)
      GOTO 10
 3200 CONTINUE
C                        OPTION NUMBER 22 NOCOPSUM
      JCPSUM=0
      WRITE (JOPPRT,3210) KEYWRD
 3210 FORMAT (/1X,A8,'   NO SUMMARY YIELD TABLES WILL',
     >       ' BE WRITTEN WITHOUT HEADINGS.')
      GOTO 10
 3300 CONTINUE
C                        OPTION NUMBER 23 ACTSUM
      LACTS=.TRUE.
      WRITE (JOPPRT,3310) KEYWRD
 3310 FORMAT (/1X,A8,'   ACTIVITY SUMMARIES WILL BE PRINTED.')
      GOTO 10
 3400 CONTINUE
C                        OPTION NUMBER 24 NOACTSUM
      LACTS=.FALSE.
      WRITE (JOPPRT,3410) KEYWRD
 3410 FORMAT (/1X,A8,'   ACTIVITY SUMMARIES WILL NOT BE PRINTED.')
      GOTO 10
 3500 CONTINUE
C                        OPTION NUMBER 25 STNDTABS
      WRITE (JOPPRT,3510) KEYWRD
 3510 FORMAT (/1X,A8,'   PRINT STAND TABLES.')
      IF (LSNDCP.OR.LSMPT) GOTO 3525
      WRITE (JOPPRT,3520) TABLE(28),TABLE(30)
 3520 FORMAT (T13,'''',A8,''' AND ''',A8,
     >        ''' ARE IN EFFECT.')
      CALL PPERRP (.TRUE.,8)
      GOTO 10
 3525 CONTINUE
      CALL HISTRD (JOHIST)
      IF (NMPRTD.GT.0) GOTO 3530
      CALL PPERRP (.TRUE.,8)
      GOTO 10
 3530 CONTINUE
      ISAV=ISTND
      CALL SNDTBS (KODE)
      ISTND=ISAV
      GOTO 10
 3600 CONTINUE
C                        OPTION NUMBER 26 YIELDS
      WRITE (JOPPRT,3610) KEYWRD
 3610 FORMAT (/1X,A8,'   PROCESS YIELD TABLES.')
      IF (LSUM .OR. LCMPS .OR. JCPCMP.GT.0
     >    .OR. JCPSUM.GT.0 .OR. LACTS) GOTO 3625
      WRITE (JOPPRT,3620) (TABLE(I),I=18,24,2),TABLE(61)
 3620 FORMAT (T13,4('''',A8,''','),' AND ''',A8,''' ARE IN EFFECT.')
      CALL PPERRP (.TRUE.,8)
      GOTO 10
 3625 CONTINUE
      IF (NOSTND.GT.0) GOTO 3630
      CALL HISTRD (JOHIST)
      IF (NOSTND.GT.0) GOTO 3630
      CALL PPERRP (.TRUE.,8)
      GOTO 10
 3630 CONTINUE
      CALL YIELDS
      GOTO 10
 3700 CONTINUE
C                        OPTION NUMBER 27 SNDCMP
      LSNDCP=.TRUE.
      WRITE (JOPPRT,3710) KEYWRD
 3710 FORMAT (/1X,A8,'   STAND COMPOSITON TABLES WILL BE PRINTED.')
      GOTO 10
 3800 CONTINUE
C                        OPTION NUMBER 28 NOSNDCMP
      LSNDCP=.FALSE.
      WRITE (JOPPRT,3810) KEYWRD
 3810 FORMAT (/1X,A8,'   STAND COMPOSTION TABLES WILL NOT BE PRINTED.')
      GOTO 10
 3900 CONTINUE
C                        OPTION NUMBER 29 SMPTRE
      LSMPT=.TRUE.
      WRITE (JOPPRT,3910) KEYWRD
 3910 FORMAT (/1X,A8,'   SAMPLE TREE AND STAND ATTRIBUTE TABLES WILL',
     >        ' BE PRINTED.')
      GOTO 10
 4000 CONTINUE
C                        OPTION NUMBER 30 NOSMPTRE
      LSMPT=.FALSE.
      WRITE (JOPPRT,4010) KEYWRD
 4010 FORMAT (/1X,A8,'   SAMPLE TREE AND STAND ARRTIBUTE TABLES WILL',
     >        ' NOT BE PRINTED.')
      GOTO 10
 4100 CONTINUE
C                        OPTION NUMBER 31 CVOUTPUT
      WRITE (JOPPRT,4110) KEYWRD
 4110 FORMAT (/1X,A8,'   PROCESS COVER MODEL OUTPUT.')
      CALL PPCVUT (LNOTBK,ARRAY)
      GOTO 10
 4200 CONTINUE
C                        OPTION NUMBER 32 MXCLRCUT
      IF (LNOTBK(1)) HVMXCC=ARRAY(1) * HAtoACR
      LHVMXC=.TRUE.
      WRITE (JOPPRT,4210) KEYWRD,HVMXCC * ACRtoHA
 4210 FORMAT (/1X,A8,'   MULTISTAND POLICY SELECTION WILL LIMIT ',
     >  'CONTIGUOUS CLEAR CUTS TO ',F6.2,' HA FOR SELECTED STANDS.'/
     >       T13,'STANDS WILL NOT BE SPLIT RESULTING IN ',
     >        'TARGETS NOT BEING "EXACTLY" REACHED.')
      LPRTCT=.FALSE.
      GOTO 10
 4300 CONTINUE
C                        OPTION NUMBER 33 PPSINIT
      LFLAG=.TRUE.
      LIN1ST=.TRUE.
      ICCODE=0
      WRITE (JOPPRT,4310) KEYWRD
 4310 FORMAT (/1X,A8,'   REINITIALIZE PARALLEL PROCESSING EXTENSION.'//
     >         1X,132('-'))
      GOTO 5
 4400 CONTINUE
C                        OPTION NUMBER 34 INTERACT
      I=IFIX(ARRAY(1))
 4410 CONTINUE
      CALL GPNEW (KODE,I,100,0,ARRAY)
      IF (KODE.GT.0) THEN
         CALL KEYDMP (JOPPRT,IRECNT,KEYWRD,ARRAY,KARD)
         WRITE (JOPPRT,4415)
 4415    FORMAT (/' ERROR WHILE PROCESSING INTERACT KEYWORD.')
         GOTO 10
      ENDIF
      WRITE (JOPPRT,4420) KEYWRD,I
 4420 FORMAT (/1X,A8,'   MASTER CYCLE SCHEDULED FOR ',I4,
     >        ' WILL BE PROCESSED USING INTERSTAND'/
     >        T13,'CONTROL FOR SUBSEQUENT STANDS.')
      GOTO 10
 4500 CONTINUE
C                        OPTION NUMBER 35 PAUSE
      IF (.NOT.LNOTBK(1)) THEN
         WRITE (JOPPRT,4510) KEYWRD
 4510    FORMAT (/1X,A8)
         CALL PPAUSE
         CALL GRSTOP
      ELSE
         I=IFIX(ARRAY(1))
         IF (I.LE.0 .OR. I.GE.MAXCYC) THEN
            CALL KEYDMP (JOPPRT,IRECNT,KEYWRD,ARRAY,KARD)
            CALL ERRGRO (.TRUE.,4)
         ELSE
            LPAUSE(I)=.TRUE.
            WRITE (JOPPRT,4580) KEYWRD,I
 4580       FORMAT (/1X,A8,'   A PROCESSING PAUSE WILL OCCUR AT',
     >              ' THE END OF MASTER CYCLE',I3)
         ENDIF
      ENDIF
      GOTO 10
 4600 CONTINUE
C                        OPTION NUMBER 36 RESTORE
      WRITE (JOPPRT,4620) KEYWRD
 4620 FORMAT (/1X,A8,'   RESTORE PARALLEL PROCESSING MEMORY.')
      CALL PPEGET
      GOTO 10
 4700 CONTINUE
C                        OPTION NUMBER 37 NBDENEFF
      LNEDNG=.TRUE.
      IF (LNOTBK(1)) HXSIZE=ARRAY(1) * HAtoACR
      WRITE (JOPPRT,4710) KEYWRD,HXSIZE * ACRtoHA
 4710 FORMAT (/1X,A8,'   THE GROWTH OF EACH STAND IS PARTIALLY ',
     >        'DEPENDENT ON THE STAND DENSITY OF IT''S NEIGHBORS.',
     >       /T13,'CALCULATIONS ASSUME ALL STANDS ARE HEXAGONS OF ',
     >        F6.1,' HECTARES.')
      IF (LPRTCT) THEN
         WRITE (JOPPRT,4720)
 4720    FORMAT (T13,'THE "EXACT" OPTION HAS BEEN TURNED OFF.')
         LPRTCT=.FALSE.
      ENDIF
      GOTO 10
 4800 CONTINUE
C                        OPTION NUMBER 38 MSPOLICY
C
      CALL HVIN (RECORD,KEYWRD,ARRAY,LNOTBK,IREAD,IRECNT)
      GOTO 10
 4900 CONTINUE
C                        OPTION NUMBER 39 EXACT
      LPRTCT=.TRUE.
      WRITE (JOPPRT,4910) KEYWRD
 4910 FORMAT (/1X,A8,'   STANDS WILL BE SPLIT AS NECESSARY TO INSURE',
     >        ' MULTISTAND POLICY TARGETS ARE "EXACTLY" REACHED.')
      IF (LHVMXC) THEN
         WRITE (JOPPRT,4920)
 4920    FORMAT (T13,'MAX CONTIGUOUS CLEAR CUT OPTION HAS BEEN TURNED',
     >           'OFF.')
         LHVMXC=.FALSE.
      ENDIF
      IF (LNEDNG) THEN
         WRITE (JOPPRT,4930)
 4930    FORMAT (T13,'NEIGHBORING DENSITY EFFECTS HAVE BEEN TURNED',
     >           'OFF.')
         LNEDNG=.FALSE.
      ENDIF
      GOTO 10
 5000 CONTINUE
C                        OPTION NUMBER 40 NOTEXACT
      LPRTCT=.FALSE.
      WRITE (JOPPRT,5010) KEYWRD
 5010 FORMAT (/1X,A8,'   STANDS WILL NOT BE SPLIT RESULTING IN ',
     >   'MULTISTAND POLICY TARGETS NOT BEING "EXACTLY" REACHED.')
      GOTO 10
 5100 CONTINUE
C                        OPTION NUMBER 41 DEFCCUT
      IF (LNOTBK(1)) DCTOP=ARRAY(1) * MtoFT
      IF (LNOTBK(2)) DCTPA=ARRAY(2) / HAtoACR
      WRITE (JOPPRT,5110) KEYWRD,DCTOP * FTtoM,DCTPA * HAtoACR
 5110 FORMAT (/1X,A8,'   A STAND IS CONSIDERED CLEAR CUT WHEN ',
     >        'THE TOP HEIGHT IS LESS THAN ',F6.1,' AND '/T13,
     >        'THE DENSTIY IS IS LESS THAN ',F6.1,' TREES PER HA')
      GOTO 10
 5200 CONTINUE
C                        OPTION NUMBER 42 WSBWALL
C
      LTMPAC=.TRUE.
      LTMPAD=.TRUE.
      WRITE (JOPPRT,5210) KEYWRD
 5210 FORMAT (/1X,A8,'   MULTI-STAND WESTERN SPRUCE BUDWORM OPTIONS',
     >        ' NOT AVAILABLE.')
      GOTO 10
 5300 CONTINUE
C                        OPTION NUMBER 43 TMPLINIT
      CALL MSTRIT
      WRITE (JOPPRT,5310) KEYWRD
 5310 FORMAT (/1X,A8,'   TEMPLATE RESET TO DEFAULT (NO OPTIONS), ',
     >         'OPTION TEMPLATING SUSPENDED.')
      GOTO 10
 5400 CONTINUE
C                        OPTION NUMBER 44  TEMPLATE
      CALL MSTRIT
      LTMPAC=.TRUE.
      LTMPAD=.TRUE.
      WRITE (JOPPRT,5410) KEYWRD
 5410 FORMAT (/1X,A8,'   OPTION TEMPLATING ACTIVATED.')
      GOTO 10
 5500 CONTINUE
C                        OPTION NUMBER 45 AREALOCS
      CALL SPLAIT
      INFILE=IREAD
      IF (LNOTBK(1)) INFILE=IFIX(ARRAY(1))
      DMULT=1.0
      IF (LNOTBK(2)) DMULT=ARRAY(2)
      AMULT=1.0
      IF (LNOTBK(3)) AMULT=ARRAY(3)
      WRITE (JOPPRT,5510) KEYWRD,INFILE,DMULT,AMULT
 5510 FORMAT (/1X,A8,'   READ THE SIZE AND LOCATION FILE FROM DATA SET',
     >        ' REFERENCE NUMBER = ',I4/T13,'LOCATIONS ARE SCALED ',
     >        'BY ',E13.6,'; AREA DATA BY ',E13.6)
      CALL SPLARD (DMULT,AMULT,INFILE,I,IRC)
      WRITE (JOPPRT,5520) I
 5520 FORMAT (T13,I5,' STAND LOCATION RECORDS WERE READ.')
      IF (INFILE.EQ.IREAD) THEN
         IRECNT=IRECNT+I
         IF (IRC.EQ.1) GOTO 80
      ENDIF
C
C     SIGNAL THAT THE AREAS ARRAY IS NOW NOT DEFINED
C
      LAREAS=.FALSE.
      GOTO 10
 5600 CONTINUE
C                        OPTION NUMBER 46 NEIGHBOR
C
C     READ THE NEIGHBOR DATA FILE
C
      CALL SPNBIT
      INFILE=IREAD
      IF (LNOTBK(1)) INFILE=IFIX(ARRAY(1))
      SNEI=1.0
      IF (LNOTBK(2)) SNEI=ARRAY(2)
      WRITE (JOPPRT,5610) KEYWRD, INFILE, SNEI
 5610 FORMAT (/1X,A8,'   READ THE NEIGHBOR DATA FILE FROM DATA SET ',
     >       'REFERENCE NUMBER = ',I4/T13,'NEIGHBOR DATA SCALED BY ',
     >       E13.6)
      CALL SPNBRD (SNEI,INFILE,I,IRC)
      WRITE (JOPPRT,5620) I
 5620 FORMAT (T13,I5,' RECORDS OF NEIGHBOR DATA READ.')
      IF (INFILE.EQ.IREAD) THEN
         IRECNT=IRECNT+I
         IF (IRC.EQ.1) GOTO 80
      ENDIF
      GOTO 10
 5700 CONTINUE
C                        OPTION NUMBER 47 ** free spot **
 5800 CONTINUE
C                        OPTION NUMBER 48  OPEN
      CALL KEYOPN (IREAD,RECORD,JOPPRT,IRECNT,KEYWRD,ARRAY,KARD)
      GOTO 10
 5900 CONTINUE
C                        OPTION NUMBER 49  CLOSE
      IF (ARRAY(1).LE.0.0) THEN
         CALL KEYDMP (JOPPRT,IRECNT,KEYWRD,ARRAY,KARD)
         CALL ERRGRO (.TRUE.,4)
      ELSE
         I=ARRAY(1)
         WRITE (JOPPRT,5920) KEYWRD,I
 5920    FORMAT (/1X,A8,'   DATA SET REFERENCE NUMBER = ',I5)
         CLOSE (UNIT=I)
      ENDIF
      GOTO 10
 6000 CONTINUE
C                        OPTION NUMBER 50  AUTOID
      NAUTID=1
      IF (ARRAY(1).LT.0) THEN
         READ (IREAD,'(A4)',END=80) CAUTID
         IRECNT=IRECNT+1
      ELSE
         WRITE (CAUTID,'(I4.4)') IFIX(ARRAY(1))
      ENDIF
      WRITE (JOPPRT,6010) KEYWRD,CAUTID
 6010 FORMAT (/1X,A8,'   MGMTID FIELD IS AUTOMATICALLY GENERATED ',
     >        'STARTING WITH "',A4,'"')
      GOTO 10
 6100 CONTINUE
C                        OPTION NUMBER 51  NOAUTOID
      NAUTID=0
      WRITE (JOPPRT,6110) KEYWRD
 6110 FORMAT (/1X,A8,'   MGMTID FIELD IS NOT AUTOMATICALLY GENERATED.')
      GOTO 10
 6200 CONTINUE
C                        OPTION NUMBER 52  SELSPLAB
C
C     READ A STAND POLICY LABEL FOR "SELECT" CRITERIA.
C
      CALL LBSTRD (IREAD,LNSSPL,SLSPLB,IRECNT,RECORD,KODE,
     >             WKSTR1,WKSTR2)
      IF (KODE.GT.1) GOTO 80
C
      IF (LNSSPL.GT.90) THEN
         WRITE (JOPPRT,6210) KEYWRD,SLSPLB(1:LNSSPL)
 6210    FORMAT (/1X,A8,'   IF ANY MEMBER OF: '/T13,A)
      ELSE
         WRITE (JOPPRT,6211) KEYWRD,SLSPLB(1:LNSSPL)
 6211    FORMAT (/1X,A8,'   IF ANY MEMBER OF: ',A)
      ENDIF
      WRITE (JOPPRT,6212)
 6212 FORMAT (T13,'IS ALSO IN A STAND LABEL, THE STAND IS SELECTED.')
      IF (KODE.EQ.1) THEN
         WRITE (JOPPRT,6220)
 6220    FORMAT (/' ********   WARNING: THIS LABEL SET IS SHORTER ',
     >           'THAN THE ONE YOU SPECIFIED.')
         CALL RCDSET (1,.TRUE.)
      ENDIF
      GOTO 10
 6300 CONTINUE
C                        OPTION NUMBER 53  SELMSPLB
C
C     READ A MULTISTAND POLICY LABEL FOR "SELECT" CRITERIA.
C
      IRPS=0
      CALL LBGET1 (IREAD,IRECNT,RECORD,IRPS,LNSHPL,WKSTR2,1,KODE)
      IF (KODE.EQ.2) GOTO 80
      SLHPLB=' '
      SLHPLB(1:LNSHPL)=WKSTR2(1:LNSHPL)
C
      IF (LNSHPL.LE.0) THEN
         WRITE (JOPPRT,'(/1X,A8,''   OPTION HAS BEEN TURNED OFF.'')')
     >          KEYWRD
      ELSE
         WRITE (JOPPRT,6310) KEYWRD,SLHPLB(1:LNSHPL)
 6310    FORMAT (/1X,A8,'   STANDS THAT APPLY TO MULTISTAND POLICY "',
     >           A,'" ARE SELECTED FOR OUTPUT.')
         IF (KODE.EQ.1) THEN
            WRITE (JOPPRT,6320)
 6320       FORMAT (/' ********   WARNING: THIS LABEL IS SHORTER ',
     >              'THAN THE ONE YOU SPECIFIED.')
            CALL RCDSET (1,.TRUE.)
         ENDIF
      ENDIF
      GOTO 10
 6400 CONTINUE
C                        OPTION NUMBER 54  BYSTAND
      NBYGRP=1
      WRITE (JOPPRT,6410) KEYWRD
 6410 FORMAT (/1X,A8,'   YIELDS PROCESSING IS GROUPED BY STAND.')
      GOTO 10
 6500 CONTINUE
C                        OPTION NUMBER 55  BYMGMID
      NBYGRP=2
      WRITE (JOPPRT,6510) KEYWRD
 6510 FORMAT (/1X,A8,'   YIELDS PROCESSING IS GROUPED BY ',
     >        'MANAGEMENT IDENTIFICATION CODES.')
      GOTO 10
 6600 CONTINUE
C                        OPTION NUMBER 56  BYSPLAB
      NBYGRP=3
      WRITE (JOPPRT,6610) KEYWRD
 6610 FORMAT (/1X,A8,'   YIELDS PROCESSING IS GROUPED BY ',
     >        'STAND MANAGEMENT POLICIES.')
      GOTO 10
 6700 CONTINUE
C                        OPTION NUMBER 57  BYMSPLB
      NBYGRP=4
      WRITE (JOPPRT,6710) KEYWRD
 6710 FORMAT (/1X,A8,'   YIELDS PROCESSING IS GROUPED BY ',
     >        'MULTISTAND POLICIES.')
      GOTO 10
 6800 CONTINUE
C                        OPTION NUMBER 58  NOSELECT
      CALL SELINT
      WRITE (JOPPRT,6810) KEYWRD
 6810 FORMAT (/1X,A8,'   "SELECT" OPTIONS HAVE BEEN TURNED OFF.')
      GOTO 10
 6900 CONTINUE
C                        OPTION NUMBER 59  NOBYGRP
      NBYGRP=0
      WRITE (JOPPRT,6910) KEYWRD
 6910 FORMAT (/1X,A8,'   "BYGROUP" OPTIONS HAVE BEEN TURNED OFF.')
      GOTO 10
 7000 CONTINUE
C                        OPTION NUMBER 60 COPYCOMP
      JCPCMP=JOCOPY
      IF (LNOTBK(1)) JCPCMP=IFIX(ARRAY(1))
      WRITE (JOPPRT,7010) KEYWRD,JCPCMP
 7010 FORMAT (/1X,A8,'   COMPOSITE YIELD TABLES WILL ',
     >        'BE COPIED, WITHOUT HEADINGS, ',
     >        'TO THE DATA SET REFERENCED BY ',I2)
      GOTO 10
 7100 CONTINUE
C                        OPTION NUMBER 61 NOCOPCMP
      JCPCMP=0
      WRITE (JOPPRT,7110) KEYWRD
 7110 FORMAT (/1X,A8,'   NO COMPOSITE YIELD TABLES WILL',
     >       ' BE WRITTEN WITHOUT HEADINGS.')
      GOTO 10
 7200 CONTINUE
C                        OPTION NUMBER 62  LABWTS
      LBWTS=.TRUE.
      IF (ARRAY(1).GT.0) JLBWTS=ARRAY(1)
      WRITE (JOPPRT,7210) KEYWRD,JLBWTS
 7210 FORMAT (/1X,A8,'   THE LABELS AND WEIGHTS FILE WILL',
     >       ' BE WRITTEN TO DATA SET REFERENCE NUMBER ',I3)
      GOTO 10
 7300 CONTINUE
C                        OPTION NUMBER 63  NOLABWTS
      LBWTS=.FALSE.
      WRITE (JOPPRT,7310) KEYWRD
 7310 FORMAT (/1X,A8,'   THE LABELS AND WEIGHTS FILE WILL NOT',
     >       ' BE WRITTEN.')
      GOTO 10
 7400 CONTINUE
C                        OPTION NUMBER 64  LABWTSID
      READ (IREAD,'(A4)',END=80) CLBWID
      IRECNT=IRECNT+1
      WRITE (JOPPRT,7420) KEYWRD,CLBWID
 7420 FORMAT (/1X,A8,'   THE LABELS AND WEIGHTS RECORDS ARE ',
     >        'IDENTIFIED BY THE FOLLOWING: ',A4)
      GOTO 10
 7500 CONTINUE
C                        OPTION NUMBER 65 RDACCESS
      CALL SPRDIT
      INFILE=IREAD
      IF (LNOTBK(1)) INFILE=IFIX(ARRAY(1))
      DMULT=1.0
      IF (LNOTBK(2)) DMULT=ARRAY(2)
      WRITE (JOPPRT,7510) KEYWRD,INFILE,DMULT
 7510 FORMAT (/1X,A8,'   READ THE ROAD DISTANCE FILE FROM DATA SET',
     >        ' REFERENCE NUMBER = ',I4/T13,'DISTANCES ARE SCALED ',
     >        'BY ',E13.6)
      CALL SPRDRD (DMULT,INFILE,I,IRC)
      WRITE (JOPPRT,7520) I
 7520 FORMAT (T13,I5,' STAND LOCATION RECORDS WERE READ.')
      IF (INFILE.EQ.IREAD) THEN
         IRECNT=IRECNT+I
         IF (IRC.EQ.1) GOTO 80
      ENDIF
      GOTO 10
 7600 CONTINUE
C                        OPTION NUMBER 66 CMUNIT
      LHVUNT=.TRUE.
      WRITE (JOPPRT,7610) KEYWRD
 7610 FORMAT (/1X,A8,'   STANDS WITH THE SAME MANAGEMENT ',
     >        'IDENTIFICATIONS ARE SELECTED AS A UNIT.')
      GOTO 10
 7700 CONTINUE
C                        OPTION NUMBER 67 NOCMUNIT
      LHVUNT=.FALSE.
      WRITE (JOPPRT,7710) KEYWRD
 7710 FORMAT (/1X,A8,'   STANDS ARE UNIQUE UNITS.')
      GOTO 10
 7800 CONTINUE
C                        OPTION NUMBER 68 LDMGMTID
C
C     REDEFINE THE STORED MGMTID'S FOR ALL OF THE STANDS.
C
      INFILE=IREAD
      IF (LNOTBK(1)) INFILE=IFIX(ARRAY(1))
      WRITE (JOPPRT,7810) KEYWRD,INFILE
 7810 FORMAT (/1X,A8,'   READ STAND AND NEW MGMTID PAIRS FROM DATA SET',
     >        ' REFERENCE NUMBER = ',I4)
      I2=0
      J=0
      ISAV=0
 7820 CONTINUE
      READ (INFILE,'(A)',END=7830) RECORD
      IF (INDEX(RECORD,'-999').GT.0) GOTO 7840
      ISAV=ISAV+1
      IF (J.EQ.0) THEN
         IF (NOSTND.GT.0) THEN
            J=1
            CALL C26SRT (NOSTND,STDIDS,ISDWK1,.TRUE.)
         ELSE
            J=-1
            GOTO 7820
         ENDIF
      ELSE
         IF (J.EQ.-1) GOTO 7820
      ENDIF
      CALL C26BSR (NOSTND,STDIDS,ISDWK1,RECORD(1:8),I)
      IF (I.GT.0) THEN
         I2=I2+1
         MGMIDS(I)=RECORD(10:13)
      ENDIF
      GOTO 7820
 7830 CONTINUE
      IF (INFILE.EQ.IREAD) THEN
         IRECNT=IRECNT+ISAV
         GOTO 80
      ENDIF
 7840 CONTINUE
      IF (INFILE.EQ.IREAD) IRECNT=IRECNT+ISAV+1
      WRITE (JOPPRT,7850) ISAV,I2
 7850 FORMAT (T13,'RECORDS READ=',I5,'; MGMTIDS CHANGED=',I4)
      IF (J.EQ.-1) CALL ERRGRO (.TRUE.,16)
      GOTO 10
 7900 CONTINUE
C                        OPTION NUMBER 69 COMMENT
      WRITE (JOPPRT,1910) KEYWRD
 7910 CONTINUE
      READ (IREAD,'(A)',END=80) RECORD
      IRECNT=IRECNT+1
      CFOUR=RECORD (1:4)
      DO 7915 I=1,4
      CALL UPCASE (CFOUR(I:I))
 7915 CONTINUE
      IF (CFOUR.EQ.'END ') THEN
         WRITE (JOPPRT,1910) CFOUR
         GOTO 10
      ELSE
         WRITE (JOPPRT,'(T13,A)') RECORD
         GOTO 7910
      ENDIF
 8000 CONTINUE
C                        OPTION NUMBER 70 ADDFILE
      IF (LNOTBK(1)) GOTO 8010
      CALL KEYDMP (JOPPRT,IRECNT,KEYWRD,ARRAY,KARD)
      CALL ERRGRO (.TRUE.,4)
      GOTO 10
 8010 CONTINUE
      JADFIL=IREAD
      IREAD=IFIX(ARRAY(1))
      WRITE (JOPPRT,1010) KEYWRD,IREAD
      GO TO 10
C                        OPTION NUMBER 71 -- BMPPIN
 8100 CONTINUE
      WRITE (JOPPRT,8110) KEYWRD
 8110 FORMAT (/1X,A8,'   MULTI-STAND WESTWIDE PINE BEETLE OPTIONS:')
      CALL BMPPIN (IREAD,IRECNT,JOPPRT)
      GOTO 10
C                        OPTION NUMBER 72 -- SYSTEM

 8200 CONTINUE

C     READ THE AND PROCESS THE SYSTEM COMMAND.

      READ(IREAD,'(A)',END=80) RECORD
      IRECNT=IRECNT+1
      WRITE (JOSTND,8210) KEYWRD,TRIM(RECORD)
 8210 FORMAT (/,1X,A8,'   SYSTEM CALL:',A)
      CALL SYSTEM(RECORD)
      GOTO 10

      END
