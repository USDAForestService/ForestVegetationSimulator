      SUBROUTINE REGENT(LESTB,ITRNIN)
      IMPLICIT NONE
C----------
C  $Id$
C----------
C  **REGENT** COMPUTES HEIGHT AND DIAMETER INCREMENTS FOR SMALL
C  TREES.  THE HEIGHT INCREMENT MODEL IS APPLIED TO TREES THAT ARE LESS
C  THAN 10 INCHES DBH (5 INCHES FOR LODGEPOLE PINE), AND THE DBH
C  INCREMENT MODEL IS APPLIED TO TREES THAT ARE LESS THAN 3 INCHES DBH.
C  FOR TREES THAT ARE GREATER THAN 2 INCHES DBH (1 INCH FOR LODGEPOLE
C  PINE), HEIGHT INCREMENT PREDICTIONS ARE AVERAGED WITH THE PREDICTIONS
C  FROM THE LARGE TREE MODEL. HEIGHT INCREMENT IS A FUNCTION OF HABITAT
C  TYPE, SLOPE, ASPECT, TREE HEIGHT, BASAL AREA IN LARGER TREES, AND
C  STAND CROWN COMPETITION FACTOR.  DIAMETER IS ASSIGNED FROM A HEIGHT
C  DIAMETER FUNCTION WITH ADJUSTMENTS FOR RELATIVE SIZE AND STAND
C  DENSITY.  INCREMENT IS COMPUTED BY SUBTRACTION. WHEN THE TREE ATTAINS
C  A DBH OF 3.0 INCHES IN A CYCLE, **DUBSCR** IS CALLED TO ASSIGN A CROWN
C  RATIO.   **REGENT** IS CALLED FROM **CRATET** DURING CALIBRATION AND
C  FROM **GRINCR** DURING CYCLING.  ENTRY **REGCON** IS CALLED FROM
C  **RCON** TO LOAD MODEL PARAMETERS THAT NEED ONLY BE RESOLVED ONCE.
C
C  **REGENT** IS ALSO USED TO PREDICT HEIGHT INCREMENT, DBH AND CROWN
C  RATIO FOR TREES THAT ARE CREATED BY THE REGENERATION ESTABLISHMENT
C  MODEL.  5-YEAR OLD TREES ARE GENERATED BY **ESTAB** AND **REGENT**
C  COMPUTES INCREMENTS FROM AGE 5 TO THE END OF THE CYCLE.

COMMONS

      INCLUDE 'PRGPRM.F77'
      INCLUDE 'CALCOM.F77'
      INCLUDE 'ARRAYS.F77'
      INCLUDE 'COEFFS.F77'
      INCLUDE 'CONTRL.F77'
      INCLUDE 'OUTCOM.F77'
      INCLUDE 'PLOT.F77'
      INCLUDE 'PDEN.F77'
      INCLUDE 'HTCAL.F77'
      INCLUDE 'MULTCM.F77'
      INCLUDE 'ESTCOR.F77'
      INCLUDE 'BCPLOT.F77'
      INCLUDE 'METRIC.F77'

COMMONS

C  DIMENSIONS FOR INTERNAL VARIABLES:
C
C   BANEXT -- ESTIMATED STAND BASAL AREA AT START OF EACH HEIGHT INCREMENT
C             PREDICTION SUBCYCLE.
C   CORTEM -- A TEMPORARY ARRAY FOR PRINTING CORRECTION TERMS.
C     KPER -- NUMBER OF YEARS (MAX OF 5) IN EACH HEIGHT INCREMENT PREDICTION
C             SUBCYCLE.
C   NUMCAL -- A TEMPORARY ARRAY FOR PRINTING NUMBER OF HEIGHT
C             INCREMENT OBSERVATIONS BY SPECIES.
C   RDNEXT -- RELATIVE DENSITY (CCF) AT START OF EACH HEIGHT INCREMENT
C             PREDICTION SUBCYCLE.
C    RHCON -- CONSTANT FOR THE HEIGHT INCREMENT MODEL.  INCLUDES EFFECTS
C             OF HABITAT TYPE, LOCATION, SLOPE, AND ASPECT AS LOADED IN
C             RCON.  HABITAT EFFECTS ARE BORROWED FROM LARGE TREE DBH
C             INCREMENT MODEL FOR ALL BUT TYPES 520, 530, AND 570.
C             ADJUSTMENTS ARE THE DIFFERENCE BETWEEN THE HABITAT
C             CONSTANT FOR A GIVEN TYPE AND THE CONSTANT FOR TYPE 520.
C    RHCCF -- THE COEFFICIENTS FOR EACH SPECIES FOR THE CROWN
C             COMPETITION FACTOR TERM IN THE HEIGHT INCREMENT MODEL.
C     RHLH -- THE COEFFICIENTS FOR EACH SPECIES FOR THE LN(HEIGHT)
C             TERM IN THE HEIGHT INCREMENT MODEL.
C    RHBAL -- THE COEFFICIENTS FOR EACH SPECIES FOR THE BAL TERM
C             IN THE HEIGHT INCREMENT MODEL.   COEFFICIENTS WERE
C             TAKEN FROM THE LARGE TREE HEIGHT INCREMENT MODEL AS OF
C             OCTOBER, 1983.
C     HHT1 -- SPECIES DEPENDENT CONSTANT IN THE HEIGHT-DBH MODEL USED
C             TO ASSIGN DIAMETERS TO SMALL TREES.
C     HHT2 -- SPECIES DEPENDENT EXPONENT IN THE HEIGHT-DBH MODEL USED
C             TO ASSIGN DIAMETERS TO SMALL TREES.
C     XMAX -- UPPER END OF THE RANGE OF DIAMETERS OVER WHICH HEIGHT
C             INCREMENT PREDICTIONS FROM SMALL AND LARGE TREE MODELS
C             ARE AVERAGED.
C     XMIN -- LOWER END OF THE RANGE OF DIAMETERS OVER WHICH HEIGHT
C             INCREMENT PREDICTIONS FROM THE SMALL AND LARGE TREE
C             ARE AVERAGED.
C
C     P_ZL  - LENGTH OF ZONE AND SITE SERIES STRINGS
C     P_ST  - NUMBER OF SITE SERIES STRINGS PER ZONE OR SIBEC GROUP
C     P_ZN  - NUMBER OF MODELS TO SEARCH THROUGH
C
      INTEGER   P_ZL,P_ST,P_ZN

      PARAMETER (P_ZL  = 15)
      PARAMETER (P_ST  = 30)
      PARAMETER (P_ZN =  27)

      EXTERNAL RANN
      CHARACTER SPEC*2
      CHARACTER*15 PAT1, PAT2
      LOGICAL  DEBUG,LESTB,LSKIPH
      INTEGER  I,KPER,IYR,ITOT,NPER,N,J1,IS,ITRNIN,K,NYR,IPCCF,KY
      INTEGER  ISPC,I1,I2,L,ICRK,NUMCAL,KOUT,ISPEC,KK,M,IREFI,J
      INTEGER  IPOS(MAXSP),INDX(MAXTRE),NTYR,IPAS,I3
      REAL     BRATIO,BACHLO
      REAL     DIAM,HHT1,HHT2,XMAXv3,XMINv3,REGYR
      REAL     BACON,RDNEXT,BANEXT,SCALE,D1,P,D2,B1,B2,C1,C2,CW
      REAL     BI,CI,PN,BAYR,CCFYR,CR,RAN,R,AH,DELMAX,BAJ,RDJ,XRHGRO
      REAL     XRDGRO,CON,BCCF,BBAL,XMX,XMN,AA,BB,H1,BAL,D,DADJ
      REAL     XPPMLT,H2,HTGRL,RELH,DGJ,H,HK,HTGR1,HTGR
      REAL     XWT,ZZRAN,DK,DGK,BARK,DDS,SCALE2,DDS2,DG2,DNEW,XCRCON
      REAL     CORTEM,SCALE3,CORNEW,SNP,SNX,SNY,EDH,TERM
      REAL     TEMBA,TEMCCF,TEMAHT
      REAL     SBSCC1(MAXTRE),SBSCC2(MAXTRE)
      REAL     SBSCCF,CCFS,CCFL
C     v2
      LOGICAL  LSPPOK
      REAL     XMAXv2(MAXSP),XMINv2(MAXSP)
      REAL     RHBAL,RHHAB,MAPHAB,RHGL,RHSC,RHLH,RHCCF
      REAL     RSAB0,RSAB1,RSAB2
      REAL     XCRIT,BLH,BHAB,BH,HSIGMA
      REAL     STHG_CON,B1X,B2X,B3X,B4X,B5X,B6X

      DIMENSION CORTEM(MAXSP),NUMCAL(MAXSP),XMAXv3(MAXSP),XMINv3(MAXSP),
     &  HHT1(MAXSP),HHT2(MAXSP),RHBAL(MAXSP),RHLH(MAXSP),RHCCF(MAXSP),
     &  RHHAB(6,MAXSP),MAPHAB(30,MAXSP),RHGL(3),RHSC(MAXSP),DIAM(MAXSP),
     &  BANEXT(10),RDNEXT(10),KPER(10)

C     STRUCTURE FOR THE GENERAL FITTED MODELS (TEMESGEN)

      TYPE ST_STR
        INTEGER              :: SPP(MAXSP) ! species list
        CHARACTER (LEN=P_ZL) :: ZONE(P_ST) ! BEC list
        REAL                 :: CON        ! constant
!
        REAL                 :: CASP       ! cos-aspect*slope
        REAL                 :: SASP       ! sin-aspect*slope
        REAL                 :: SLP        ! slope
        REAL                 :: HT         ! ht
        REAL                 :: LNHT       ! ln(ht)
        REAL                 :: CCF        ! ccf
        REAL                 :: BAL        ! bal/100
!
        REAL                 :: EXPMLT     ! Mutliplier  !SBS only
        REAL                 :: HCCFL      ! HT/CCF      !SBS only
        REAL                 :: CCFSL      ! CCFS/CCFL   !SBS only
!
        REAL                 :: SD         ! standard deviation
      END TYPE

C  DATA STATEMENTS.

      DATA DIAM/
     &   0.4, 3*0.3, 2*0.2, 0.4, 2*0.3, 0.5, 3*0.2, 0.3, 0.2 /
      DATA HHT1/
     &   0.0781, 0.0751, 0.0828, 0.1155, 0.0729, 0.0730,
     &   0.0988, 0.0658, 0.0658, 0.2160,
     &   0.0729, 0.0729, 0.0729, 0.0828, 0.0729 /
      DATA HHT2/
     &   1.1645, 1.1176, 1.1713, 1.0688, 1.1988, 1.2343,
     &   1.0807, 1.3817, 1.3817, 1.0049,
     &   1.1988, 1.1988, 1.1988, 1.1713, 1.1988 /
C     v2
      DATA RHBAL/
     &  -0.37199,-0.41532,-0.40043,-0.25355,-0.34693,-0.12013,
     &  -0.24172,-0.25300,-0.22957,-0.47299,-0.25349,-0.25349,
     &  -0.25349,-0.40043,-0.25349/
      DATA  RHLH/
     &  .4214,.2716,.3907,.3487,.3417,.2354,.5843,.2827,.3740,.4485,
     &  .2354,.2354,.2354,.3907,.2354/
      DATA  RHCCF/
     &  -.00591,-.00654,-.00591,-.00391,-.00391,-.00391,-.00654,
     &  -.00391,-.00391,-.00654,-.00391,-.00391,-.00391,-.00591,
     &  -.00391/
      DATA HSIGMA/0.59/
      DATA XMAXv2/6*10.0,5.0,8*10.0/
      DATA XMINv2/6*2.0,1.0,8*2.0/
      DATA XMAXv3/MAXSP*4.0/
      DATA XMINv3/MAXSP*2.0/

      DATA REGYR/5.0/, BACON/0.005454154/

C     DATA FOR THE GENERAL FITTED MODELS (TEMESGEN, ABDEL-AZIM)
C
C     NOTE ON THE ERROR TERMS: THE IDF MODELS USE SEE, WHICH IS EQUIVALENT
C     TO SD IN THIS CONTEXT (I THINK); FROM MY READING OF TEMESGEN'S REPORT
C     THE ERROR TERM IS APPLIED BEFORE EXPONENTIATION. ZUMRAWI'S SBS MODELS
C     ARE MSE AND ADDITIVE TO THE PREDICTED HEIGHT GROWTH.

      TYPE (ST_STR) ST_COEF(P_ZN)

      DATA ST_COEF(1) /
     >  ST_STR (
     >    (/3,14, 0,0,0,0,0,0,0,0,0,0,0,0,0/), ! FD, OC
     >    (/'IDFdk3/01      ', 'IDFdk3/03      ',
     >      'IDFdk3/05      ', 'IDFdk3/06      ',
     >      'IDFdk3/07      ', 'IDFdk3/08      ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -1.205542,             ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >      -0.450012,             ! ht
     >       2.047554,             ! ln(ht)
     >       0.0,                  ! ccf
     >      -3.532143,             ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.34                  ! SE=0.34, n=375
     >    ) /

      DATA ST_COEF(2) /
     >  ST_STR (
     >    (/7, 0,0,0,0,0,0,0,0,0,0,0,0,0,0/),  ! PL
     >    (/'IDFdk3/01      ', 'IDFdk3/05      ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >       0.229415,             ! constant
     >       0.0,                  ! cos-aspect*slope
     >      -0.083809,             ! sin-aspect*slope
     >       0.0,                  ! slope
     >       0.0,                  ! ht
     >       0.222915,             ! ln(ht)hail
     >       0.0,                  ! ccf
     >       0.0,                  ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.40                  ! SE=0.40, n=35
     >  ) /

      DATA ST_COEF(3) /
     >  ST_STR (
     >    (/8,0,0,0,0,0,0,0,0,0,0,0,0,0,0/),   ! SE
     >    (/'IDFdk3/01      ', 'IDFdk3/05      ',
     >      'IDFdk3/07      ', 'IDFdk3/08      ',
     >      'IDFdk3/09      ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.607370,             ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >       0.0,                  ! ht
     >       0.556296,             ! ln(ht)
     >       0.0,                  ! ccf
     >      -4.424631,             ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.36                  ! SE=.36, n=66
     >   ) /

      DATA ST_COEF(4) /
     >  ST_STR (
     >    (/12,13, 0,0,0,0,0,0,0,0,0,0,0,0,0/), ! AT,AC
     >    (/'IDFdk4/01      ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.144493,             ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >       0.0,                  ! ht
     >       0.603647,             ! ln(ht)
     >       0.0,                  ! ccf
     >     -16.012251,             ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.07                  ! SE=0.07, n=36
     >  ) /

      DATA ST_COEF(5) /
     >  ST_STR (
     >    (/3,14, 0,0,0,0,0,0,0,0,0,0,0,0,0/), ! FD,OC
     >    (/'IDFdk4/01      ', 'IDFdk4/02      ',
     >      'IDFdk4/05      ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.988801,             ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >       0.089809,             ! ht
     >       0.462662,             ! ln(ht)
     >      -0.008244,             ! ccf
     >       0.197880,             ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.06                  ! SE=0.06, n=686
     >  ) /

      DATA ST_COEF(6) /
     >  ST_STR (
     >    (/7, 0,0,0,0,0,0,0,0,0,0,0,0,0,0 /), ! PL
     >    (/'IDFdk4/01      ', 'IDFdk4/05      ',
     >      'SBS/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -1.242998,             ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >       0.108263,             ! ht
     >       0.354549,             ! ln(ht)
     >      -0.008124,             ! ccf
     >       0.0,                  ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.09                  ! SE=0.09, n=291
     >  ) /

      DATA ST_COEF(7) /
     >  ST_STR (
     >    (/3,14, 0,0,0,0,0,0,0,0,0,0,0,0,0 /), ! FD
     >    (/'IDFxm/01       ', 'IDFxm/04       ',
     >      'IDFxm/05       ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.814652,             ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >      -0.440036,             ! ht
     >       0.994877,             ! ln(ht)
     >      -0.004449,             ! ccf
     >       0.0,                  ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.01                  ! SE=0.01, n=203
     >  ) /

      DATA ST_COEF(8) /
     >  ST_STR (                   ! IDF - HARDWOODS (EP,AT,CT,OH)
     >    (/11,12,13,15,0,0,0,0,0,0,0,0,0,0,0/),
     >    (/'IDF/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.2041308,            ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >       0.0,                  ! ht
     >       0.520337043,          ! ln(ht)
     >      -0.0181535,            ! ccf
     >       7.53695999,           ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.48                  ! SE=0.48, n=112
     >  ) /

      DATA ST_COEF(9) /
     >  ST_STR (                   ! IDF - INTERMEDIATE (FD,PW,OC)
     >    (/ 3,1,14, 0,0,0,0,0,0,0,0,0,0,0,0/),
     >    (/'IDF/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.5738321,            ! constant
     >       0.004423421,          ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.5121443,            ! slope
     >      -0.416014668,          ! ht
     >       1.873005401,          ! ln(ht)
     >      -0.0058833,            ! ccf
     >      -1.1949869,            ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.47                  ! SE=0.47, n=1285
     >  ) /

      DATA ST_COEF(10) /
     >  ST_STR (                   ! IDF - INTOLERANT (LW,PL,PY)
     >    (/ 2,7,10, 0,0,0,0,0,0,0,0,0,0,0,0/),
     >    (/'IDF/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.0998574,            ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >      -0.277808048,          ! ht
     >       1.380037667,          ! ln(ht)
     >      -0.0049829,            ! ccf
     >       0.0,                  ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.52                  ! SE=0.52, n=480
     >  ) /

      DATA ST_COEF(11) /
     >  ST_STR (                   ! IDF - TOLERANT (BG,BL,HW,SE,CW)
     >    (/ 4,9,5,8,6, 0,0,0,0,0,0,0,0,0,0/),
     >    (/'IDF/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.9885648,            ! constant
     >      -0.011543749,          ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >      -1.1824214,            ! slope
     >      -0.562750419,          ! ht
     >       2.757015881,          ! ln(ht)
     >       0.0,                  ! ccf
     >      -2.7702553,            ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.49                  ! SE=0.49, n=271
     >  ) /

      DATA ST_COEF(12) /
     >  ST_STR (                   ! ICH - HARDWOODS (EP,AT,CT,OH)
     >    (/11,12,13,15, 0,0,0,0,0,0,0,0,0,0,0/),
     >    (/'ICH/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >       0.25147917,           ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >       0.0,                  ! ht
     >       0.254578123,          ! ln(ht)
     >      -0.0017203,            ! ccf
     >      -0.324012,             ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.71                  ! SE=0.71, n=139
     >  ) /

      DATA ST_COEF(13) /
     >  ST_STR (                   ! ICH - INTERMEDIATE (FD,PW,OC)
     >    (/ 3, 1,14, 0,0,0,0,0,0,0,0,0,0,0,0/),
     >    (/'ICH/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.6368518,            ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0191203,            ! slope
     >      -0.386893543,          ! ht
     >       2.247773778,          ! ln(ht)
     >      -0.0076175,            ! ccf
     >      -1.0014793,            ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.51                  ! SE=0.51, n=124
     >  ) /

      DATA ST_COEF(14) /
     >  ST_STR (           ! ICH - INTOLERANT (LW,PL,PY)
     >    (/ 2, 7,10, 0,0,0,0,0,0,0,0,0,0,0,0/),
     >    (/'ICH/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.3236232,            ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >      -0.40686086,           ! ht
     >       1.89791257,           ! ln(ht)
     >      -0.00182229,           ! ccf
     >       0.0,                  ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.51                  ! SE=0.51, n=142
     >  ) /

      DATA ST_COEF(15) /
     >  ST_STR (                   ! ICH - TOLERANT (BG,BL,HW,SE,CW)
     >    (/ 4,9,5,8,6, 0,0,0,0,0,0,0,0,0,0/),
     >    (/'ICH/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.0878875,            ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >       0.0,                  ! ht
     >       0.302126544,          ! ln(ht)
     >      -0.0081857,            ! ccf
     >       0.0,                  ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.43                  ! SE=0.43, n=342
     >  ) /

      DATA ST_COEF(16) /
     >  ST_STR (
     >    (/ 3,14, 0,0,0,0,0,0,0,0,0,0,0,0,0 /), ! SBS (FD,OC)
     >    (/'SBS/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >     172.1,                  ! constant
     >       0.0,                  ! cos-aspect*slope  !IDF,ICH only
     >       0.0,                  ! sin-aspect*slope  !IDF,ICH only
     >       0.0,                  ! slope             !IDF,ICH only
     >      -0.3657,               ! ht
     >       0.0,                  ! ln(ht)            !IDF,ICH only
     >       0.0,                  ! ccf               !IDF,ICH only
     >       0.0,                  ! bal/100           !IDF,ICH only
     >      11.8295,               ! ExpMlt
     >    -102.4,                  ! HT/CCFL
     >       0.5829,               ! CCFS/CCFL
     >       0.536                 ! SD (MSE=266.7cm**2, n=55)
     >  ) /

      DATA ST_COEF(17) /
     >  ST_STR (
     >    (/ 9, 0,0,0,0,0,0,0,0,0,0,0,0,0,0 /), ! SBS (BL)
     >    (/'SBS/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >     272.8,                  ! constant
     >       0.0,                  ! cos-aspect*slope  !IDF,ICH only
     >       0.0,                  ! sin-aspect*slope  !IDF,ICH only
     >       0.0,                  ! slope             !IDF,ICH only
     >      -0.8451,               ! ht
     >       0.0,                  ! ln(ht)            !IDF,ICH only
     >       0.0,                  ! ccf               !IDF,ICH only
     >       0.0,                  ! bal/100           !IDF,ICH only
     >      22.5817,               ! ExpMlt
     >     -88.5901,               ! HT/CCFL
     >      -0.7802,               ! CCFS/CCFL
     >       0.643                 ! SD (MSE=384.5cm**2, n=64)
     >  ) /

      DATA ST_COEF(18) /
     >  ST_STR (
     >    (/ 8, 0,0,0,0,0,0,0,0,0,0,0,0,0,0 /), ! SBS (SE)
     >    (/'SBS/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >     157.0,                  ! constant
     >       0.0,                  ! cos-aspect*slope  !IDF,ICH only
     >       0.0,                  ! sin-aspect*slope  !IDF,ICH only
     >       0.0,                  ! slope             !IDF,ICH only
     >      -0.1435,               ! ht
     >       0.0,                  ! ln(ht)            !IDF,ICH only
     >       0.0,                  ! ccf               !IDF,ICH only
     >       0.0,                  ! bal/100           !IDF,ICH only
     >       8.8508,               ! ExpMlt
     >     -68.3412,               ! HT/CCFL
     >      -4.0851,               ! CCFS/CCFL
     >       0.840                 ! SD (MSE=655.1cm**2, n=77)
     >  ) /

      DATA ST_COEF(19) /
     >  ST_STR (                   ! SBS - borrowed from IDF (PL Intol)
     >    (/ 7, 0,0,0,0,0,0,0,0,0,0,0,0,0,0/),
     >    (/'SBS/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.0998574,            ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >      -0.277808048,          ! ht
     >       1.380037667,          ! ln(ht)
     >      -0.0049829,            ! ccf
     >       0.0,                  ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.52                  ! SE=0.52, n=480
     >  ) /

      DATA ST_COEF(20) /
     >  ST_STR (                   ! SBS - HARDWOODS (AT,CT,OH) also IDF
     >    (/12,13,15, 0,0,0,0,0,0,0,0,0,0,0,0/),
     >    (/'SBS/all        ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >      -0.2041308,            ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >       0.0,                  ! ht
     >       0.520337043,          ! ln(ht)
     >      -0.0181535,            ! ccf
     >       7.53695999,           ! bal/100
     >       0.0,                  ! Multiplier !SBS only
     >       0.0,                  ! HT/CCF     !SBS only
     >       0.0,                  ! CCFS/CCFL  !SBS only
     >       0.48                  ! SE=0.48, n=112
     >  ) /

      DATA ST_COEF(21) /
     >  ST_STR (                   ! DR TODO: Model Set 1
     >    (/3, 0,0,0,0,0,0,0,0,0,0,0,0,0,0/), ! Fd - SBS
     >    (/'SBPSmc/01      ', 'SBPSmk/01      ',
     >      'SBPSdc/01      ', 'SBPSxc/01      ',
     >      'SBSdw1/01      ', 'SBSdw2/01      ',
     >      'SBSmc1/01      ', 'SBSmc2/01      ',
     >      'SBSmh/01       ', 'SBSmm/01       ',
     >      'SBSmw/01       ', 'SBSwk1/01      ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >       172.1,                 ! constant
     >       0.0,                   ! cos-aspect*slope
     >       0.0,                   ! sin-aspect*slope
     >       0.0,                   ! slope
     >      -0.3657,                ! ht
     >       0.0,                   ! ln(ht)
     >       0.0,                   ! ccf
     >       0.0,                   ! bal/100
     >       11.8295,               ! Multiplier !SBS only
     >       102.4,                 ! HT/CCF     !SBS only
     >       0.5829,                ! CCFS/CCFL  !SBS only
     >       16.33                  ! SE=16.33, n=55
     >  ) /

      DATA ST_COEF(22) /
     >  ST_STR (                    ! DR TODO: Model Set 2
     >    (/3, 0,0,0,0,0,0,0,0,0,0,0,0,0,0/), ! Fd - SBS
     >    (/'SBPSmc/01      ', 'SBPSmk/01      ',
     >      'SBPSdc/01      ', 'SBPSxc/01      ',
     >      'SBSdw1/01      ', 'SBSdw2/01      ',
     >      'SBSmc1/01      ', 'SBSmc2/01      ',
     >      'SBSmh/01       ', 'SBSmm/01       ',
     >      'SBSmw/01       ', 'SBSwk1/01      ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >       154.5,                 ! constant
     >       0.0,                   ! cos-aspect*slope
     >       0.0,                   ! sin-aspect*slope
     >       0.0,                   ! slope
     >       4.4054,                ! ht
     >       0.0,                   ! ln(ht)
     >       0.0,                   ! ccf
     >       0.0,                   ! bal/100
     >       3.4734,                ! Multiplier !SBS only
     >      -80.3308,               ! HT/CCF     !SBS only
     >       1.1924,                ! CCFS/CCFL  !SBS only
     >       38.93                  ! SE=38.93, n=168
     >  ) /

      DATA ST_COEF(23) /
     >  ST_STR (                    ! DR TODO: Model Set 1
     >    (/8, 0,0,0,0,0,0,0,0,0,0,0,0,0,0/), ! Sx - SBS
     >    (/'SBPSmc/01      ', 'SBPSmk/01      ',
     >      'SBPSdc/01      ', 'SBPSxc/01      ',
     >      'SBSdw1/01      ', 'SBSdw2/01      ',
     >      'SBSmc1/01      ', 'SBSmc2/01      ',
     >      'SBSmh/01       ', 'SBSmm/01       ',
     >      'SBSmw/01       ', 'SBSwk1/01      ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >       157.0,                 ! constant
     >       0.0,                   ! cos-aspect*slope
     >       0.0,                   ! sin-aspect*slope
     >       0.0,                   ! slope
     >      -0.1435,                ! ht
     >       0.0,                   ! ln(ht)
     >       0.0,                   ! ccf
     >       0.0,                   ! bal/100
     >       8.8508,                ! Multiplier !SBS only
     >       68.3412,               ! HT/CCF     !SBS only
     >      -4.0851,                ! CCFS/CCFL  !SBS only
     >       25.59                  ! SE=25.59, n=77
     >  ) /

      DATA ST_COEF(24) /
     >  ST_STR (                    ! DR TODO: Model Set 2
     >    (/8, 0,0,0,0,0,0,0,0,0,0,0,0,0,0/), ! Sx - SBS
     >    (/'SBPSmc/01      ', 'SBPSmk/01      ',
     >      'SBPSdc/01      ', 'SBPSxc/01      ',
     >      'SBSdw1/01      ', 'SBSdw2/01      ',
     >      'SBSmc1/01      ', 'SBSmc2/01      ',
     >      'SBSmh/01       ', 'SBSmm/01       ',
     >      'SBSmw/01       ', 'SBSwk1/01      ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >       142.3,                 ! constant
     >       0.0,                   ! cos-aspect*slope
     >       0.0,                   ! sin-aspect*slope
     >       0.0,                   ! slope
     >      -2.9969,                ! ht
     >       0.0,                   ! ln(ht)
     >       0.0,                   ! ccf
     >       0.0,                   ! bal/100
     >       6.3043,                ! Multiplier !SBS only
     >      -112.6,                 ! HT/CCF     !SBS only
     >      -9.4900,                ! CCFS/CCFL  !SBS only
     >       36.81                  ! SE=36.81, n=168
     >  ) /

      DATA ST_COEF(25) /
     >  ST_STR (
     >    (/7, 0,0,0,0,0,0,0,0,0,0,0,0,0,0/), ! Pl - SBS & SBPS
     >    (/'SBPSmc/01      ', 'SBPSmk/01      ',
     >      'SBPSdc/01      ', 'SBPSxc/01      ',
     >      'SBSdw1/01      ', 'SBSdw2/01      ',
     >      'SBSmc1/01      ', 'SBSmc2/01      ',
     >      'SBSmh/01       ', 'SBSmm/01       ',
     >      'SBSmw/01       ', 'SBSwk1/01      ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >       301.2,                 ! constant
     >       0.0,                   ! cos-aspect*slope
     >       0.0,                   ! sin-aspect*slope
     >       0.0,                   ! slope
     >       14.4134,               ! ht
     >       0.0,                   ! ln(ht)
     >       0.0,                   ! ccf
     >       0.0,                   ! bal/100
     >       1.00,                  ! Multiplier !SBS only
     >       4.3821,                ! HT/CCF     !SBS only
     >       0.0,                   ! CCFS/CCFL  !SBS only
     >       69.87                  ! SE=69.87, n=69
     >  ) /

      DATA ST_COEF(26) /
     >  ST_STR (
     >    (/9, 0,0,0,0,0,0,0,0,0,0,0,0,0,0/), ! Bl - SBS
     >    (/'SBPSmc/01      ', 'SBPSmk/01      ',
     >      'SBPSdc/01      ', 'SBPSxc/01      ',
     >      'SBSdw1/01      ', 'SBSdw2/01      ',
     >      'SBSmc1/01      ', 'SBSmc2/01      ',
     >      'SBSmh/01       ', 'SBSmm/01       ',
     >      'SBSmw/01       ', 'SBSwk1/01      ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >       76.4,                 ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >       3.6502,               ! ht
     >       0.0,                  ! ln(ht)
     >       0.0,                  ! ccf
     >       0.0,                  ! bal/100
     >       6.1621,               ! Multiplier !SBS only
     >      -238.8,                ! HT/CCF     !SBS only
     >      -2.9184,               ! CCFS/CCFL  !SBS only
     >       29.41                 ! SE=29.41, n=89
     >  ) /

      DATA ST_COEF(27) /
     >  ST_STR (
     >    (/12, 0,0,0,0,0,0,0,0,0,0,0,0,0,0/),       ! SBS - At
     >    (/'SBPSmc/01      ', 'SBPSmk/01      ',
     >      'SBPSdc/01      ', 'SBPSxc/01      ',
     >      'SBSdw1/01      ', 'SBSdw2/01      ',
     >      'SBSmc1/01      ', 'SBSmc2/01      ',
     >      'SBSmh/01       ', 'SBSmm/01       ',
     >      'SBSmw/01       ',  'SBSwk1/01      ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               ',
     >      '               ', '               '/),
     >       178.2,                ! constant
     >       0.0,                  ! cos-aspect*slope
     >       0.0,                  ! sin-aspect*slope
     >       0.0,                  ! slope
     >       5.0664,               ! ht
     >       0.0,                  ! ln(ht)
     >       0.0,                  ! ccf
     >       0.0,                  ! bal/100
     >       1.00,                 ! Multiplier !SBS only
     >       273.3,                ! HT/CCF     !SBS only
     >      -2034.2,               ! CCFS/CCFL  !SBS only
     >       78.89                 ! SE=78.89, n=21
     >  ) /

C  CHECK FOR DEBUG.

      CALL DBCHK (DEBUG,'REGENT',6,ICYC)

C  THE SMALL TREE HEIGHT INCREMENT MODEL IS BASED ON 5-YEAR INCREMENT DATA.
C  TO AVOID BIAS, PREDICTIONS ARE MADE FOR SUBCYCLES THAT ARE LESS THAN OR
C  EQUAL TO 5 YEARS IN LENGTH.  THE FOLLOWING CODE DETERMINES THE NUMBER
C  AND LENGTH OF SUBCYCLES FROM CYCLE LENGTH.

      LSKIPH=.FALSE.
      DO 1 I=1,10
        KPER(I)=0
        BANEXT(I)=0.0
        RDNEXT(I)=0.0
    1 CONTINUE
      NTYR=FINT
      IF(LSTART) NTYR=IFINTH
      IF(LESTB) NTYR=NTYR-5
      IF(LESTB.AND.NTYR.LE.0) LSKIPH=.TRUE.
      IYR=REGYR
      NPER=NTYR/IYR
      IF(MOD(NTYR,IYR).NE.0) NPER=NPER+1
      ITOT=NTYR
      N=NPER
      DO 2 I=1,NPER
        IF(N.EQ.1) GO TO 3
        KPER(I)=ITOT/N
        ITOT=ITOT-KPER(I)
        N=N-1
    2 CONTINUE
    3 CONTINUE
      IF(NPER.GT.0)KPER(NPER)=ITOT

C  LOAD TEMPORARY VARIABLES WITH AFTER THINNING BA, CCF, AND TOPHT.

      TEMBA  = ATBA
      IF(ATBA .LE. 0.)TEMBA=BA
      TEMCCF = ATCCF
      IF(ATCCF .LE. 0.)TEMCCF=RELDEN
      TEMAHT = ATAVH

C  IF THIS IS THE FIRST ENTRY, BRANCH TO THE CALIBRATION SECTION.

      IF(LSTART) GOTO 40

C  LOAD MULTIPLIERS.

      CALL MULTS (3,IY(ICYC),XRHMLT)
      CALL MULTS(6,IY(ICYC),XRDMLT)
      SCALE=YR/FINT
      IF(DEBUG) WRITE(JOSTND,8996) LESTB,LSKIPH,ITRN,ITRNIN,SCALE
 8996 FORMAT(' IN REGENT, LESTB = ',L1,', LSKIPH = ',L1,
     &  ', ITRN = ',I4,', ITRNIN = ',I4,', SCALE = ',F6.3)
      IF (ITRN.LE.0) RETURN

C  ESTIMATE THE CONTRIBUTION TO STAND BASAL AREA AND CCF FOR LARGE TREES AT
C  THE START OF EACH PROJECTION SUBCYCLE.  IF CALLED FROM **ESTAB**, BRANCH
C  TO STATEMENT 9 AND INTERPOLATE FROM OLD AND NEW DENSITY VALUES.
C  OTHERWISE, 10-YEAR CHANGE IS COMPUTED FROM PREDICTED DBH INCREMENT AND
C  ANNUALIZED.  THEN, ANNUAL RATE IS MULTIPLIED BY SUBCYCLE LENGTH TO
C  DETERMINE CONTRIBUTION FOR EACH SUBCYCLE.  A ONE PERCENT ANNUAL RATE
C  OF MORTALITY IS ASSUMED.  CONTRIBUTIONS OF SMALL TREES ARE COMPUTED AS
C  INCREMENT PREDICTIONS ARE MADE FOR PRECEDING SUBCYCLE.

      IF(LESTB) GO TO 8

      DO 4 J=1,NPER
        BANEXT(J)=BA
        RDNEXT(J)=RELDEN
    4 CONTINUE

      IF(NPER.EQ.1) GO TO 11
      DO 6 I=1,ITRN
        D1=DBH(I)
        IF(D1.LT.3.0) GO TO 6
        IS=ISP(I)
        P=PROB(I)
        D2=D1+DG(I)/BRATIO(IS,D1,HT(I))
        B1=BACON*D1*D1
        B2=BACON*D2*D2
        CALL CCFCAL(IS,D1,HT(I),ICR(I),P,.FALSE.,C1,CW,1)
        CALL CCFCAL(IS,D2,HT(I),ICR(I),P,.FALSE.,C2,CW,1)
        BI=(B2-B1)/10.0
        CI=(C2-C1)/10.0
        K=0
        DO 5 J=2,NPER
          K=K+KPER(J-1)
          PN=P*0.985**K
          RDNEXT(J)=RDNEXT(J)+K*CI/P*PN
          BANEXT(J)=BANEXT(J)+K*BI*PN
    5   CONTINUE
    6 CONTINUE
      GO TO 11

C  IF CALLED FROM **ESTAB**, DIAMETERS AND DENSITY STATISTICS HAVE
C  BEEN UPDATED AND DENSITIES CORRESPONDING TO BEGINNINGS OF SUBCYCLES
C  CAN BE INTERPOLATED FROM DIFFERENCE BETWEEN OLD AND NEW STATS.  THE
C  TREES ARE SENT TO REGENT WITH A HEIGHT CORRESPONDING TO 5 YEARS AFTER
C  THE START OF THE CYCLE.

    8 CONTINUE
      BAYR=0.0
      CCFYR=0.0
      IF(LSKIPH) GO TO 9
      BAYR=(BA-TEMBA)/ITOT
      CCFYR=(RELDEN-TEMCCF)/ITOT
    9 CONTINUE
      NYR=5
      DO 10 J=1,NPER
        RDNEXT(J)=TEMCCF+NYR*CCFYR
        BANEXT(J)=TEMBA+NYR*BAYR
        NYR=NYR+KPER(J)
   10 CONTINUE
   11 CONTINUE

C  STORE INITIAL HEIGHTS IN WK3; DUB CROWN RATIO FOR NEWLY ESTABLISHED
C  SEEDLINGS.

      DO 13 I=1,ITRN
      IF(LESTB.AND.I.GE.ITRNIN) THEN
        IPCCF=ITRE(I)
        CR = 0.89722 - 0.0000461*PCCF(IPCCF)
   12   CONTINUE
        RAN = BACHLO(0.0,1.0,RANN)
        IF(RAN .LT. -1.0 .OR. RAN .GT. 1.0) GO TO 12
        CR = CR + 0.07985 * RAN
        IF(CR .GT. .90) CR = .90
        IF(CR .LT. .20) CR = .20
        ICR(I)=(CR*100.0)+0.5
      ENDIF
      WK3(I)=HT(I)
   13 CONTINUE

C  DELMAX IS USED TO COMPUTE A DENSITY-DEPENDENT ADJUSTMENT FOR
C  THE HEIGHT-DIAMETER FUNCTION.  DELMAX IS BASED ON AVERAGE HEIGHT AND
C  CCF AT THE BEGINNING OF THE CYCLE AND DOES NOT VARY BY SUBCYCLE.

      IF(LESTB) THEN
        R=TEMCCF
        AH=TEMAHT
      ELSE
        R=RELDEN
        AH=AVH
      ENDIF
      DELMAX=(AH/36.0)*(0.01232*R-1.75)
      IF(DELMAX.GT.0.0) DELMAX=0.0
      KY=0
      IF(DEBUG) WRITE(JOSTND,8995) R,AH,DELMAX
 8995 FORMAT(' R = ',F10.4,', AH = ',F10.4,', DELMAX = ',F10.4)

C     SBS MODELS USE CCF IN LARGER AND SMALLER TREES. CALCULATE CUMULATIVE CCF;
C     SBSCC1 CONTAINS CCF FOR EACH RECORD, SBSCC2 CONTAINS CCF IN TREES UP TO
C     BUT NOT INCLUDING THE CURRENT RECORD. SORTING IS BY DBH.

      IF (.NOT. LV2ATV .AND. INDEX(BEC%Zone,'SBS') .GT. 0) THEN
        SBSCCF = 0.0
        DO I = 1,ITRN
          CALL CCFCAL(ISP(I),DBH(I),HT(I),ICR(I),PROB(I),
     >      .FALSE.,C1,CW,1)
          SBSCC1(I) = C1
          SBSCCF = SBSCCF + C1
        ENDDO
        CALL RDPSRT(ITRN,DBH,INDX,.TRUE.)
        SBSCC2(INDX(ITRN)) = SBSCC1(INDX(ITRN))
        DO I = ITRN-1,1,-1
          SBSCC2(INDX(I)) = SBSCC1(INDX(I)) + SBSCC2(INDX(I+1))
        ENDDO
        DO I = 1,ITRN-1
          SBSCC2(INDX(I)) = SBSCC2(INDX(I+1))
        ENDDO
        SBSCC2(INDX(ITRN)) = 0.0
      ENDIF

C  ENTER LOOP FOR NEXT SUBCYCLE.

      DO 17 J=1,NPER
        KY=KY+KPER(J)
        BAJ=BANEXT(J)
        RDJ=RDNEXT(J)

C  PROCESS ALL TREES WITHIN THIS SUBCYCLE IN SPECIES ORDER.  LOAD
C  SPECIES DEPENDENT CONSTANTS.

        DO 16 ISPC=1,MAXSP
          I1=ISCT(ISPC,1)
          IF(I1.EQ.0) GO TO 16
          IF(.NOT. LV2ATV .AND. .NOT. STG%FIT(ISPC)) GOTO 16

          I2=ISCT(ISPC,2)
          XRHGRO=XRHMLT(ISPC)
          XRDGRO=XRDMLT(ISPC)
          AA=HHT1(ISPC)
          BB=HHT2(ISPC)

          IF (LV2ATV) THEN
            CON=RHCON(ISPC)+HCOR(ISPC)
            BH=RHLH(ISPC)
            BCCF=RHCCF(ISPC)
            BBAL=RHBAL(ISPC)
            XMX=XMAXV2(ISPC)
            XMN=XMINV2(ISPC)
          ELSE
            XMX=XMAXV3(ISPC)
            XMN=XMINV3(ISPC)
          ENDIF

C  PROCESS NEXT TREE RECORD.  STORE INTERMEDIATE HEIGHTS IN WK3.

          DO 15 I3=I1,I2

C  BYPASS INCREMENT CALCULATION IF DBH IS GREATER THAN XMX OR IF
C  CALL IS FROM **ESTAB** AND TREE SUBSCRIPT IS LESS THAN ITRNIN.

            I=IND1(I3)

            D=DBH(I)
            IF(D.GE.XMX) GO TO 15
            IF(LESTB .AND. I.LT.ITRNIN) GO TO 15
            P=PROB(I)
            H1=WK3(I)

C           CCFL is constrained to be at least 36, the minimum
C           from the modelling dataset

            IF (LV2ATV) THEN
              CALL CCFCAL(ISPC,D,H1,ICR(I),P,.FALSE.,C1,CW,1)
            ELSE
              IF(INDEX(BEC%Zone,'SBS') .GT. 0) THEN
                CCFS = SBSCC2(I) * RDJ/SBSCCF
                CCFL = (SBSCCF - SBSCC1(I)) * RDJ/SBSCCF
              ENDIF
            ENDIF

            BAL = (1.0 - (PCT(I)/100.)) * BAJ
            B1=BACON*D*D

C  COMPUTE ADJUSTMENT FOR BIAS, DENSITY, AND RELATIVE SIZE.

            IF (ABS(AH-4.5).LT. 0.01 ) THEN
              RELH=0.0
            ELSE
              RELH=(H1-4.5)/(AH-4.5)
            ENDIF
            IF(RELH.GT.1.0) RELH=1.0
            IF(RELH.LT.0.0) RELH=0.0

            DADJ=DELMAX*RELH*RELH - 2.0*DELMAX*RELH + 0.65

C           COMPUTE HEIGHT INCREMENT.  STORE UPDATED HEIGHT IN WK3.
C           NOTE: SEISTHG/LSPPOK (IDF ONLY) IS ALL DEPRECATED IN
C           FAVOUR OF V3 SMALL TREE HEIGHT GROWTH MODEL. CODE LEFT HERE
C           FOR "HISTORICAL PURPOSES" ONLY.

            IF (LV2ATV) THEN
              CALL SEISTHG (ISPC,STHG_CON,B1X,B2X,B3X,B4X,B5X,B6X,
     >          LSPPOK)
              IF (LSPPOK) THEN
                STHG_CON = -0.00101 * ELEV * 100. * FTtoM ! ELEV(m)
                B1X =  0.518176 * ALOG(H1 * FTtoM)        ! LN(HT)m)
                B3X = -0.003254 * RDJ                     ! CCF
                RAN = BACHLO(0.0,0.62921,RANN)            ! Error
                HTGRL = STHG_CON + B1X + B3X + RAN
              ELSE
                HTGRL=(CON+BH*ALOG(H1)+BCCF*RDJ+BBAL*BAL)
              ENDIF
            ELSE
              IF (INDEX(BEC%Zone,'SBS') .GT. 0) THEN
                HTGRL =
     >            (STG%CON(ISPC) +
     >            (STG%HT(ISPC) * (H1 * FTtoM))) /
     >            (1.0 + (STG%EXPMLT(ISPC) *
     >            EXP((STG%HCCFL(ISPC) * H1 * FTtoM / MAX(CCFL,36.)) +
     >            (STG%CCFSL(ISPC) * CCFS/MAX(CCFL,36.)))))
                HTGRL = HTGRL * CMtoFT * EXP(RHCON(ISPC))
              ELSE
                HTGRL = STG%CON(ISPC) + RHCON(ISPC) +
     >            (STG%LNHT(ISPC) * ALOG(MAX(2.0,H1 * FTtoM))) +
     >            (STG%HT(ISPC)   * MAX(2.0,H1 * FTtoM)) +
     >            (STG%BAL(ISPC)  * BAL * FT2pACRtoM2pHA * 0.01) +
     >            (STG%CCF(ISPC)  * RDJ)
                HTGRL = EXP(MAX(-88.0,HTGRL)) * MtoFT
              ENDIF
            ENDIF

C           GET A MULTIPLIER FOR THIS TREE FROM PPREGT TO ACCOUNT FOR
C           THE DENSITY EFFECTS OF NEIGHBORING TREES.

            XPPMLT=1.
            CALL PPREGT (XPPMLT,RDJ,BAL,BCCF,BBAL)

            IF (LV2ATV) THEN
              IF (LSPPOK) THEN
                H2=H1+(EXP(HTGRL)*(FLOAT(KPER(J))/REGYR)*XRHGRO*XPPMLT
     >          * MtoFT)
              ELSE
                H2=H1+EXP(HTGRL)*(FLOAT(KPER(J))/REGYR)*XRHGRO*XPPMLT
              ENDIF
            ELSE
              H2=H1+HTGRL*(FLOAT(KPER(J))/REGYR)*XRHGRO*XPPMLT
            ENDIF
            WK3(I)=H2

C  UPDATE DENSITY FOR NEXT SUBCYCLE.  IF ONLY ONE SUBCYCLE OR
C  IF INITIAL DBH IS GREATER THAN 3 INCHES, BYPASS DENSITY UPDATE.
C  DIAMETER IS ADJUSTED FOR DENSITY AND USER-SUPPLIED MULTIPLIER.
C  INCREMENT IS DETERMINED FROM THE DIFFERENCE BETWEEN COMPUTED
C  DIAMETERS AND IS BOUNDED TO BE GREATER THAN OR EQUAL TO ZERO.

            D2=D
            IF(J.EQ.NPER.OR.D.GE.3.0) GO TO 14
            IF(H2.LE.4.5) GO TO 14
            D1=DIAM(ISPC)+DADJ
            IF(H1.GT.4.5) D1=AA*(H1-4.5)**BB + DADJ
            D2=AA*(H2-4.5)**BB + DADJ
            DGJ=(D2-D1)*XRDGRO
            IF (DEBUG)
     &        WRITE(JOSTND,*)' I,ISPC,AA,BB,DADJ,H1,D1,H2,D2,DGJ=',
     &        I,ISPC,AA,BB,DADJ,H1,D1,H2,D2,DGJ
            IF(DGJ.LT.0.0) DGJ=0.0
            D2=D+DGJ

C  COMPUTE ADJUSTMENT TO STAND BASAL AREA AND CCF FOR NEXT SUBCYCLE.
C  ASSUME A 1.5 PERCENT ANNUAL MORTALITY RATE.

            CALL CCFCAL(ISPC,D1,H1,ICR(I),P,.FALSE.,C1,CW,1)
            CALL CCFCAL(ISPC,D2,H2,ICR(I),P,.FALSE.,C2,CW,1)
            RDNEXT(J+1)=RDNEXT(J+1)+KY*(C2-C1)/10.*0.985**KY
            BANEXT(J+1)=BANEXT(J+1)+(BACON*D2*D2-B1)*P*0.985**KY

            IF(DEBUG) WRITE(JOSTND,8997) I,D2,BANEXT(J+1),RDNEXT(J+1)
 8997       FORMAT(' UPDATE DENSITY: TREE = ',I4,', D2 = ',F8.4,
     &      ', BANEXT(J+1) = ',F8.2,', RDNEXT(J+1) = ',F8.2)

C  END OF TREE LOOP WITHIN SPECIES. PRINT DEBUG IF REQUESTED.

   14       CONTINUE
            IF(.NOT.DEBUG) GO TO 15
            WRITE(JOSTND,8999) J,KPER(J),ISPC,I,H1,H2,BCCF,RDJ,BBAL,BAL,
     &                   BAJ,PCT(I)
 8999       FORMAT(' IN REGENT L1: SUBC=',I2,', KPER=',I2,', SP=',I2,
     &        ', I=',I4,', H1=',F8.4,', H2=',F8.4,', BCCF=',F8.4/T5,
     &        'RDJ=', F8.4,', BBAL=',F8.4,', BAL=',F8.4,',
     &        BAJ=',F8.4,', PCT=',F8.4)

   15     CONTINUE

C  END OF SPECIES LOOP WITHIN SUBCYCLE

   16   CONTINUE

C  END OF SUBCYCLE LOOP.  END OF PERIOD HEIGHT IS STORED IN WK3.

   17 CONTINUE

C  AFTER LAST SUBCYCLE, COMPUTE ACTUAL HEIGHT INCREMENT FOR FULL CYCLE BY
C  SUBTRACTION.

      DO 30 ISPC=1,MAXSP
        I1=ISCT(ISPC,1)
        IF(I1.EQ.0) GO TO 30
        I2=ISCT(ISPC,2)
        XRDGRO=XRDMLT(ISPC)
        IF (LV2ATV) THEN
          XMX=XMAXV2(ISPC)
          XMN=XMINV2(ISPC)
        ELSE
          XMX=XMAXV3(ISPC)
          XMN=XMINV3(ISPC)
       ENDIF
        AA=HHT1(ISPC)
        BB=HHT2(ISPC)
        DO 25 I3=I1,I2
          I=IND1(I3)

          D=DBH(I)
          IF(D.GE.XMX) GO TO 25
          IF(LESTB .AND. I.LT.ITRNIN) GO TO 25
          K=I
          L=0
          H=HT(I)
          HK=WK3(I)

C  IF CALLED FROM **ESTAB** AND TOTAL CYCLE LENGTH IS LESS THAN OR EQUAL
C  TO 5 YEARS, SKIP HEIGHT INCREMENT CALCULATION BUT ASSIGN CR AND DBH.

          IF(LSKIPH) THEN
            HTG(K)=0
            GO TO 20
          ENDIF
          HTGR1=HK-H
          IF (HTGR1.LT.0.0) HTGR1=0.0

          ICRK=ICR(K)

C  DRAW RANDOM INCREMENT GIVEN EXPECTED VALUE, HTGR, AND STD. DEV.,
C  BOUND DRAW TO (-1.5*SD < ZZRAN < 1.0*SD); IF TRIPLING,
C  EACH TRIPLE GETS A NEW RANDOM NUMBER.  DO NOT TRIPLE IF CALLING
C  FROM **ESTAB**.  DO NOT APPLY HEIGHT GROWTH MULTIPLIER; MULTIPLIER
C  WAS USED DURING SUBCYCLING.
C
C  IB VARIANT IN V3 SBS USES ADDITIVE ERROR INSTEAD OF MULTIPLICATIVE
C  USED IN NI; HTGR CANNOT BE NEGATIVE!

   18     ZZRAN=0.0
          IF (DGSD.GE.1.0) ZZRAN = BACHLO(0.0,1.0,RANN)
          IF((ZZRAN .GT. 1.0) .OR. (ZZRAN .LT. -1.5)) GO TO 18

          IF (LV2ATV) THEN
            HTGR = HTGR1*EXP(ZZRAN*HSIGMA)
          ELSE
            HTGR = MAX(0.0, HTGR1 + ZZRAN*STG%SD(ISPC))
          ENDIF

C  COMPUTE WEIGHTS FOR THE LARGE AND SMALL TREE HEIGHT INCREMENT
C  ESTIMATES.  IF DBH IS LESS THAN OR EQUAL TO XMN OR IF CALLED
C  FROM **ESTAB**, THE LARGE TREE PREDICTION IS IGNORED (XWT=0.0).

          XWT=0.0
          IF(D.LE.XMN.OR.LESTB) GO TO 19
          XWT=(D-XMN)/(XMX-XMN)
   19     CONTINUE
          HTG(K)=HTGR*(1.0-XWT) + XWT*HTG(K)

C CHECK FOR SIZE CAP COMPLIANCE.

          IF((H+HTG(K)).GT.SIZCAP(ISPC,4))THEN
            HTG(K)=SIZCAP(ISPC,4)-H
            IF(HTG(K) .LT. 0.1) HTG(K)=0.1
          ENDIF

   20     CONTINUE

C  ASSIGN DBH AND COMPUTE DBH INCREMENT FOR TREES WITH DBH LESS
C  THAN 3 INCHES.  COMPUTE 10-YEAR DBH INCREMENT REGARDLESS OF
C  PROJECTION PERIOD LENGTH.  BYPASS INCREMENT CALCULATION IF
C  D GE 3.0 INCHES.

          IF(D.GE.3.0) GO TO 23

C  COMPUTE ADJUSTMENT FOR BIAS, DENSITY, AND RELATIVE SIZE.

          IF (ABS(AH-4.5).LT. 0.01 ) THEN
            RELH=0.0
          ELSE
            RELH=(H-4.5)/(AH-4.5)
          ENDIF
          IF(RELH.GT.1.0) RELH=1.0
          IF(RELH.LT.0.0) RELH=0.0
          DADJ=DELMAX*RELH*RELH - 2.0*DELMAX*RELH + 0.65
          D1=DIAM(ISPC)+DADJ
          IF(H.GT.4.5) D1=AA*(H-4.5)**BB+DADJ
          IF(DEBUG)WRITE(JOSTND,*)' I,ISPC,AA,BB,DADJ,H,D1= ',
     &     I,ISPC,AA,BB,DADJ,H,D1
          HK=H+HTG(K)
          IF(HK .LT. 4.5) THEN
            DBH(K)=0.1 + DIAM(ISPC)*.01 + HK*0.001
            DG(K)=0.0
          ELSE
            DK=AA*(HK-4.5)**BB+DADJ
            IF(DEBUG)WRITE(JOSTND,*)' I,ISPC,AA,BB,DADJ,HK,DK= ',
     &      I,ISPC,AA,BB,DADJ,HK,DK
            IF(DK.LT.DIAM(ISPC)) DK=DIAM(ISPC)
            DK=DK+HK*0.001

C       IF CALLING FROM **ESTAB** ASSIGN DIAMETER AND DIAMETER
C       INCREMENT.

            IF(LESTB) THEN
              DBH(K)=DK
              DG(K)=DK
            ELSE

C         DIAMETER INCREMENT IS THE DIFFERENCE BETWEEN COMPUTED
C         DIAMETERS.  MULTIPLIER IS APPLIED TO DIAMETER INCREMENT
C         AT THIS POINT.

              DGK=(DK-D1)*XRDGRO
              IF(DGK.LT.0.0) DGK=0.0

C         SCALE DIAMETER INCREMENT FOR BARK AND PERIOD LENGTH.
C         IN ORDER TO MAINTAIN CONSISTENCY WITH **GRADD**,
C         ADJUSTMENTS ARE MADE ON THE DDS SCALE.

              BARK=BRATIO(ISPC,DBH(K),HT(K))
              DG(K)=DGK*BARK
              DDS = DG(K)*(2.0*BARK*D+DG(K))*SCALE
              DG(K)=SQRT((D*BARK)**2.0+DDS)-BARK*D
            ENDIF
            IF((DBH(K)+DG(K)).LT.DIAM(ISPC))THEN
              DG(K)=DIAM(ISPC)-DBH(K)
            ENDIF
          ENDIF
C  CHECK FOR TREE SIZE CAP COMPLIANCE

          CALL DGBND(ISPC,DBH(K),DG(K))

C  IF THE TREE WILL ATTAIN A DBH OF 2 OR MORE CM THIS CYCLE
C  CALL **DUBSCR** TO ESTIMATE A NEW CROWN RATIO, IF IT DOESN'T HAVE ONE
C  DIAMETER GROWTH SCALED TO CYCLE LENGTH FOR THIS CALCULATION.
C  MAKE SURE NEW CROWN DOES NOT EXCEED MAX POSSIBLE GIVEN HTG.

          IF(.NOT.LESTB) THEN
            SCALE2=FINT/YR
            D=DBH(K)
            BARK=BRATIO(ISPC,D,HT(K))
            DDS2=(DG(K)*(2.0*BARK*D+DG(K)))*SCALE2
            DG2=SQRT((D*BARK)**2+DDS2)-BARK*D
            IF (DG2.LT.0.0) DG2=0.0
            DNEW=D+DG(K)

            IF (LV2ATV) THEN
              XCRIT  = 3.0
              XCRCON = -1.0
              BAL    = -1.0
            ELSE
              XCRIT  = 2.0*CMtoIN
              XCRCON = CRCON(ISPC) +
     >          CRLNCCF(ISPC) * LOG(MAX(0.01,RELDEN))
              BAL    = (1.0 - (PCT(K)/100.)) * BA
            ENDIF

            IF(DNEW.GE.XCRIT) THEN
              IF(ICRK .EQ. 0)THEN
                CALL DUBSCR(LV2ATV,ISPC,XCRCON,DNEW,HK,BA,BAL,CR)
                ICRK=IFIX(CR*100. + 0.5)
              ENDIF
              ICR(K)=ICRK
              IF(DEBUG)WRITE(JOSTND,*)' AFTER DUBSCR K,ISPC,DNEW,',
     &          'HK,BA,ICR= ',K,ISPC,DNEW,HK,BA,ICR(K)
            ENDIF
          ENDIF
   23     CONTINUE

C  PRINT DEBUG AND RETURN TO PROCESS NEXT TRIPLE OR NEXT TREE.

          IF(.NOT.DEBUG) GO TO 24
          WRITE(JOSTND,9000) I,K,ISPC,H,HTG(K),HK,DBH(K),DG(K)
 9000     FORMAT(' IN REGENT LOOP 2, I=',I4,', K=',I4,', ISPC=',I3,
     &       ', CUR HT=',F7.2,', HT INC=',F7.4/T20,'NEW HT=',F7.2,
     &       ', CUR DBH=',F7.2,', 10-YR DBH INC=',F7.4)
   24     CONTINUE
          IF(LESTB .OR. .NOT.LTRIP .OR. L.GE.2) GO TO 25
          L=L+1
          K=ITRN+2*I-2+L
          GO TO 18

C  END OF GROWTH PREDICTION LOOP.  PRINT DEBUG INFO IF DESIRED.

   25   CONTINUE
   30 CONTINUE

      RETURN

C  SMALL TREE HEIGHT CALIBRATION SECTION.

   40 CONTINUE
      DO 45 ISPC=1,MAXSP
        HCOR(ISPC)=0.0
        CORTEM(ISPC)=1.0
        NUMCAL(ISPC)=0
   45 CONTINUE
      IF (ITRN.LE.0) RETURN
      IF(IFINTH .EQ. 0)  GOTO 100
      SCALE3 = REGYR/FINTH

C  DETERMINE BASAL AREA IN LARGE TREES AT START OF EACH PREDICTION SUBCYCLE.

      DO 46 J=1,NPER
        BANEXT(J)=TEMBA
        RDNEXT(J)=TEMCCF
   46 CONTINUE
      IF(NPER.EQ.1) GO TO 50

C  IF THERE IS MORE THAN 1 SUBCYCLE FOR HEIGHT INCREMENT PREDICTION,
C  (IFINTH > 5) ESTIMATE VALUES OF BA AND RELATIVE DENSITY (CCF) AT
C  START OF EACH SUBCYCLE.  10-YEAR CHANGE IS COMPUTED FROM BACKDATED
C  DIAMETER (WK3) AND 10-YEAR DIAMETER INCREMENT COMPUTED DURING CALIBRATION.
C  LINEAR INTERPOLATION IS USED TO ASSIGN VALUES FOR SUBCYCLES.

      DO 49 I=1,ITRN
        D1=WK3(I)
        IS=ISP(I)
        P=PROB(I)
        D2=WK3(I)+DG(I)/BRATIO(IS,D1,HT(I))
        B1=BACON*D1*D1
        B2=BACON*D2*D2
        CALL CCFCAL(IS,D1,HT(I),ICR(I),P,.FALSE.,C1,CW,1)
        CALL CCFCAL(IS,D2,HT(I),ICR(I),P,.FALSE.,C2,CW,1)
        BI=(B2-B1)/10.0
        CI=(C2-C1)/10.0
        K=0
        DO 48 J=2,NPER
          K=K+KPER(J-1)
          PN=P*0.985**K
          RDNEXT(J)=RDNEXT(J)+K*CI/P*PN
          BANEXT(J)=BANEXT(J)+K*BI*PN
   48   CONTINUE
   49 CONTINUE
   50 CONTINUE

C     SBS MODELS USE CCF IN LARGER AND SMALLER TREES. CALCULATE CUMULATIVE CCF;
C     SBSCC1 CONTAINS CCF FOR EACH RECORD, SBSCC2 CONTAINS CCF IN TREES UP TO
C     BUT NOT INCLUDING THE CURRENT RECORD. SORTING IS BY DBH.

      IF (.NOT. LV2ATV .AND. INDEX(BEC%Zone,'SBS') .GT. 0) THEN
        SBSCCF = 0.0
        DO I = 1,ITRN
          CALL CCFCAL(ISP(I),DBH(I),HT(I),ICR(I),PROB(I),
     >      .FALSE.,C1,CW,1)
          SBSCC1(I) = C1
          SBSCCF = SBSCCF + C1
        ENDDO
        CALL RDPSRT(ITRN,DBH,INDX,.TRUE.)
        SBSCC2(INDX(ITRN)) = SBSCC1(INDX(ITRN))
        DO I = ITRN-1,1,-1
          SBSCC2(INDX(I)) = SBSCC1(INDX(I)) + SBSCC2(INDX(I+1))
        ENDDO
        DO I = 1,ITRN-1
          SBSCC2(INDX(I)) = SBSCC2(INDX(I+1))
        ENDDO
        SBSCC2(INDX(ITRN)) = 0.0
      ENDIF

      DO 90 ISPC=1,MAXSP

C  BEGIN PROCESSING TREE LIST IN SPECIES ORDER.  DO NOT CALCULATE
C  CORRECTION TERMS IF THERE ARE NO TREES FOR THIS SPECIES.

        CORNEW=1.0
        I1=ISCT(ISPC,1)
        IF(I1.EQ.0 .OR. .NOT. LHTCAL(ISPC)) GO TO 90
        IF(.NOT. LV2ATV .AND. .NOT. STG%FIT(ISPC)) GOTO 90
        I2=ISCT(ISPC,2)
        IREFI=IREF(ISPC)
        N=0
        SNP=0.0
        SNX=0.0
        SNY=0.0
        IF (LV2ATV) THEN
          BHAB=RHCON(ISPC)
          BLH=RHLH(ISPC)
          BCCF=RHCCF(ISPC)
          BBAL=RHBAL(ISPC)
        ENDIF

C  BEGIN TREE LOOP WITHIN SPECIES.  IF MEASURED HEIGHT INCREMENT IS
C  LESS THAN OR EQUAL TO ZERO, OR DBH IS GREATER THAN 5.0, THE RECORD
C  WILL BE EXCLUDED FROM THE CALIBRATION.

        DO 60 I3=I1,I2
          I=IND1(I3)
          H=HT(I)

          IF(IHTG.LT.2) H=H-HTG(I)
          IF(DBH(I).GE.5.0.OR.H.LT.(1.37*MtoFT)) GO TO 60
          IF(HTG(I).LT.0.001) GO TO 60

          HK=H
          DO 55 J=1,NPER
            BAJ = BANEXT(J)
            RDJ = RDNEXT(J)

            IF (LV2ATV) THEN
              BAL=BAJ*(100.0-PCT(I))*0.0001
              EDH=EXP(BHAB + BLH*ALOG(HK) + BCCF*RDJ + BBAL*BAL)
            ELSE
              BAL = (1.0 - (PCT(I)/100.)) * BAJ
              IF (INDEX(BEC%Zone,'SBS') .GT. 0) THEN
                CCFS = SBSCC2(I) * RDJ/SBSCCF
                CCFL = (SBSCCF - SBSCC1(I)) * RDJ/SBSCCF
                EDH =
     >            (STG%CON(ISPC) +
     >            (STG%HT(ISPC) * (H1 * FTtoM))) /
     >            (1.0 + (STG%EXPMLT(ISPC) *
     >            EXP((STG%HCCFL(ISPC) * H1 * FTtoM / CCFL) +
     >            (STG%CCFSL(ISPC) * CCFS/CCFL) ) ) )
                  EDH = EDH * CMtoFT * EXP(RHCON(ISPC))
              ELSE
                EDH = STG%CON(ISPC) + RHCON(ISPC) +
     >            (STG%LNHT(ISPC) * ALOG(MAX(2.0,H1 * FTtoM))) +
     >            (STG%HT(ISPC)   * MAX(2.0,H1 * FTtoM)) +
     >            (STG%BAL(ISPC)  * BAL * FT2pACRtoM2pHA * 0.01) +
     >            (STG%CCF(ISPC)  * RDJ)
                EDH = EXP(MAX(-88.0,EDH)) * MtoFT
              ENDIF
            ENDIF
            HK = HK + EDH
   55     CONTINUE

          EDH=HK-H
          P=PROB(I)
          TERM=HTG(I)*SCALE3
          SNP=SNP+P
          SNX=SNX+EDH*P
          SNY=SNY+TERM*P
          N=N+1

C  PRINT DEBUG INFO IF DESIRED.

          IF(DEBUG) WRITE(JOSTND,9001) NPLT,I,ISPC,H,DBH(I),ICR(I),
     &      PCT(I),TEMCCF,RHCON(ISPC),EDH,TERM
 9001     FORMAT(' NPLT=',A26,',  I=',I5,',  ISPC=',I3,',  H=',F6.1,
     &      ',  DBH=',F5.1,',  ICR',I5,',  PCT=',F6.1,',  RELDEN=',
     &      F6.1 / 13X,'RHCON=',F10.3,',  EDH=',F10.3,', TERM=',F10.3)

C  END OF TREE LOOP WITHIN SPECIES.

   60   CONTINUE
        IF(DEBUG) WRITE(JOSTND,9010) ISPC,SNP,SNX,SNY
 9010   FORMAT(/' SUMS FOR SPECIES ',I2,':  SNP=',F10.2,
     &    ';   SNX=',F10.2,';   SNY=',F10.2)

C  COMPUTE CALIBRATION TERMS.  CALIBRATION TERMS ARE NOT COMPUTED
C  IF THERE WERE FEWER THAN NCALHT (DEFAULT=5) HEIGHT INCREMENT
C  OBSERVATIONS FOR A SPECIES.

      IF(N.LT.NCALHT) GO TO 80

C  CALCULATE MEANS FOR THE FOR THE GROWTH SAMPLE ON THE
C  NATURAL SCALE.

        SNX=SNX/SNP
        SNY=SNY/SNP

C  THE CORRECTION TERM IS THE MEAN OF OBSERVED INCREMENTS
C  DIVIDED BY THE MEAN OF PREDICTED INCREMENTS (NOT THE REGRESSION
C  ESTIMATE USED FOR DIAMETER INCREMENT CALIBRATION).

        CORNEW=SNY/SNX
        IF(CORNEW.LE.0.0) CORNEW=1.0E-4
        HCOR(ISPC)=ALOG(CORNEW)

C  TRAP CALIBRATION VALUES OUTSIDE 2.5 STANDARD DEVIATIONS FROM THE
C  MEAN. IF C IS THE CALIBRATION TERM, WITH A DEFAULT OF 1.0, THEN
C  LN(C) HAS A MEAN OF 0.  -2.5 < LN(C) < 2.5 IMPLIES
C  0.0821 < C < 12.1825

        IF(CORNEW.LT.0.0821 .OR. CORNEW.GT.12.1825) THEN
          CALL ERRGRO(.TRUE.,27)
          WRITE(JOSTND,9194)ISPC,JSP(ISPC),CORNEW
 9194     FORMAT(T28,' SMALL TREE HTG: SPECIES = ',I2,' (',A3,
     &    ') CALCULATED CALIBRATION VALUE = ',F8.2)
          CORNEW=1.0
          HCOR(ISPC)=0.0
        ENDIF
   80   CONTINUE
        CORTEM(IREFI) = CORNEW
        NUMCAL(IREFI) = N
   90 CONTINUE

C  END OF CALIBRATION LOOP.  PRINT CALIBRATION STATISTICS AND RETURN

      WRITE(JOSTND,9002) (NUMCAL(I),I=1,NUMSP)
 9002 FORMAT(/' NUMBER OF RECORDS AVAILABLE FOR SCALING'/
     >       ' THE SMALL TREE HEIGHT INCREMENT MODEL',
     >        ((T49,11(I4,2X)/)))
  100 CONTINUE
      WRITE(JOSTND,9003) (CORTEM(I),I=1,NUMSP)
 9003 FORMAT(/' INITIAL SCALE FACTORS FOR THE SMALL TREE'/
     >      ' HEIGHT INCREMENT MODEL',
     >       ((T49,11(F5.2,1X)/)))

C OUTPUT CALIBRATION TERMS IF CALBSTAT KEYWORD WAS PRESENT.

      IF(JOCALB .GT. 0) THEN
        KOUT=0
        DO 207 K=1,MAXSP
        IF(CORTEM(K).NE.1.0 .OR. NUMCAL(K).GE.NCALHT) THEN
          SPEC=NSP(MAXSP,1)(1:2)
          ISPEC=MAXSP
          DO 203 KK=1,MAXSP
          IF(K .NE. IREF(KK)) GO TO 203
          ISPEC=KK
          SPEC=NSP(KK,1)(1:2)
          GO TO 2031
  203     CONTINUE
 2031     WRITE(JOCALB,204)ISPEC,SPEC,NUMCAL(K),CORTEM(K)
  204     FORMAT(' CAL: SH',1X,I2,1X,A2,1X,I4,1X,F6.3)
          KOUT = KOUT + 1
        ENDIF
  207   CONTINUE
        IF(KOUT .EQ. 0)WRITE(JOCALB,209)
  209   FORMAT(' NO SH VALUES COMPUTED')
        WRITE(JOCALB,210)
  210   FORMAT(' CALBSTAT END')
      ENDIF
      RETURN

      ENTRY REGCON

C  ENTRY POINT FOR LOADING OF REGENERATION GROWTH MODEL
C  CONSTANTS  THAT REQUIRE ONE-TIME RESOLUTION.
C  IDTYPE IS A HABITAT INDEX THAT IS COMPUTED IN **RCON**.
C  RHSC IS AN ARRAY FOR SPECIES CONSTANTS, RHGL IS AN ARRAY FOR
C  LOCATION CONSTANTS, RHHAB IS AN ARRAY FOR HABITAT DEPENDENT
C  CONSTANTS, AND, RSAB0, RSAB1, AND RSAB2 ARE COEFFICIENTS FOR
C  THE SLOPE AND ASPECT TRANSFORMATION.

      DATA RHHAB/
     &  -0.2146, -0.0941, -0.3141,     0.0,     0.0,      0.0,
     &  -0.2146, -0.0941, -0.3296,     0.0,     0.0,      0.0,
     &  -0.2146, -0.0941, -0.5401, -0.3948,     0.0,      0.0,
     &  -0.2146, -0.0941, -0.2776,     0.0,     0.0,      0.0,
     &  -0.2146, -0.0941,     0.0,     0.0,     0.0,      0.0,
     &  -0.2146, -0.0941,     0.0,     0.0,     0.0,      0.0,
     &  -0.2146, -0.0941, -0.2484, -0.5134, -0.3495,      0.0,
     &  -0.2146, -0.0941, -0.3431,     0.0,     0.0,      0.0,
     &  -0.2146, -0.0941, -0.4916, -0.3582,     0.0,      0.0,
     &  -0.2146, -0.0941, -0.4345,     0.0,     0.0,      0.0,
     &  -0.2146, -0.0941, -0.3738,     0.0,     0.0,      0.0,
     &  -0.2146, -0.0941, -0.3738,     0.0,     0.0,      0.0,
     &  -0.2146, -0.0941, -0.3738,     0.0,     0.0,      0.0,
     &  -0.2146, -0.0941, -0.5401, -0.3948,     0.0,      0.0, !OC=FD
     &  -0.2146, -0.0941, -0.3738,     0.0,     0.0,      0.0/
      DATA MAPHAB/
     &  12*3, 1,2, 4*4, 1, 11*3,
     &  9*3, 4*1, 2, 4*4, 1, 11*3,
     &  7*4, 1, 3*4, 1,1,2, 4*5, 1,4,3, 6*4, 3,4,4,
     &  12*3, 1,2, 4*4, 1,3,3,1,1, 7*3,
     &  13*1, 2, 4*3, 12*1,
     &  13*1, 2, 4*3, 12*1,
     &  4*5, 3*1, 4*5, 4,4,2, 5*6, 4,4,3,4, 3*5, 4,4,5,5,
     &  13*1, 2, 4*4, 9*1, 3,1,1,
     &  12*4, 3,2, 4*5, 1, 7*4, 1,3,3,4,
     &  3*1, 3,3,1,1, 4*3, 1,1,2, 4*4, 1, 11*3,
     &  12*3, 1,2, 4*4, 1,3,3,2, 8*3,
     &  12*3, 1,2, 4*4, 1,3,3,2, 8*3,
     &  12*3, 1,2, 4*4, 1,3,3,2, 8*3,
     &  7*4, 1, 3*4, 1,1,2, 4*5, 1,4,3, 6*4, 3,4,4, ! OC=FD
     &  12*3, 1,2, 4*4, 1,3,3,2, 8*3/
      DATA  RHSC/
     &  1.4700,1.6204,1.4932,.9981,1.0202,.8953,1.2336,1.0964,1.0667,
     &  1.7311,.8953,.8953,.8953,1.4932,.8953/
      DATA  RHGL/-.2785,-.0480,0./
      DATA RSAB0,RSAB1,RSAB2/
     &     -0.10987,0.22157,-0.12432/

      IF (LV2ATV) THEN
        REGCH = RHGL(IGL) +
     &    (RSAB0 + RSAB1*COS(ASPECT) + RSAB2*SIN(ASPECT))*SLOPE
        DO ISPC=1,MAXSP
          IRHHAB=MAPHAB(ITYPE,ISPC)
          RHCON(ISPC) = REGCH + RHSC(ISPC) + RHHAB(IRHHAB,ISPC)
          IF(LRCOR2.AND.RCOR2(ISPC).GT.0.0) RHCON(ISPC)=RHCON(ISPC) +
     &      ALOG(RCOR2(ISPC))

C         SEI RECALIBRATION: IF THERE IS A SPECIES RE-FIT:
C         v2SEICOR COMES FROM LARGE DIAM MODEL **DGF** (SPECIES SPECIFIC)
C         SEISHT COMES FROM LARGE TREE HT MODEL **HTGF** (HABITAT SPECIFIC)

          IF (LLTDGOK(ISPC)) THEN
            V2SEICOR(ISPC) = MAX(1.0E-6, V2SEICOR(ISPC))
            RHCON(ISPC)  = RHCON(ISPC)+ SEISHT * LOG(V2SEICOR(ISPC))
          ENDIF
        ENDDO

      ELSE

C       REPLACE NULLS IN COMPILED DATA STRINGS WITH SPACES, SO THAT
C       STRING LENGTHS WILL BE FIGURED CORRECTLY AND STRING COMPARISONS
C       WILL WORK PROPERLY

        DO J = 1, P_ZN
              DO K = 1, P_ST
            DO M = 1,P_ZL
              IF (ICHAR(ST_COEF(J)%Zone(K)(M:M)) .EQ. 0)
     >          ST_COEF(J)%Zone(K)(M:M) = ' '
            ENDDO
          ENDDO
        ENDDO
C
C       BEGIN SEARCH FOR ONE OF TEMESGEN'S MODELS
C
        DO I = 1,MAXSP
          IPOS(I)   = 0
          STG%FIT(I) = .FALSE.
        ENDDO
        PAT2 = BEC%PrettyName

        DO I = 1,MAXSP

          IPAS = 0
          PAT1 = PAT2

   70     DO J = 1, P_ZN
            DO K = 1, MAXSP
              IF (ST_COEF(J)%SPP(K) .EQ. 0) EXIT
              IF (ST_COEF(J)%SPP(K) .EQ. I) THEN
                DO M = 1, P_ST
                  IF (LEN_TRIM(ST_COEF(J)%Zone(M))   .EQ. 0) EXIT
                  IF (INDEX(ST_COEF(J)%Zone(M),PAT1) .GT. 0) THEN
                    IPOS(I) = J
                    GOTO 71
                  ENDIF
                ENDDO
                EXIT
              ENDIF
            ENDDO
          ENDDO

          IF (J .GT. P_ZN .AND. IPAS .EQ. 0) THEN
            IPAS = 1
            PAT1 = BEC%Zone(1:LEN_TRIM(BEC%Zone))//'/all '
            GOTO 70
          ENDIF

   71   ENDDO

        DO I = 1,MAXSP
          J1 = IPOS(I)
          IF (J1 .GT. 0) THEN
            STG%FIT(I)    = .TRUE.
            STG%CON(I)    = ST_COEF(J1)%CON + (ST_COEF(J1)%SLP +
     >                      ST_COEF(J1)%CASP * COS(ASPECT) +
     >                      ST_COEF(J1)%SASP * SIN(ASPECT)) * SLOPE
            STG%LNHT(I)   = ST_COEF(J1)%LNHT
            STG%HT(I)     = ST_COEF(J1)%HT
            STG%CCF(I)    = ST_COEF(J1)%CCF
            STG%BAL(I)    = ST_COEF(J1)%BAL
            STG%EXPMLT(I) = ST_COEF(J1)%EXPMLT  ! SBS only
            STG%HCCFL(I)  = ST_COEF(J1)%HCCFL   ! SBS only
            STG%CCFSL(I)  = ST_COEF(J1)%CCFSL   ! SBS only
            STG%SD(I)     = ST_COEF(J1)%SD
          ENDIF
        ENDDO

C       IF SCALE FACTORS HAVE BEEN INPUT WITH THE READCORR KEYWORD,
C       INCORPORATE THEM INTO THE OVERALL CONSTANTS.

        DO ISPC = 1,MAXSP
          RHCON(ISPC)= 0.0
          IF(LRCOR2 .AND. RCOR2(ISPC) .GT. 0.0)
     >      RHCON(ISPC) = ALOG(RCOR2(ISPC))
        ENDDO

      ENDIF

      DO I=1,MAXTRE
        ZRAND(I)=-999.0
      ENDDO

      RETURN
      END
