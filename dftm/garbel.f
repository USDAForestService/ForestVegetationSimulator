      SUBROUTINE GARBEL (
     >           IPT,NRECS,KEY,WEIGHT,NATR,NCLAS,PN1,CLAS,ISC,P,
     >           A1,A2,A3,A4,A5,A6,A7,A8,PROB,KODE,MAXCLS,ITWO)
      IMPLICIT NONE
C----------
C  **GARBEL  DATE OF LAST REVISION:  06/30/10
C----------
C
C     N.L. CROOKSTON PROGRAMMER     JAN 1978 MAY 1980 JAN 1981
C
C     GENERALIZED CLASSIFICATION ROUTINE
C
C     THE GOAL OF THIS ROUTINE IS TO REDUCE THE LENGTH OF THE
C     TREE ATTRIBUTE VECTORS FROM THEIR ORGINIAL LENGTH (EQUAL TO NRECS)
C     TO THE LENGTH 'NCLAS'. THE OUTPUT OF THE CLASSIFICATION IS
C     STORED IN THE ARRAY CLAS; THE CLASSES ARE ACCESSED THRU THE
C     POINTER ARRAY IPT VIA THE ARRAY ISC.
C
C     THERE ARE TWO METHODS USED TO FIND THE CLASSES:
C
C     METHOD 1: FIRST, DEFINE A LIST, P (WITH LENGTH NRECS),
C     OF THE SUM OF EACH TREE ATTRIBUTE (IE, CFV, HT, DBH, ETC.)
C     MULTIPLIED BY THE APPROPRIATE ATTRIBUTE WEIGHT. THEN,
C     DEFINE THE CLASS BOUNDARIES AS BEING AT THE MAXIMUM BREAKS
C     IN P.
C
C     METHOD 2: FIND THE CLASS WHICH HAS THE GREATEST NUMBER OF TREE
C     RECORDS AND SPLIT IT INTO TWO CLASSES. REPEAT UNITL THE
C     NUMBER OF ADDITIONAL CLASSES DESIRED HAVE BEEN FOUND.
C
C     IPT   = POINTER ARRAY. MUST BE PACKED (CONTAIN NO ZEROS)
C             AND START AT POSITION 1.
C     NRECS = NUMBER OF RECORDS.
C     KEY   = POSITION AND TYPE DISCRIPTOR ARRAY.
C     WEIGHT= WEIGHTS OF ASSIGNED ATTRIBUTES
C     NATR  = NUMBER OF ATTRIBUTES, NEEDED FOR OBJECT TIME
C             DIMENSIONING OF CLAS
C     MAXCLS= MAX. NUMBER OF CLASSES (DIMENSIONING OF ISC)
C     ITWO  = ALWAYS EQUAL TO '2'    (DIMENSIONING OF ISC)
C     NCLAS = NUMBER OF REQUESTED CLASSES. MUST BE .GE. NRECS
C     CLAS  = CLASSIFIED ARRAY
C     ISC   = SECTOR ARRAY, KEY TO THE IPT ARRAY.
C     KODE  = 0 EVERYTHING WENT OK
C             1 CNTR WAS TOO LOW
C     P     = WORK ARRAY WHICH HOLDS THE WEIGHTED SUMS.
C     NCL1  = THE NUMBER OF CLASSES FOUND USING METHOD 1.
C     NCL2  = THE NUMBER OF CLASSES FOUND USING METHOD 2.
C     PN1   = THE PROPORTION OF THE TOTAL NUMBER OF CLASSES
C             FOUND USING METHOD 1.
C     A1    = FIRST ARGUMENT TO BE CLASSIFIED IN POSITION
C             KEY(1) OF CLAS.
C     A2 TO A8  ---   LIKE A1   ---
C     PROB  = TREMOD'S PROB.
C     IMP   = POSITION IN CLAS OF PROB.  EQUAL TO KEY(9)
C
C  03-APR-2002 Lance R. David (FHTET)
C     Arrays dimensioned "1" changed to "*" so that array size is
C     inherited from calling routine.
C----------

      INTEGER IMP,II,I,NCL1,NCL2,J,NC1,IPT1,IPT2,I1,I2,K,MAX,JJ,KODE
      INTEGER NCLAS,NRECS,MAXCLS,ITWO,ISC,KEY,IPT,NATR
      REAL PN1,CLAS,PROB,P,WEIGHT,A1,A2,A3,A4,A5,A6,A7,A8,CNTR,DIFFP

      DIMENSION IPT(*),KEY(9),ISC(MAXCLS,ITWO)
      DIMENSION WEIGHT(8),CLAS(MAXCLS,NATR),PROB(*),P(*)
      DIMENSION A1(*),A2(*),A3(*),A4(*),A5(*),A6(*),A7(*),A8(*)
C
C     ************************************************************
C
      KODE = 0
      IMP = KEY(9)
C
C     STEP1:  INITIALIZE 'P' AND SUM PROB
C
      CNTR = 0.0
      DO 50 II = 1, NRECS
      I = IPT(II)
      P(I) = 0.0
      CNTR = CNTR + PROB(I)
   50 CONTINUE
      IF ( CNTR .GE. .001) GO TO 55
      KODE = 1
      RETURN
   55 CONTINUE
C
C     STEP2:  CALCULATE THE NUMBER OF CLASSES FOUND BY EACH METHOD.
C
      NCL1 = NCLAS*PN1+.5
      IF (NCL1 .LT. 1) NCL1=1
      NCL2 = NCLAS-NCL1
C
C     RESTRICTION: THERE HAS TO BE AT LEAST 05 MORE TREE RECORDS THAN
C     REQUESTED CLASSES BEFORE METHOD 2 WILL BE USED.
C
      IF (NRECS-NCLAS .GT. 5) GO TO 10
      NCL1 = NCLAS
      NCL2 = 0
   10 CONTINUE
C
C     STEP3:  CALCULATE THE WEIGHTED SCORES FOR EACH TREE RECORD
C            FOR ALL ATTRIBUTES
C
      IF ( KEY (1) .EQ. 0 ) GO TO 62
      CALL GRPSUM (NRECS,IPT,A1,P,WEIGHT(1))
   62 CONTINUE
      IF ( KEY (2) .EQ. 0 ) GO TO 72
      CALL GRPSUM (NRECS,IPT,A2,P,WEIGHT(2))
   72 CONTINUE
      IF ( KEY (3) .EQ. 0 ) GO TO 82
      CALL GRPSUM (NRECS,IPT,A3,P,WEIGHT(3))
   82 CONTINUE
      IF ( KEY (4) .EQ. 0 ) GO TO 92
      CALL GRPSUM (NRECS,IPT,A4,P,WEIGHT(4))
   92 CONTINUE
      IF ( KEY (5) .EQ. 0 ) GO TO 102
      CALL GRPSUM (NRECS,IPT,A5,P,WEIGHT(5))
  102 CONTINUE
      IF ( KEY (6) .EQ. 0 ) GO TO 112
      CALL GRPSUM (NRECS,IPT,A6,P,WEIGHT(6))
  112 CONTINUE
      IF ( KEY (7) .EQ. 0 ) GO TO 122
      CALL GRPSUM (NRECS,IPT,A7,P,WEIGHT(7))
  122 CONTINUE
      IF ( KEY (8) .EQ. 0 ) GO TO 132
      CALL GRPSUM (NRECS,IPT,A8,P,WEIGHT(8))
  132 CONTINUE
C
C     STEP4:  SORT 'IPT' ON 'P' USING RDPSRT
C
      CALL RDPSRT (NRECS,P,IPT,.FALSE.)
C
C     STEP5:  SET UP CLASES IN ISC
C
C
C     FIND THE MAXIMUM DIFFERENCES IN ARRAY P.  THE CLASS BOUNDS WILL
C     OCCUR AT THE POINTS OF MAX DIFFERENCES.
C
C     (THIS CODE WAS MODIFIED FROM SOME ROELKE AND BURNELL TEXT)
C
C     (A) ZERO OUT STORAGE AREA THAT IS USED TO HOLD THE DIFFERENCES.
C
      DO 135 J=1,NCL1
      CLAS(J,IMP) = 0
  135 CONTINUE
C
C     (B) CALCULATE DIFFERENCES
C
      NC1 = NCL1 - 1
      IPT1 = IPT(1)
C
      DO 142 I=2,NRECS
      IPT2 = IPT(I)
      DIFFP = P(IPT1) - P(IPT2)
C
      DO 138 J=1,NC1
C
C     (C) SAVE LARGEST DIFFERENCES
C
      IF (DIFFP .LE. CLAS(J+1,IMP)) GO TO 140
C
C     (D) BUBBLE SMALLER DIFFERENCES DOWN 1
C
      CLAS(J,IMP) = CLAS(J+1,IMP)
      ISC(J,1) = ISC(J+1,1)
  138 CONTINUE
C
      J = NCL1
  140 CONTINUE
      CLAS(J,IMP) = DIFFP
      ISC(J,1) = I
      IPT1 = IPT2
  142 CONTINUE
C
      ISC(1,1) = NRECS + 1
C
C     (E) SORT CLASS DIVISION POINTERS INTO ASCENDING ORDER.
C         NOTE THAT ISC IS TREATED LIKE A VECTOR IN IQRSRT.
C
      CALL IQRSRT (ISC,NCL1)
C
C     STEP6:  DEFINE NCL2 MORE CLASSES USING METHOD 2.
C
C     (A) CALCULATE THE LENGTH (IE, THE NUMBER OF TREE RECORDS)
C     IN EACH CLASS. ALSO, REDEFINE ISC(J,1) TO POINT TO THE
C     END OF CLASS J.
C
      I1 = 1
      DO 143 J=1,NCL1
      I2 = ISC(J,1)-1
      ISC(J,1) = I2
      ISC(J,2) = I2-I1+1
      I1 = I2+1
  143 CONTINUE
C
C     (B) IF NCL2 IS ZERO, METHOD 2 IS NOT TO BE USED.  SKIP
C     TO THE ASSIGNMENT OF THE SECTOR POINTERS.
C
      IF (NCL2 .EQ. 0) GO TO 147
C
C     (C) CREATE NCL2 NEW CLASSES BY DIVIDING THE NCL2 LARGEST
C     CLASSES INTO TWO CLASSES EACH (INCLUDE THE NEW CLASSES IN THE
C     SEARCH FOR THE LARGEST CLASS).
C
      DO 145 K=1,NCL2
      MAX = 0
      DO 144 J=1,NCL1
      IF (ISC(J,2) .LE. MAX) GO TO 144
      MAX = ISC(J,2)
      I = J
  144 CONTINUE
C
      NCL1 = NCL1+1
      MAX = FLOAT(MAX)/2. + .5
      ISC(NCL1,1) = ISC(I,1)
      ISC(I,1)    = ISC(I,1)-MAX
      ISC(NCL1,2) = MAX
      ISC(I,2)    = ISC(I,2)-MAX
  145 CONTINUE
C
C     (D) RESORT THE CLASS DIVISION POINTERS
C
      CALL IQRSRT(ISC,NCL1)
C
C     (E) ASSIGN THE CLASS SECTOR POINTERS.
C
  147 CONTINUE
      I1 = 1
      DO 148 J=1,NCL1
      I2 = ISC(J,1)
      ISC(J,1) = I1
      ISC(J,2) = I2
      I1 = I2+1
  148 CONTINUE
C
C     STEP7:  --- FIND AVERAGES FOR EACH CLAS
C                        AND TOTAL PROB
C
      DO 150 I = 1, NCLAS
      CLAS(I,IMP) = 0.0
      I1 = ISC(I,1)
      I2 = ISC(I,2)
      DO 150 JJ = I1, I2
      J = IPT(JJ)
      CLAS (I,IMP) = CLAS (I,IMP) + PROB (J)
  150 CONTINUE
C
      IF ( KEY (1) .EQ. 0 ) GO TO 162
      CALL GRCLAS (NRECS,IPT,A1,ISC,NCLAS,NATR,CLAS,PROB,IMP,KEY(1),
     >         MAXCLS,ITWO)
  162 CONTINUE
      IF ( KEY (2) .EQ. 0 ) GO TO 172
      CALL GRCLAS (NRECS,IPT,A2,ISC,NCLAS,NATR,CLAS,PROB,IMP,KEY(2),
     >         MAXCLS,ITWO)
  172 CONTINUE
      IF ( KEY (3) .EQ. 0 ) GO TO 182
      CALL GRCLAS (NRECS,IPT,A3,ISC,NCLAS,NATR,CLAS,PROB,IMP,KEY(3),
     >         MAXCLS,ITWO)
  182 CONTINUE
      IF ( KEY (4) .EQ. 0 ) GO TO 192
      CALL GRCLAS (NRECS,IPT,A4,ISC,NCLAS,NATR,CLAS,PROB,IMP,KEY(4),
     >         MAXCLS,ITWO)
  192 CONTINUE
      IF ( KEY (5) .EQ. 0 ) GO TO 202
      CALL GRCLAS (NRECS,IPT,A5,ISC,NCLAS,NATR,CLAS,PROB,IMP,KEY(5),
     >         MAXCLS,ITWO)
  202 CONTINUE
      IF ( KEY (6) .EQ. 0 ) GO TO 212
      CALL GRCLAS (NRECS,IPT,A6,ISC,NCLAS,NATR,CLAS,PROB,IMP,KEY(6),
     >         MAXCLS,ITWO)
  212 CONTINUE
      IF ( KEY (7) .EQ. 0 ) GO TO 222
      CALL GRCLAS (NRECS,IPT,A7,ISC,NCLAS,NATR,CLAS,PROB,IMP,KEY(7),
     >         MAXCLS,ITWO)
  222 CONTINUE
      IF ( KEY (8) .EQ. 0 ) GO TO 232
      CALL GRCLAS (NRECS,IPT,A8,ISC,NCLAS,NATR,CLAS,PROB,IMP,KEY(8),
     >         MAXCLS,ITWO)
  232 CONTINUE
C
      RETURN
      END
