      SUBROUTINE ESTAB (KDT)
      IMPLICIT NONE
C----------
C AK $Id$
C----------
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'ESPARM.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
      INCLUDE 'CALDEN.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
      INCLUDE 'ESCOM2.F77'
C
C
      INCLUDE 'ESCOMN.F77'
C
C
      INCLUDE 'ESHAP.F77'
C
C
      INCLUDE 'ESHAP2.F77'
C
C
      INCLUDE 'ESTREE.F77'
C
C
      INCLUDE 'PDEN.F77'
C
C
      INCLUDE 'PLOT.F77'
C
C
      INCLUDE 'STDSTK.F77'
C
C
      INCLUDE 'VARCOM.F77'
C
COMMONS
C
C----------
C     REGENERATION ESTABLISHMENT MODEL   --   VERSION 2.0
C     USDA FOREST SERVICE, INTERMOUNTAIN RESEARCH STATION
C     1221 S. MAIN, MOSCOW, IDAHO  83843   (208) 882-3557
C
C     THIS PROGRAM MODELS REGENERATION ESTABLISHMENT IN THE ALASKA 
C     VARIANT. EXISTING MODELS REPLACED IN 2020 REFIT
C
C----------
C SPECIES LIST FOR ALASKA VARIANT.
C
C Number Code  Common Name         FIA  PLANTS Scientific Name           MIN.HT
C ------ ----  -----------         ---  ------ ---------------           ------
C   1     SF   Pacific silver fir  011  ABAM   Abies amabilis            1.0 FT
C   2     AF   subalpine fir       019  ABLA   Abies lasiocarpa          0.5 FT
C   3     YC   Alaska cedar        042  CANO9  Callitropsis nootkatensis 0.5 FT
C   4     TA   tamarack            071  LALA   Larix laricina            0.5 FT
C   5     WS   white spruce        094  PIGL   Picea glauca              0.5 FT
C   6     LS   Lutz’s spruce            PILU   Picea lutzii              0.5 FT
C   7     BE   black spruce        095  PIMA   Picea mariana             0.5 FT
C   8     SS   Sitka spruce        098  PISI   Picea sitchensis          0.5 FT
C   9     LP   lodgepole pine      108  PICO   Pinus contorta            1.0 FT
C  10     RC   western redcedar    242  THPL   Thuja plicata             0.5 FT
C  11     WH   western hemlock     263  TSHE   Tsuga heterophylla        0.5 FT
C  12     MH   mountain hemlock    264  TSME   Tsuga mertensiana         0.5 FT
C  13     OS   other softwoods     298  2TE                              0.5 FT
C  14     AD   alder species       350  ALNUS  Alnus species             1.0 FT 
C  15     RA   red alder           351  ALRU2  Alnus rubra               1.0 FT
C  16     PB   paper birch         375  BEPA   Betula papyrifera         1.0 FT
C  17     AB   Alaska birch        376  BENE4  Betula neoalaskana        1.0 FT
C  18     BA   balsam poplar       741  POBA2  Populus balsamifera       1.0 FT
C  19     AS   quaking aspen       746  POTR5  Populus tremuloides       1.0 FT
C  20     CW   black cottonwood    747  POBAT  Populus trichocarpa       1.0 FT
C  21     WI   willow species      920  SALIX  Salix species             1.0 FT
C  22     SU   Scouler’s willow    928  SASC   Salix scouleriana         1.0 FT
C  23     OH   other hardwoods     998  2TD                              1.0 FT
C----------
C  VARIABLE DECLARATIONS:
C----------
      EXTERNAL ESRANN

      LOGICAL DEBUG

      CHARACTER CBLANK*2

      CHARACTER*2 CLAST(MAXSP)
      CHARACTER*4 CPREP(4),CTOPO(5)

      INTEGER I,IACTK,IBRKUP,IDO,IDUP,IEND,IESFT,IEVTYR,II,INGRO,IPNSPE
      INTEGER IPOLD,IPYEAR,IREP,ISER,ISHADE,ISTART,ITIME,ITODO,ITP
      INTEGER ITPP,ITRNIN,ITYPEP,IZERO,J,JJ,K,KDT,L,MATCH,MYDO,MXRR
      INTEGER N,NBEST,NCOUNT,NDRAW,NEWTPP,NN,NOFSPE,NP,NSPNZ,NTIMES
      INTEGER NTODO,NUM2PK,NUMSPE,IFT

      INTEGER*4 IDCMP1,ITEMP,ITMP,ITOOMP

      INTEGER IASEP(99),IBEST(MAXSP),ICHOI(2,MAXSP),ICODE(99)
      INTEGER ILSP(MAXSP),IPLANT(MAXSP),MAXING(14),MAXSPP(14)
      INTEGER MAXTPP(14),MYACTS(4),MYHABG(16),NNPREP(4)
      INTEGER NOTE(99),JNULL(MAXSP)

      REAL BAAOLD,BACHLO,BRKUP,CRDUM,CW,DELAY,DILATE,DRAW,DUP,DUPNPT
      REAL EMSQR,ESAVE,EXPAND,FLOKDT,FLONPT,FTEMP,FTEMP2,GENTIM,HHT
      REAL PASMAX,PN,PNONE,PTREE,RADIAN,SHADE,SHORTY
      REAL SUM0,SUM1,SUM2,TBAAA,TCROP1,TCROP2,TMTIME,TPP,TRAGE,TREEHT
      REAL TTOTTP,XCSMAX,XH,XXH,ZHARV
      REAL PRD,PTA,TPAOLD,RDAOLD

      REAL AGADSB(99),AGEPL(99),AGEXC(99),AVEHT(MAXSP),BESPCT(MAXSP)
      REAL BESTPA(MAXSP),ESPROB(99),EXCESS(MAXSP),FIRST(2,MAXSP)
      REAL HEIGHT(99),HTIMLT(99),PASPCT(MAXSP),PASTPA(MAXSP),PRMS(6)
      REAL PSPE(6),STOMLT(MAXSP),SUMESP(MAXSP),SUMHTS(MAXSP)
      REAL SUMUP(MAXSP),TALL(MAXSP),TOTPCT(MAXSP),TOTTPA(MAXSP)
C----------
C  DATA STATEMENTS:
C----------
      DATA CBLANK/'  '/,
     & CPREP/'NONE','MECH','BURN','ROAD'/,
     & CTOPO/'BOTM','LOWR',' MID','UPPR','RIDG'/,
     & IDCMP1/10000000/,
     & MYACTS/430,431,491,493/,
     & NOFSPE/MAXSP/

C----------
C MAXTPP: CONTAINS TPP VALUES USED IN TALLY SEQUENCES. VALUES ARE
C BASED ON THE 90TH PERCENTILE TPP VALUES FOR EACH FOREST TYPE.
C
C MAXSPP: CONTAINS THE 75TH PERCENTILE OF NUMBER OF SPECIES THAT CAN
C OCCUR ON A STOCKED PLOT BY FOREST TYPE.
C
C MAXING: CONTAINS TPP VALUES USED IN INGROWTH PREDICTIONS. VALUES
C THE AVERAGE TPP VALUES BY FOREST TYPE.
C----------

      DATA
     &  MAXTPP/41,54,22,37,37,49,41,22,48,30,36,41,15,0/,
     &  MYHABG/4*1,4*2,3,4,6*5/,
     &  MAXSPP/2,2,3,4,4,3,4,2,3,3,3,2,2,0/,
     &  MAXING/11,14,7,14,13,14,14,6,4,9,9,11,5,0/

C----------
C STEP 1: INITIALIZE ARRAYS AND VARIABLES, AND REPLICATE PLOTS
C----------
      CALL DBCHK (DEBUG,'ESTAB',5,ICYC)
      IF(DEBUG) WRITE(JOSTND,7000) KDT,IDSDAT,NTALLY
 7000 FORMAT(/'IN ESTAB; BEGIN DEBUG.  KDT=',I5,' IDSDAT=',I5,
     >        ' NTALLY=',I2)
      ITRNIN=ITRN+1
      INGRO=0
C     ZHARV IS DATE OF DISTURBANCE, SET TO YEAR OF HARVEST      
      ZHARV=REAL(IDSDAT)
C     FLOKDT IS YEAR OF TALLY (FALL OF LAST YEAR OF CYCLE)
      FLOKDT=REAL(KDT)
C     TIME (GLOBAL) IS YEARS SINCE DISTURBANCE
      TIME=FLOKDT - ZHARV +1.0
C     FLONPT (LOCAL) IS THE NUMBER OF INVENTORY POINTS IN BASE MODEL      
      FLONPT=REAL(NPTIDS)
      SUMPRB=0.0
      ELEVSQ=ELEV*ELEV
C     ITMP IS SET TO CURRENT CYCLE*10000, I DON'T KNOW WHY YET
      ITMP=ICYC
      ITMP=ITMP*10000
C     TURN ON FULL ESTABLISHMENT MODEL (0), PLANT AND NATURAL ONLY (1)      
      MODE=0
C     IF TALLY DATE IS 20 YEARS PAST INVENTORY, SET FVS TO ADD
C     REGENERATION FROM ADVANCED COMPONENT. DO NOT LOAD SITE PREP FROM
C     INPUT DATA       
      IF(KDT+1-IY(1).GT.20) THEN
        INADV=1
        LOAD=0
      ENDIF
C     PASMAX IS SET TO THEN NUMBER OF EXCESS TREES PER SPECIES PASSED
C     TO MAIN MODEL      
      PASMAX=CONFID
      DO 40 I= 1,99
      NOTE(I)= 0
      AGADSB(I)=0.0
      AGEPL(I)=0.0
      AGEXC(I)=0.0
   40 CONTINUE
      DO 41 I=1,2
C     FIRST HAS SOME SPECIES LEVEL ATTRIBUTES SAVED IN 2X23 ARRAY        
      DO 41 N=1,NOFSPE
      FIRST(I,N)=0.1
   41 CONTINUE
C     SUMMATION OF TREES TO PASS TO MAIN MODEL
      TCROP1=0.0
      TCROP2=0.0
      TTOTTP=0.0
C     SOME SPECIES LEVEL ATTRIBUTES 
      DO 181 I=1,NOFSPE
      TOTTPA(I)=0.0
      AVEHT(I)=0.0
      SUMPX(I)=0.0
      SUMPI(I)=0.0
      BESTPA(I)=0.0
      PASTPA(I)=0.0
      IPLANT(I)=0
  181 CONTINUE

C   CALCULATE FOREST TYPE FOR TALLY SEQUENCE
C
C   IFORTP IS CURRENT STAND FOREST TYPE, FROM PLOT.F77 AND IF IT HAS
C   BECOME UNDEFINED, THE INVENTORY FOREST TYPE (IIFORTP) WILL BE USED.

      SELECT CASE (IFORTP)
        CASE (122, 125, 270, 271, 281, 301, 304, 305, 
     &        703, 901, 902, 904, 911) 
          IESFT = IFORTP
        CASE DEFAULT 
          IESFT = IIFORTP
      END SELECT

C   THIS FOREST TYPE WILL BE USED THROUGHOUT THE DURATION OF
C   THE TALLY SEQUENCE
C   SET IFT TO FOREST TYPE GROUPS 1-13
C
C   IFT USED TO SET PLOT SIZE AND DETERMINING PROBABILITIES
      SELECT CASE (IESFT)
        CASE (122)
          IFT = 1
        CASE (125)
          IFT = 2
        CASE (270)
          IFT = 3
        CASE (271)
          IFT = 4
        CASE (281)
          IFT = 5
        CASE (301)
          IFT = 6
        CASE (304)
          IFT = 7
        CASE (305)
          IFT = 8
        CASE (703)
          IFT = 9
        CASE (901)
          IFT = 10
        CASE (902)
          IFT = 11
        CASE (904)
          IFT = 12
        CASE (911)
          IFT = 13
        CASE DEFAULT 
          IFT = 14
      END SELECT

C DISPLAY IFT
      IF(DEBUG) WRITE(JOSTND,*) 'IFT DETERMINED FROM FOREST TYPE: ', IFT

C STORE IFT0 IF GOING INTO A TALLY SEQUENCE
      IF(NTALLY .EQ. 1) THEN
        IFT0 = IFT
        IF(DEBUG) WRITE(JOSTND, *) 'TALLY SEQUENCE FOREST TYPE: ', IFT0
      ENDIF

C USE IFT0 IF IN A TALLY SEQUENCE
      IF(NTALLY .LT. 99) THEN
        IFT = IFT0
        IF(DEBUG) WRITE(JOSTND, *) 'IN TALLY SEQUENCE. USING TALLY 
     &  SEQUENCE FOREST TYPE: ', IFT
      ENDIF

C     PLOT REPLICATION, MINREP SET IN ESINIT OR BY USER 
C     DUP IS THE NUMBER OF DUPLICATE REGENERATION PLOTS PER BASE
C     MODEL PLOT
      DUP=0.0
      DO 138 I=1,MINREP
      DUP=DUP+1.0
      N=NPTIDS*I
      IF(NPTIDS*(I+1).GT.MAXPLT) GO TO 139
      IF(N.GE.MINREP) GO TO 139
  138 CONTINUE
  139 CONTINUE
      IDUP = INT(DUP+0.5)
C     DUPNPT IS THE TOTAL NUMBER OF DUPLICATE PLOTS      
      DUPNPT=FLONPT*DUP
C     EXPAND IS THE INVERSE OF INVENTORY PLOT SIZE USED IN FITTING
C     ESTABLISHMENT MODEL RELATIONSHIPS. SET BY FOREST TYPE. 
C     BOREAL FOREST TYPES SET TO 1/250TH (UAF DATASET)
C     COASTAL SET TO 1/300TH (FIA DATASET)
      SELECT CASE (IFT)
        CASE (1,2,10,11)
          EXPAND = 250.
        CASE DEFAULT 
          EXPAND = 300. 
      END SELECT 
C----------
C STEP 2: INITIALIZE REGENERATION VECTORS AND CALIBRATION TASKS
C----------
C     IF NOT THE FIRST TALLY, CANCEL MECH & BURNPREP'S IN THIS CYCLE.
      IF(NTALLY.GT.1) THEN
        CALL OPFIND (2,MYACTS(3),NTODO)
        IF(NTODO.GT.0) THEN
          DO 6 ITODO=1,NTODO
          CALL OPDEL1 (ITODO)
    6     CONTINUE
        ENDIF
      ENDIF
C     DO NOT CREATE TREE RECORDS THAT WOULD ESSENTIALLY BE REDUNDANT
C     WITH THOSE IN THE INVENTORY WHEN NTALLY IS 1 AND 20 YEARS HAS
C     ELAPSED SINCE THE INVENTORY (I.E. NO CALIBRATION).
      MATCH=0
      IF(NTALLY.EQ.1.AND.KDT+1-IY(1).GT.20) MATCH=1
C     WORK WITH INGROWTH (99) OPTION - INITIALIZE PARAMETERS
      IF(NTALLY.EQ.99) THEN
C       PNONE IS THE PROPORTION OF PLOTS UNTREATED, SET TO 100%  
        PNONE=1.0
        PMECH=0.0
        PBURN=0.0
C       METH IS SITE PREP METHOD: 1=NONE,2=MECH,3=BURN,4=ROADS
        METH=0
        LOAD=0
        IALN(2)=1
        INGRO=1
        PASMAX=15.0
C       ITEMP IS A TIME ESTIMATE, SET TO 1 HERE -INGROWTH SECTION
        ITEMP = INT(((XTES/THRES1) *FINT) +0.5)
        IF(ITEMP.LT.1) ITEMP=1
        SHORTY=REAL(ITEMP)
C       DATES OF SITE PREPS
        ZHARV=REAL(KDT+1) -SHORTY
        ZMECH=ZHARV
        ZBURN=ZHARV
        NTALLY=1
        GO TO 44
      ENDIF
C     IF NOT THE FIRST TALLY, THEN SKIP SITE PREPS.
      IF(NTALLY.NE.1) GO TO 276
C     PROCESS SITE PREPARATION KEYWORDS      
      CALL ESETPR (METH,ZMECH,ZBURN,PNONE,PMECH,PBURN,IALN,
     &  IDSDAT,KDT,LOAD)
C     SET DATES OF MECH AND BURN SITE PREP TO OCCUR NOT BEFORE 
C     HARVEST DATE     
      IF(ZMECH.LT.ZHARV) ZMECH=ZHARV
      IF(ZBURN.LT.ZHARV) ZBURN=ZHARV
      IF(DEBUG) WRITE(JOSTND,7011) METH,IDSDAT,KDT,ZMECH,ZBURN,
     &  PNONE,PMECH,PBURN,(IALN(I),I=1,3)
 7011 FORMAT('AFTER ESETPR: METH=',I2,' IDSDAT=',I5,' KDT=',I5,
     &  ' ZMECH=',F7.1,' ZBURN=',F7.1,/,4X,'PNONE=',F7.4,' PMECH=',
     &  F7.4,' PBURN=',F7.4,3X,'IALN(I)=',3I5)
   44 CONTINUE
C     KDTOLD IS LAST CYCLE TALLY DATE
      KDTOLD = INT(ZHARV-0.5)
C     INITIALIZE SUMPRE(1:5) TO 0. SUMPRE IS SUMMARY COUNT OF SITE PREPS
C     1=NONE, 2=MECH, 3=BURN, 4&5=?
      DO 45 I=1,5
      SUMPRE(I)=0.0
   45 CONTINUE
C     INITIALIZE IHABT TO 0. IHABT IS SUMMARY COUNT OF HABITAT TYPES
      DO 46 I=1,16
      IHABT(I)=0
   46 CONTINUE
C     INITIALIZE VARIABLES ON ESTAB MODEL REGENERATION PLOTS
      DO 12 I=1,NPTIDS*IDUP
      ESB1(I)=0.0
      PNN(I)=0.0
      PLPROB(I)=0.0
      NSTORE(I)=0
   12 CONTINUE
      ESB=0.0
  276 CONTINUE
C     IF FIRST TALLY, SET ITEMP TO RANDOM NUMBER. ESDRAW IS REAL OF 
C     ITEMP
      IF(NTALLY.EQ.1) THEN
        CALL ESRANN (DRAW)
        ITEMP = INT(DRAW*100000.0 + 0.5)
        ESDRAW=REAL(ITEMP)
      ENDIF
      CALL ESRNSD (.TRUE.,ESDRAW)
      IF(DEBUG) WRITE(JOSTND,7014) ESDRAW
 7014 FORMAT('RANDOM NUMBER SEED=',F9.2)
C     LOAD REGENERATION VECTORS FROM CURRENT INVENTORY.
C     ONLY INCLUDE TREES LESS THAN BREAK DIAMETER (REGNBK)
C     ITRN = NUMBER OF TREE RECORDS
C     FTEMP = DIAMETER OF TREE RECORD
C     NN = SPECIES OF TREE RECORD
C     FTEMP2 = TREES PER ACRE OF TREE RECORD
C     PASTTPA = SUM OF TREES PER ACRE PER SPECIES
C     TCROP2 = SUM OF TREES PER ACRE
C     SUM0 = SUM OF TREES PER ACRE
C     N = PLOT NUMBER
C     PLPROB = STAND LEVEL TPA ESTIMATE OF PLOT REPLICATES, SUM TO GET
C              STAND TPA
      SUM0=0.0
      IF(ITRN.EQ.0) GO TO 198
      DO 177 I=1,ITRN
      FTEMP=DBH(I)
      IF(FTEMP.GE.REGNBK) GO TO 177
      NN=ISP(I)
      IF(NN.LT.1.OR.NN.GT.NOFSPE) GO TO 177
      FTEMP2=PROB(I)
      PASTPA(NN)=PASTPA(NN)+FTEMP2
      TCROP2=TCROP2 +FTEMP2
      SUM0=SUM0+FTEMP2
      N=ITRE(I)
      PLPROB(N)=PLPROB(N) +(FTEMP2/DUP)
  177 CONTINUE
  198 CONTINUE
C     CALCULATE CALIBRATION VARIABLES FOR DETERMINING
C     INTERCEPT OF ACTUAL STOCKING FROM THE INVENTORY.
C     DO NOT CALCULATE IF NOT THE FIRST TALLY OR IF PAST
C     THE INITIAL TALLY PERIOD -20 YEARS
C     TPACRE IS TREES PER ACRE OF REGENERATION (< REGNBK)
C     ESA/FTEMP IS THE PROPORTION OF INVENTORY PLOTS THAT ARE STOCKED, 
C       DETERMINED FROM THE TPA(<REGNBK) IN THE STAND. EQUATION FROM 
C       CASTLE (2019) USING COMBINED UAF AND FIA DATASETS
C     ESB IS AN INTERMEDIATE VARIABLE BASED ON ESA/FTEMP THAT IS USED 
C       IN CALIBRATION OF THE PROBABILITY OF STOCKING OF PLOTS.
      IF(INADV.EQ.1.OR.NTALLY.NE.1) GO TO 64
      TPACRE=SUM0
      IF(TPACRE.LT.1.0) TPACRE=1.0
      ESA=1.0/(1.0+EXP(3.190754 - 0.59894*ALOG(TPACRE)))
      FTEMP=ESA
      IF(FTEMP.LT.0.10) FTEMP=0.10
      IF(FTEMP.GT.0.90) FTEMP=0.90
      ESB= -1.0 * ALOG(1.0/FTEMP -1.0)
      IF(DEBUG) WRITE(JOSTND,*)'IN CALIBRATION LOGIC; TPACRE=',TPACRE,
     &' ESA=',ESA,' FTEMP=',FTEMP,'ESB=',ESB
   64 CONTINUE
C     WORK WITH SITE PREPARATION OPTIONS. EXIT = STMT 242
C     ASSIGN RANDOM NUMBER TO ESTABLISHMENT MODEL SUBPLOTS IN WK6 ARRAY  
      DO 183 I=1,IDUP*NPTIDS
      CALL ESRANN (DRAW)
      WK6(I)=DRAW
  183 CONTINUE
      IF(NTALLY.NE.1) GO TO 242
      IF(LOAD.NE.1) GO TO 249
C     IF LOAD=0, USE SITE PREP ON KEYWORDS OR INVENTORY DATA
C     IF LOAD=1, REP PLOT SITE PREPS; IF NEEDED COMPRESS ARRAY IPPREP.
      NN=0
C     LOOP ACROSS BASE MODEL PLOTS
      DO 243 I=1,NPTIDS
      NN=NN+1
      N=IPTIDS(I)
      IPPREP(NN)=IPPREP(N)
  243 CONTINUE
      IF(IDUP.LT.2) GO TO 49
C     NESTED LOOP TO SET SITE PREP BASED ON INVENTORY PLOTS     
      DO 251 I=1,IDUP
      DO 247 N=1,NPTIDS
      J=I*NPTIDS +N
      IPPREP(J)=IPPREP(N)
  247 CONTINUE
  251 CONTINUE
      GO TO 49
  249 CONTINUE
      IF(IALN(2).EQ.0.AND.IALN(3).EQ.0) GO TO 246
      SUM0=PMECH+PBURN
      IF(SUM0.LE.1.0) GO TO 248
      PMECH=PMECH/SUM0
      PBURN=PBURN/SUM0
  248 CONTINUE
      PNONE=1.0-PMECH-PBURN
      GO TO 252
  246 CONTINUE
C     USER HAS NOT SUPPLIED ANY SITE PREPARATION KEYWORDS.
C     CALL ESPREP TO GET SITE PREPARATION VALUES.
      CALL ESPREP (PNONE,PMECH,PBURN)
  252 CONTINUE
C     SECTION TO CHOOSE SITE PREPS.  SAMPLE WITHOUT REPLACEMENT.
C     SUM0 = TOTAL SITE PREP PROPORTIONS
C     SUMUP(1) = PROBABILITY OF NO SITE PREP
C     SUMUP(2) = PROBABILITY OF MECH SITE PREP
C     SUMUP(3) = PROBABILITY OF BURN SITE PREP
      SUM0=PNONE+PMECH+PBURN
      SUMUP(1)=PNONE/SUM0
      SUMUP(2)=PMECH/SUM0
      SUMUP(3)=PBURN/SUM0
      IF(DEBUG) WRITE(JOSTND,7051) (SUMUP(I),I=1,3)
 7051 FORMAT('PNONE=',F8.4,'  PMECH=',F8.4,'  PBURN=',F8.4)
C     TRIPLE NESTED DO LOOP TO ASSIGN SITE PREP TO INDIVIDUAL
C     REGENERATION PLOTS.  
      N=0    
      DO 10 II=1,IDUP
      DO 9 NN=1,NPTIDS
      N=N+1
      DRAW=WK6(N)
      DRAW=DRAW* (((DUPNPT+1.0)-REAL(N))/DUPNPT)
      SUM0=0.0
      DO 2 I=1,2
      SUM0=SUM0+SUMUP(I)
      IF(DRAW.GT.SUM0) GO TO 2
      GO TO 8
    2 CONTINUE
      I=3
      IF(SUMUP(3).LT.0.0) I=1
    8 CONTINUE
      IPPREP(N)=I
      SUMUP(I)=SUMUP(I)-(1.0/DUPNPT)
      IF(SUMUP(I).LT.0.0) SUMUP(I)=0.0
    9 CONTINUE
   10 CONTINUE
   49 CONTINUE
  242 CONTINUE
C     GET THE PLANT & NATURAL KEYWORDS READY TO ACCESS
      CALL OPFIND (2,MYACTS,NTODO)
      IF(DEBUG) WRITE (JOSTND,'(''# OF PLANT & NATURAL='',I4)') NTODO
      IF(NTODO.GT.0) MODE=1
C  IF NUMBER TO ESTABLISH IS NEAR ZERO, THEN MARK KEYWORD FOR DELETION.
C  IF THIS WAS THE ONLY ACTIVITY FOUND, SET MODE FLAG TO 0.
C  GED 10-23-97
      MYDO=NTODO
      DO 244 IZERO=1,NTODO
      CALL OPGET (IZERO,6,IPYEAR,IACTK,NP,PRMS)
      IF(PRMS(2).LE.0.001 .OR. PRMS(3).LE. 0.001) THEN
        CALL OPDEL1(IZERO)
        MYDO=MYDO-1
      ENDIF
  244 CONTINUE
      IF(MYDO .EQ. 0) MODE=0
C     ACCUMULATE SUMS FOR CALCULATION OF SHADE ADJUSTMENTS
      SUM1=0.
      SUM2=0.
      DO 245 NN=1,NPTIDS
      NNID=IPTIDS(NN)
      TBAAA=BAAA(NNID)
      IF(TBAAA .LT. 1.)TBAAA=1.
      SUM1=SUM1+TBAAA
  245 CONTINUE
      DO 2451 NN=1,NPTIDS
      NNID=IPTIDS(NN)
      TBAAA=BAAA(NNID)
      IF(TBAAA .LT. 1.)TBAAA=1.
      SUM2=SUM2+SUM1/TBAAA
      IF(DEBUG)
     &WRITE(JOSTND,*)'NNID,BAAA,TBAAA,SUM1,SUM2= ',
     &NNID,BAAA(NNID),TBAAA,SUM1,SUM2
 2451 CONTINUE
      IF(DEBUG)WRITE(JOSTND,*)'SUM1,SUM2= ',SUM1,SUM2
C---------------------------------------------------------------------
C     BEGIN PROCESSING OF PLOTS                             HERE WE GO
C     TRIPLE DO-LOOP TO DETERMINE REGENERATION RECORDS TO ADD TO EACH 
C     INVENTORY PLOT. 
C---->LOOP ACROSS BASE MODEL INVENTORY PLOTS (DO 203  NN=1,NPTIDS),
C------>LOOP ACROSS SITE PREPARATION METHODS (DO 202 ITYPEP=1,4), 
C-------->LOOP ACROSS EACH REGENERATION PLOT (DO 201 IREP=1,NTIMES)
C---------------------------------------------------------------------
      NCOUNT=0
      GENTIM=FINT-5.0
      IF(GENTIM.LT.0.0) GENTIM=0.0
C     DO LOOP ACROSS BASE MODEL INVENTORY PLOTS
      DO 203  NN=1,NPTIDS
C     NESTED DO LOOP TO INITIALIZE NNPREP (SITE PREPS)
      DO 38 I=1,4
      NNPREP(I)=0
   38 CONTINUE
C     ISTART/IEND ARE THE START AND STOP REGENERATION PLOT NUMBER FOR 
C     EACH BASE MODEL INVENTORY PLOT 
      ISTART=NN*IDUP -IDUP+1
      IEND=NN*IDUP
C     NESTED DO LOOP TO SET SITE PREPARATION FOR EACH REGENERATION PLOT
C     N IS THE REGENERATION PLOT SITE PREPARATION METHOD
C     NNPREP IS SUM OF SITE PREPS BY SITE PREPARATION METHOD    
      DO 39 I=ISTART,IEND
      N=IPPREP(I)
      IF(N.LT.1.OR.N.GT.4) N=1
      NNPREP(N)=NNPREP(N)+1
   39 CONTINUE
C     PROCESS REPLICATED PLOTS BY EACH OF THE 4 SITE PREPS
C     NESTED DO LOOP ACROSS EACH SITE PREPARATION METHOD
      DO 202 ITYPEP=1,4
      IPOLD=0
C     IF SITE PREPARATION METHOD HAS 0 PLOTS, SKIP METHOD
      IF(NNPREP(ITYPEP).LT.1) GO TO 202
C     DOUBLE NESTED DO LOOP ACROSS EACH REGENERATION PLOT
C     NTIMES IS THE NUMBER OF REGENERATION PLOTS IN SITE PREP METHOD
C     IREP IS A SPECIFIC REGENERATION PLOT
      NTIMES=NNPREP(ITYPEP)
      DO 201 IREP=1,NTIMES
C     NCOUNT IS A COUNTER, NUMBER OF REGN PLOTS IN SITE PREP METHOD
C     IPREP IS SITE PREPARATION METHOD
      NCOUNT=NCOUNT+1
      IPREP=ITYPEP
C     BYPASS RE-SETTING OF REGENERATION PLOT VARIABLES IF IN THE SAME
C     SITE PREPARATION METHOD      
      IF(IPREP.EQ.IPOLD) GO TO 137
C     IPOLD IS SITE PREPARATION METHOD
C     NNID IS BASE MODEL PLOT ID
C     PROB1 IS A PROBABILITY WHICH IS RESET TO 1.0 EACH LOOP
C     NEED TO CHECK IF THESE VARIABLES ARE STILL NEEDED AND IF 
C     NEW ONEWS ARE NEEDED
C     RADIAN IS PLOT ASPECT IN RADIANS (DEFAULTS TO STAND)
C     SLO IS PLOT SLOPE IN PERCENT (DEFAULTS TO STAND)
C     IPHY IS PLOT PHYSIOGRAPHIC POSITION, DEFAULT IS MID-SLOPE
C     XCOSAS IS COSINE OF PLOT ASPECT
C     XSINAS IS SINE OF PLOT ASPEC
C     XCOS IS XCOSAS*SLO INTERACTION
C     XSIN IS XSINAS*SLO INTERACTION
C     BAA IS PLOT BASAL AREA >= REGNBK
C     BAASQ IS PLOT BASAL AREA SQUARED
C     BAALN IS NATURAL LOG OF PLOT BASAL AREA
C     BAAOLD IS INVENTORY PLOT BASAL AREA >= REGNBK 
C     PTA IS PLOT TREES PER ACRE >= REGNBK
C     PRD IS PLOT RELATIVE DENSITY >= REGNBK
C     TPAOLD IS INVENTORY PLOT TREES PER ACRE >= REGNBK
C     RDAOLD IS INVENTORY PLOT RELATIVE DENSITY >= REGNBK
C     IHAB IS PLOT HABITAT TYPE GROUP (16 OPTIONS)
C     ISER IS PLOT HABITAT TYPE GROUPS CODE (1-5)
      IPOLD=IPREP
      NNID=IPTIDS(NN)
      PROB1(NCOUNT)=1.0
      RADIAN=PASP(NNID)
      SLO=PSLO(NNID)
      IPHY=IPHYS(NNID)
      XCOSAS=COS(RADIAN)
      XSINAS=SIN(RADIAN)
      XCOS=XCOSAS*SLO
      XSIN=XSINAS*SLO
      BAA=BAAA(NNID)
      IF(BAA.LT.1.0) BAA=1.0
      IF(BAA.GT.400.0) BAA=400.0
      BAASQ=BAA*BAA
      BAALN=ALOG(BAA)
      BAAOLD=BAAINV(NNID)
      PTA=PTPAA(NNID)
      PRD=PRDA(NNID)
      TPAOLD=TPAAINV(NNID)
      RDAOLD=RDAINV(NNID)
      IF(BAAOLD.LT.1.0) BAAOLD=1.0
      IF(BAAOLD.GT.400.0) BAAOLD=400.0
      IHAB=IPHAB(NNID)
      ISER=MYHABG(IHAB)
      IF(DEBUG) WRITE(JOSTND, *) ' PLOT VARIABLE DEBUG',' SLO',SLO,
     &' ASPECT',RADIAN,' TPA',PTA,' RD',PRD,' TPAOLD',TPAOLD,' RDAOLD',
     & RDAOLD
      IF(DEBUG) THEN
        WRITE(JOSTND,6033) NNID,NOFSPE,IPREP,NTALLY,ISER,IFT,
     &  SLO,BAA,ELEV,ASPECT
 6033   FORMAT(/,72('='),/,'PLOT=',I4,'  NOFSPE=',I4,'  IPREP=',I3,
     &  '  NTALLY=',I3,'  ISER=',I3,/,'IFT=',I3,
     &  '  SLO=',F5.2,'  BAA=',F7.2,'  ELEV=',F6.1,'  ASPECT=',F7.3)
        WRITE(JOSTND,*) 'OCURFT = ',(OCURFT(I,IFT),I=1,NOFSPE)        
        WRITE(JOSTND,*) 'XESMLT = ',(XESMLT(I),I=1,NOFSPE)
      ENDIF
      IF(STOADJ.LT.0.0001) GO TO 137
C     CALCULATE P(STOCKING) AT INVENTORY OR HARVEST, WHICHEVER CAME
C     LAST. IF ADVANCE COMPONENT OF THE INVENTORY IS INVALID (INADV=1)
C     OR THIS IS NOT THE FIRST TALLY OF REGEN, BYPASS PROCEDURES TO
C     CORRECT ACTUAL (INVENTORY) VS. PREDICTED (MODEL) INTERCEPT.
C     FTEMP IS YEAR OF INVENTORY
C     TIME IS TIME SINCE SITE PREP
C     IEVTYR IS INTEGER OF YEAR OF SITE PREP
      IF(INADV.EQ.1.OR.NTALLY.NE.1) GO TO 241
      FTEMP=REAL(IY(1))
      IF(FTEMP.LT.ZHARV) FTEMP=ZHARV
      IF (IPREP.EQ.2) THEN
         TIME= FTEMP -ZMECH
         IEVTYR=INT(ZMECH)
      ELSEIF (IPREP.EQ.3) THEN
         TIME= FTEMP -ZBURN
         IEVTYR=INT(ZBURN)
      ELSE
         TIME= FTEMP  -ZHARV
         IEVTYR=IDSDAT
      ENDIF
      IF (TIME.LT.0.0) TIME=0.0
C     DEFINE WSBW VARIABLES AT TIME OF INVENTORY OR HARVEST.
C     ITEMP IS # YEARS FROM LAST DISTURBANCE TO INVENTORY.
      ITIME = INT(TIME+0.5)
      IF(DEBUG) WRITE (JOSTND,7010) TIME,IEVTYR
 7010 FORMAT('TIME=',F7.1,'; IEVTYR=',I5)
      CALL ESTIME (IEVTYR,KDT)
      IF(DEBUG) WRITE (JOSTND,7020) BWB4,BWAF,REGT,SQREGT,SQBWAF
 7020 FORMAT('BWB4=',F7.3,'  BWAF=',F7.3,'  REGT=',F7.3,'  SQREGT=',
     &  F7.3,'  SQBWAF=',F7.3)
C     CALL ESTOCK TO COMPUTE PROBABILITY OF STOCKING 
C     FOR INITIAL INVENTORY
C     ESTOCK NEEDS:
C       TLAT = STAND LATTITUDE, IN PLOT.F77
C       ELEV = STAND ELEVATION IN 100S OF FEET, IN PLOT.F77
C       IFT = FOREST TYPE GROUP (1-14)
C       RDAOLD = PLOT RELATIVE DENSITY >= REGNBK, (SDIZ/SDIMAX)
C       TPAOLD = PLOT TPA >= REGNBK
C     PN/ESB1 IS AN INTERMEDIATE VARIABLE USED IN DETERMINING THE  
C       PROBABILITY OF STOCKING OF PLOTS
C     FTEMP IS THE PREDICTED PROPORTION OF INVENTORY PLOTS THAT 
C       ARE STOCKED 
      CALL ESTOCK (ELEV,IFT,BAAOLD,TPAOLD,PN)
      ESB1(NCOUNT)=PN
      IF(DEBUG) WRITE (JOSTND,6031) PN
 6031 FORMAT('PN FOR STOCKING= ',F10.4)
      FTEMP=EXP(PN)/(1+EXP(PN))
C     ITPP IS INVENTORY TREES PER PLOT 
      ITPP = INT((PLPROB(NNID)*DUPNPT)/(FTEMP*EXPAND) +0.5)
      IF(DEBUG) WRITE(JOSTND,7021) ITPP
 7021 FORMAT('CALCULATION OF ITPP AT INVENTORY=',I10)
C     NSTORE IS PREDICTED INVENTORY TREES PER PLOT, EXPANDED ACROSS 
C     EACH SITE PREP PLOT (NTIMES)
C     PNN IS INVENTORY PROBABILITY OF STOCKING
      NSTORE(NCOUNT)=ITPP
      PNN(NCOUNT)=ESA
      IF(NTIMES.GT.1) THEN
        DO 31 I=1,NTIMES-1
        NSTORE(NCOUNT+I)=ITPP
        PNN(NCOUNT+I)=ESA
   31   CONTINUE
      ENDIF
  241 CONTINUE
C----------
C STEP 3: COMPUTE YEARS SINCE LAST DISTURBANCE
C----------
C     TIME IS FROM SITE PREP TO END OF CYCLE
      IF (IPREP.EQ.2) THEN
         IEVTYR=INT(ZMECH)
         TIME=FLOKDT +1.0 -ZMECH
      ELSEIF (IPREP.EQ.3) THEN
         IEVTYR=INT(ZBURN)
         TIME=FLOKDT +1.0 -ZBURN
      ELSE
         IEVTYR=IDSDAT
         TIME=FLOKDT +1.0 -ZHARV
      ENDIF
      IF(DEBUG) WRITE (JOSTND,7010) TIME,IEVTYR
      CALL ESTIME (IEVTYR,KDT)
      IF (DEBUG) WRITE (JOSTND,7020) BWB4,BWAF,REGT,SQREGT,SQBWAF
C----------
C STEP 4: CALCULATE INCREMENT IN STOCKING AND SPECIES PROBABILITIES
C----------
C     CALCULATE P(STOCKING) AT THE END OF THE CYCLE
      CALL ESTOCK (ELEV,IFT,BAA,PTA,PN)
      IF(DEBUG) WRITE (JOSTND,6031) PN
C     CORRECT FOR ACTUAL VS. PREDICTED REGENERATION. ESB IS FROM THE
C     INVENTORY. ESB1 IS PREDICTED AT INVENTORY. THEIR DIFFERENCE IS 
C     USED TO ADJUST PROBABILITY OF STOCKING, ULTIMATELY PROB1(PLOT)
      IF(STOADJ.LT.0.001) STOADJ=0.001
      FTEMP= 1.0/(1.0+EXP(-(PN+ESB-ESB1(NCOUNT) )))
      FTEMP= FTEMP *STOADJ
      IF(DEBUG) WRITE (JOSTND,*) ' FTEMP AFTER STOADJ', FTEMP, 
     & ' STOADJ', STOADJ
      IF(FTEMP.LT.0.0001) FTEMP=0.0001
      IF(FTEMP.GT.0.9990) FTEMP=0.9990
      IF(FTEMP.LT.PNN(NCOUNT)) FTEMP=PNN(NCOUNT) +0.0001
      IF(DEBUG) WRITE (JOSTND,*) ' FTEMP AFTER ADJUSTMENTS', FTEMP
      PROB1(NCOUNT)=FTEMP
      IF(DEBUG) WRITE (JOSTND,6028) ESB,ESB1(NCOUNT),TPACRE,FTEMP
 6028 FORMAT('ESB(ACT)=',F7.4,'  ESB1(PRED)=',F7.4,'  TPACRE=',F7.1,
     &  '      PROB1=',F7.4)
      IF(INGRO.EQ.1.OR.MATCH.EQ.1) THEN
        ITPP = INT((PLPROB(NNID)*DUPNPT)/(FTEMP*EXPAND) +0.5)
        NSTORE(NCOUNT)=ITPP
      ENDIF
      IF(NTIMES.GT.1) THEN
        DO 30 I=1,NTIMES-1
        PROB1(NCOUNT+I)=FTEMP
        ESB1(NCOUNT+I)=ESB1(NCOUNT)
        IF(INGRO.EQ.1.OR.MATCH.EQ.1) NSTORE(NCOUNT+I)=ITPP
   30   CONTINUE
      ENDIF
C     STATEMENT 137 IS USED WHEN BYPASSING PLOT REPS
  137 CONTINUE
C     CALCULATE PROB OF ADV, SUBS, AND EXCESS SPECIES AT 10 YEARS.
      TIME=10.0
      IF(INGRO.EQ.1) TIME=SHORTY
      ITIME = INT(TIME+0.5)
      CALL ESTIME (IDSDAT,(IDSDAT+ITIME))
C     INITIALIZE PROBABILITY OF ADVANCED (PADV), SUBSEQUENT(PSUB), AND
C     EXCESS (PXCS) REGENERATION BY SPECIES
      DO 115 I=1,NOFSPE
      PADV(I)=0.0
      PSUB(I)=0.0
      PXCS(I)=0.0
  115 CONTINUE
      CALL ESPADV (IFT)
      IF(ITIME.GT.2) CALL ESPSUB (IFT)
      CALL ESPXCS (IFT)
      IF(DEBUG) THEN
        WRITE(JOSTND,7010) TIME
        WRITE(JOSTND,7020) BWB4,BWAF,REGT,SQREGT,SQBWAF
        WRITE(JOSTND,7002) (PADV(I),I=1,NOFSPE)
 7002   FORMAT('PADV=',23F6.3)
        WRITE(JOSTND,7003) (PSUB(I),I=1,NOFSPE)
 7003   FORMAT('PSUB=',23F6.3)
        WRITE(JOSTND,7005) (PXCS(I),I=1,NOFSPE)
 7005   FORMAT('PXCS=',23F6.3)
      ENDIF
C     RESET TIME TO YEARS SINCE DISTURBANCE OR SITE PREP.
      IF (IPREP.EQ.2) THEN
         IEVTYR=INT(ZMECH)
         TIME=FLOKDT +1.0 -ZMECH
      ELSEIF (IPREP.EQ.3) THEN
         IEVTYR=INT(ZBURN)
         TIME=FLOKDT +1.0 -ZBURN
      ELSE
         IEVTYR=IDSDAT
         TIME=FLOKDT + 1.0 - ZHARV
      ENDIF
      IF(DEBUG) WRITE (JOSTND,7010) TIME,IEVTYR
      CALL ESTIME (IEVTYR,KDT)
      IF(DEBUG) WRITE (JOSTND,7020) BWB4,BWAF,REGT,SQREGT,SQBWAF
C     ASSIGN A RANDOM NUMBER TO EMSQR TO BE USED LATER IN ASSIGNING
C     RANDOM VARIATION TO TREES ON DIFFERENT PLOTS
      CALL ESRANN (DRAW)
      EMSQR=1.0
      IF(DRAW.LT.0.5) EMSQR= -1.0
      CALL ESRANN (DRAW)
      EMSQR=EMSQR*DRAW
      IF(DEBUG) WRITE (JOSTND,7015) EMSQR
 7015 FORMAT('EMSQR=',F10.3)
C     IF STOCK ADJUSTEMENT IS SET TO 0, CALL RANDOM NUMBER DRAWS TO KEEP
C     RANDOM VARIATION APPLIED TO PLANTED TREES THE SAME.
      IF(STOADJ.LT.0.0001) THEN
        CALL ESRANN (DRAW)
        DO 71 I=1,6
        CALL ESRANN (DRAW)
   71   CONTINUE
        DO 72 I=1,6
        CALL ESRANN (DRAW)
   72   CONTINUE
        DO 73 I=1,NOFSPE
        CALL ESRANN (DRAW)
   73   CONTINUE
        DO 74 I=1,NOFSPE*2
        CALL ESRANN (DRAW)
   74   CONTINUE
        DO 75 I=1,MAXTPP(IFT)*2
        CALL ESRANN (DRAW)
   75   CONTINUE
        GO TO 163
      ENDIF
C----------
C STEP 5: ESTIMATE THE NUMBER OF NATURAL REGENERATING TREES PER PLOT
C----------
      CALL ESRANN (DRAW)
      IF(NTALLY.EQ.1) XSTORE(NCOUNT)=DRAW
      DRAW=XSTORE(NCOUNT)
      IF(DEBUG) WRITE (JOSTND,*)' DRAW FOR TPP', ' DRAW=', DRAW
      CALL ESTPP (DRAW,IFT,TPP)
      ITPP = INT(TPP + 0.5)
      IF(ITPP.LT.1) ITPP=1
C     CHECK ITPP AGAINST ALLOWED FOREST TYPE MAXIMUMS
      IF(ITPP.GT.MAXTPP(IFT)) ITPP=MAXTPP(IFT)
C     CHECK ITPP AGAINST ALLOWED INGROWTH FOREST TYPE MAXIMUMS
      IF(INGRO.EQ.1.AND.ITPP.GT.MAXING(IFT)) ITPP=MAXING(IFT)
      IF(DEBUG) WRITE (JOSTND,*)' MAXTPP DEBUG', ' ITPP=', ITPP,
     & ' NSTORE=', NSTORE(NCOUNT), ' INGRO=', INGRO
      NEWTPP=ITPP-NSTORE(NCOUNT)
      IF(NEWTPP.LT.0) NEWTPP=0
C     NSTORE TRACKS THE TREES TO ESTABLISH BY PLOT
      NSTORE(NCOUNT)=ITPP
      TPP=REAL(ITPP)
      IF(DEBUG) WRITE (JOSTND,7009) ITPP,NEWTPP,PLPROB(NNID)
 7009 FORMAT('TREES/PLOT=',I5,'  NEW TREES/PLOT=',I5,'  PLPROB=',F8.3)
C----------
C STEP 6: ESTIMATE THE NUMBER OF NATURAL REGENERATING SPECIES PER PLOT
C----------
      IF(DEBUG) WRITE (JOSTND,7010) TIME
C     PSPE IS THE PROPORTION OF PLOTS HAVING 1-6 SPECIES.
      DO 15 I=1,6
      PSPE(I)=0.0
      CALL ESRANN (DRAW)
      WK6(I)=DRAW
   15 CONTINUE
      NUMSPE=1
      IF(ITPP.EQ.1) GO TO 19
      CALL ESNSPE (IFT,PSPE,ITPP)
C     ADJUST SO SUM OF PROBABILITIES EQUAL 1.0 FOR USE WITH 
C     RANDOM NUMBER DRAW
C     SUM0 IS THE SUM OF THE SPECIES PROPORTIONS
C     SUMUP IS SPECIES PROPORTIONS ON A 0-1 SCALE
C     NUMSPE IS THE NUMBER OF SPECIES CHOSEN ON PLOT
      SUM0=PSPE(1)
      DO 16 I=2,6
      SUM0=SUM0+PSPE(I)
   16 CONTINUE
      SUMUP(1)=PSPE(1)/SUM0
      DO 17 I=2,5
      SUMUP(I)= SUMUP(I-1) + PSPE(I)/SUM0
   17 CONTINUE
      DO 18 I=1,5
      DRAW=WK6(I)
      IF(DRAW.GT.SUMUP(I)) GO TO 18
      NUMSPE=I
      GO TO 19
   18 CONTINUE
      NUMSPE=6
   19 CONTINUE
C     CHECK NUMSPE AGAINST ALLOWED FOREST TYPE MAXIMUMS   
      IF(NUMSPE.GT.MAXSPP(IFT)) NUMSPE=MAXSPP(IFT)
      IF(DEBUG) WRITE (JOSTND,7001) (PSPE(I),I=1,6),NUMSPE
 7001 FORMAT('P(1-6 SPECIES)',6F6.3,'; #SPECIES CHOSEN=',I3)
C     COMPARE NUMBER OF SPECIES TO NUMBER OF SPECIES WITH PROBABILITES
C     OF OCCURANCE OF ADVANCED (PADV) AND SUBSEQUENT (PSUB) 
C     REGENERATION (NSPNZ). IF NSPNZ LESS THAN NUMSPE, USE NSPNZ
      SUM0=0.0
      NSPNZ=0
      DO 56 I=1,NOFSPE
      IBEST(I)=0
      FTEMP=PADV(I)+PSUB(I)
      IF(FTEMP.GT.0.0001) NSPNZ=NSPNZ+1
      SUM0=SUM0+FTEMP
      SUMUP(I)=FTEMP
   56 CONTINUE
      DO 57 I=1,NOFSPE
      IF(SUM0.LT.0.0001)GO TO 57
      SUMUP(I)=SUMUP(I)/SUM0
   57 CONTINUE
      IF(DEBUG) WRITE (JOSTND,7003) (SUMUP(I),I=1,NOFSPE)
      IF(NUMSPE.GT.NSPNZ) NUMSPE=NSPNZ
C----------
C STEP 7: PICKING WHICH SPECIES WILL OCCUPY THE PLOT
C----------
      DO 120 I=1,6
      CALL ESRANN (DRAW)
C     WK6 IS A RANDOM NUMBER DRAW FOR EACH OF SIX POSSIBLE SPECIES
      WK6(I)=DRAW
  120 CONTINUE
C     60 lOOP IDENTIFIES BEST SPECIES FOR EACH PREDICTED SPECIES
      DO 60 I=1,NUMSPE
      SUM0=0.0
      DRAW=WK6(I)
      DO 59 J=1,NOFSPE-1
      SUM0=SUM0+SUMUP(J)
      IF(DRAW.GT.SUM0) GO TO 59
      SUMUP(J)=0.0
C     IBEST(J) IS ARRAY FLAG SETTING SPECIES OF BEST TREE = 1
      IBEST(J)=1
      GO TO 58
   59 CONTINUE
      IBEST(NOFSPE)=1
      SUMUP(NOFSPE)=0.0
   58 CONTINUE
      SUM0=0.0
      DO 47 N=1,NOFSPE
      SUM0=SUM0+SUMUP(N)
   47 CONTINUE
      IF(SUM0.LT.0.0001) GO TO 60
      DO 61 N=1,NOFSPE
C     SUMUP IS THE PROBABLITY OF ADV/SUB BY SPECIES
      SUMUP(N)=SUMUP(N)/SUM0
   61 CONTINUE
   60 CONTINUE
      IF(DEBUG) WRITE (JOSTND,7004) (IBEST(I),I=1,NOFSPE)
 7004 FORMAT('ARRAY IBEST ',23I5)
C     DETERMINE ADV/SUBS STATUS OF THE FIRST TREE OF EACH SPECIES.
      DO 53 I=1,NOFSPE
      PADV(I)=0.0
      PSUB(I)=0.0
   53 CONTINUE
      IF(NTALLY.EQ.1) CALL ESPADV (IFT)
      CALL ESPSUB (IFT)
      DO 62 I=1,2
      DO 62 N=1,NOFSPE
C     ICHOI IS A SPECIES ARRAY WHERE I1,2 =0, THEN IF BEST TREE
C     AND RANDOM DRAW IS GREATER THAN PADV+PSUB ICHOI(2)=1, ELSE
C     ICHOI(1)=1. IF 1, THEN BEST TREE. ICHOI(1) IS ADV, ICHOI(2) 
C     IS SUB.
      ICHOI(I,N)=0
   62 CONTINUE
      DO 63 I=1,NOFSPE
      CALL ESRANN (DRAW)
      IF(IBEST(I).NE.1) GO TO 63
      SUM0=PADV(I)+PSUB(I)
      IF(SUM0.LT.0.0001)GO TO 63
      FTEMP=PADV(I)/SUM0
      J=1
      IF(DRAW.GT.FTEMP) J=2
      ICHOI(J,I)=1
   63 CONTINUE
C----------
C STEP 8: ESTIMATE HEIGHTS OF BEST (TALLEST) TREES
C----------
      TIME=FLOKDT-REAL(KDTOLD)
      IEVTYR=KDTOLD+1
      IF(DEBUG) WRITE (JOSTND,7010) TIME,IEVTYR
C     CALL ESTIME TO COMPUTE BUDWORM TIME VARIABLES
      CALL ESTIME (IEVTYR,KDT)
      IF(DEBUG) WRITE (JOSTND,7020) BWB4,BWAF,REGT,SQREGT,SQBWAF
C     DO TWO RANDOM NUMBER DRAWS PER SPECIES
      DO 122 I=1,NOFSPE*2
      CALL ESRANN (DRAW)
      WK6(I)=DRAW
  122 CONTINUE
      NDRAW=0
C     DO LOOP ACROSS ALL SPECIES TO PREDICT HEIGHT OF BEST TREES.
      DO 99 I=1,NOFSPE
      NDRAW=NDRAW+1
      TALL(I)=0.001
      STOMLT(I)=1.0
C     IF NOT ADVANCED THEN GO TO 95
      IF(ICHOI(1,I).NE.1) GO TO 95
      DRAW=WK6(NDRAW)
C     GET GERMINATION DELAY TIME 1-10 YEARS
      CALL ESDLAY (I,1,DRAW,DELAY)
C     DILATE IS SET TO 0.1
      DILATE=FIRST(1,I)
      TRAGE=0.0
C     ESADVH CALCULATES HEIGHT OF BEST TREE (HHT)
      CALL ESADVH (I,HHT,DELAY,GENTIM,TRAGE)
      IF(DEBUG) WRITE (JOSTND,7007) DELAY,I,GENTIM,TRAGE
 7007 FORMAT('DELAY TO GERM=',F10.4,'  SPECIES=',I5,
     &  '  GENTIM=',F5.2,'  TRAGE=',F5.1)
      TALL(I)=HHT
      AGADSB(I)=TRAGE
      FTEMP=TRAGE
      IF(FTEMP.GT.GENTIM) FTEMP=GENTIM
      STOMLT(I)=FTEMP/(GENTIM+0.0001)
      FIRST(1,I)=SQRT(DILATE)
   95 CONTINUE
C     IF NOT SUBSEQUENT THEN GO TO 99
      IF(ICHOI(2,I).NE.1) GO TO 99
      NDRAW=NDRAW+1
      DRAW=WK6(NDRAW)
C     GET GERMINATION DELAY TIME 1-10 YEARS
      CALL ESDLAY (I,2,DRAW,DELAY)
C     DILATE IS SET TO 0.1
      DILATE=FIRST(2,I)
      TRAGE=0.0
      CALL ESSUBH (I,HHT,DELAY,GENTIM,TRAGE)
      IF(DEBUG) WRITE (JOSTND,7007) DELAY,I,GENTIM,TRAGE
      TALL(I)=HHT
      AGADSB(I)=TRAGE
      FTEMP=TRAGE
      IF(FTEMP.GT.GENTIM) FTEMP=GENTIM
      STOMLT(I)=FTEMP/(GENTIM+0.0001)
      FIRST(2,I)=SQRT(DILATE)
   99 CONTINUE
C     LOOP ACROSS SPECIES TO ADJUST HEIGHTS OF BEST TREES
C     TALL IS HEIGHT OF BEST TREE BY SPECIES
      DO 114 I=1,NOFSPE
      IF(IBEST(I).NE.1) GO TO 114
      TALL(I)=TALL(I)+HTADJ(I)
      IF(TALL(I)-XMIN(I).LT.0.2) TALL(I)=XMIN(I)+0.2
      IF(TALL(I).GT.HHTMAX(I)) TALL(I)=HHTMAX(I)
  114 CONTINUE
      IF(DEBUG) WRITE (JOSTND,7008) (TALL(I),I=1,NOFSPE),(HTADJ(I),
     &  I=1,NOFSPE),(ICHOI(1,I),I=1,NOFSPE),(ICHOI(2,I),I=1,NOFSPE),
     &  (STOMLT(I),I=1,NOFSPE)
 7008 FORMAT('TALLEST TREE',T15,23F5.2,/,'ARRAY HTADJ',T15,23F5.2,
     &  /,'ICHOI (ADV)',T15,23I5,/,'       (SUB)',T15,23I5,
     &  /,'ARRAY STOMLT',T15,23F5.2)
C     MAKE SURE THERE IS A PROB FOR EXCESS TREES IF THERE IS A BEST
C     TREE OF THE SAME SPECIES ON THE PLOT.
      DO 141 I=1,NOFSPE
      WK6(I)=PXCS(I) *REAL(IBEST(I))
      IF(IBEST(I).NE.1) GO TO 141
      IF(WK6(I).LT.0.0001) WK6(I)=0.0001
  141 CONTINUE
      SUM0=0.0
      DO 140 I=1,NOFSPE
      SUM0=SUM0+WK6(I)
  140 CONTINUE
C     DETERMINE HOW TO CALCULATE SUMUP(I) VALUES
C     IF SUM0 IS ZERO, THEN NO BEST TREES WERE IDENTIFIED AND ALL SUMUP VALUES
C     SHOULD BE ASSIGNEDA VALUE OF ZERO.
      IF(SUM0 .LE. 0.0) THEN
        DO I=1, NOFSPE
          SUMUP(I) = 0.0
        ENDDO
      ELSE
        SUMUP(1)= WK6(1)/SUM0
        DO 142 I=2,NOFSPE-1
          SUMUP(I) = SUMUP(I-1) + WK6(I)/SUM0
  142   CONTINUE
      ENDIF
      IF(DEBUG) WRITE (JOSTND,7005) (SUMUP(I),I=1,NOFSPE)
      ITP=ITPP
      J=ITPP+NOFSPE
      DO 144 I=1,J
      NOTE(I)=0
      ICODE(I)=0
      IASEP(I)=0
      HEIGHT(I)=0.0
      ESPROB(I)=0.0
      HTIMLT(I)=1.0
  144 CONTINUE
C     ASSIGN SPECIES & HEIGHT TO FIRST TREE OF EACH SPECIES
      N=0
      DO 146 I=1,NOFSPE
      JNULL(I)=0
      ILSP(I)=0
      IF(IBEST(I).EQ.0) GO TO 146
      N=N+1
      ICODE(N)=I
      IASEP(N)=2
      IF(ICHOI(1,I).EQ.1) IASEP(N)=1
      HEIGHT(N)=TALL(I)
      HTIMLT(N)=STOMLT(I)
  146 CONTINUE
C     ASSIGN SPECIES AND HEIGHTS TO 'EXCESS' TREES.  HTS MUST BE
C     BETWEEN THE MINIMUM ESTABLISHMENT HEIGHT FOR THAT SPECIES AND
C     THE TALLEST TREE OF THE SAME SPECIES.  EXIT=STMT 156
      DO 123 I=1,MAXTPP(IFT)*2
      CALL ESRANN (DRAW)
      WK6(I)=DRAW
  123 CONTINUE
      NDRAW=0
      ITEMP=NUMSPE+1
      IF(ITEMP.GT.ITPP) GO TO 158
      DO 156 N=ITEMP,ITPP
      NDRAW=NDRAW+1
      DRAW=WK6(NDRAW)
      DO 148 I=1,NOFSPE-1
      IF(DRAW.GT.SUMUP(I)) GO TO 148
      II=I
      GO TO 150
  148 CONTINUE
      II=NOFSPE
  150 CONTINUE
      ICODE(N)=II
      IASEP(N)=3
      NDRAW=NDRAW+1
      DRAW=WK6(NDRAW)
      FTEMP=FLOKDT-REAL(KDTOLD)
      CALL ESXCSH (FTEMP,II,HHT)
      HEIGHT(N)= HHT+HTADJ(II)
      AGEXC(N)=FTEMP-DELAY-GENTIM
      IF(HEIGHT(N).LT.XMIN(II)) HEIGHT(N)=XMIN(II)
      IF(HEIGHT(N).GT.HHTMAX(II)) HEIGHT(N)=HHTMAX(II)
      HTIMLT(N)=STOMLT(I)
  156 CONTINUE
  158 CONTINUE
      FTEMP=PROB1(NCOUNT)
      FTEMP2=REAL(NEWTPP)/REAL(ITPP)
      ITEMP=ITPP-NEWTPP
      IF(DEBUG) WRITE(JOSTND,*) ' FTEMP DEBUG',' FTEMP', FTEMP,
     & ' FTEMP2', FTEMP2, ' NEWTPP', NEWTPP, ' ITPP', ITPP,' ITEMP',
     & ITEMP
      DO 55 I=1,ITPP
      ESPROB(I)=FTEMP
      IF(I.LT.ITEMP+1) ESPROB(I)=FTEMP-PNN(NCOUNT)
      IF(INGRO.EQ.1.OR.MATCH.EQ.1) ESPROB(I)=FTEMP*FTEMP2
      IF(ESPROB(I).LT.0.0001) ESPROB(I)=0.0001
      IF(DEBUG) WRITE(JOSTND,*) ' PNN(NCOUNT)=', PNN(NCOUNT),
     & 'ESPROB', ESPROB(I)
   55 CONTINUE
      PNN(NCOUNT)=FTEMP
C     STATEMENT 163 IS USED WHEN STOADJ .LE. 0.0
  163 CONTINUE
      IF(STOADJ.LT.0.0001) THEN
        ITPP=0
        TPP=0.0
        NEWTPP=0
      ENDIF
C----------
C STEP 9: ADD PLANTED TREES FROM PLANT AND NATURAL KEYWORDS, EXIT=STMT 321
C----------
      CALL ESRANN (DRAW)
      ITEMP = INT(DRAW*100000.0 + 0.5)
      ESAVE=REAL(ITEMP)
      IF(MODE.NE.1) GO TO 321
      ITODO=0
      CALL OPFIND (2,MYACTS,NTODO)
      IF(DEBUG) WRITE (JOSTND,'(''# PLANT & NATURAL 322='',I4)') NTODO
      ITOOMP=0
      DO 322 IDO=1,NTODO
      CALL OPGET (IDO,6,IPYEAR,IACTK,NP,PRMS)
      IF(IACTK .LE. 0) GO TO 322
      ITODO=ITODO+1
      IF (ITPP+ITODO.GT.99) THEN
         ITOOMP=ITOOMP+1
         CALL OPDEL1(IDO)
         ITODO=ITODO-1
         GO TO 322
      ENDIF
C     SET PLANTING/NATURAL SPECIFICATIONS FROM KEYWORDS
C     IPNSPE IS SPECIES
C     PTREE IS THE NUMBER OF TREES TO PLANT
C     TRAGE IS TREE AGE
C     TREEHT IS HEIGHT OF REGEN 5 YEARS FROM PLANTING OR END OF CYCLE
C     ISHADE/SHADE IS SHADE CODE 
C     FTEMP IS PLOT BASAL AREA     
      IPNSPE=INT(PRMS(1))
      PTREE=(PRMS(2)*(PRMS(3)/100.0)) /DUPNPT
      TRAGE=PRMS(4)
      IF(TRAGE.LT.0.5) TRAGE=2.0
      IF(TRAGE.GT.10.0) TRAGE=10.0
      AGEPL(ITODO)=TRAGE
      DELAY=REAL(IPYEAR) -(KDT+1-FINT)
      TREEHT=PRMS(5)
      ISHADE=INT(PRMS(6))
      SHADE=0.0
      IF(ISHADE.EQ.1) SHADE=1.0
      IF(ISHADE.EQ.2) SHADE=-1.0
      FTEMP=BAA
      IF(FTEMP.LT.1.0) FTEMP=1.0
      IF(DEBUG) WRITE(JOSTND,7048) PTREE,SHADE,FTEMP,DUPNPT,BA,TRAGE
 7048 FORMAT('PTREE=',F6.1,'  SHADE=',F4.1,'  FTEMP=',F6.1,
     &  '  DUPNPT=',F4.1,'  BA=',F6.1,'  TRAGE=',F4.1)
C     THE ORIGINAL SHADE CODE ADJUSTMENT WAS NOT HAVING MUCH EFFECT.
C     REPLACED BY A STRAIGHT RATIO OF BA ON THE PLOT BY DIXON 5/22/08
C     NOTE CHANGED SETTING OF FTEMP, AND ACCUMULATIONS OF SUMS, ABOVE
      IF(ISHADE.EQ.1)THEN
        PTREE=PTREE*NPTIDS*FTEMP/SUM1
      ELSEIF(ISHADE.EQ.2)THEN
        PTREE=PTREE*NPTIDS*(SUM1/FTEMP)/SUM2
      ENDIF
      IF(DEBUG)WRITE(JOSTND,*)'NNID,FTEMP,SUM1,SUM2,PTREE= ',
     &NNID,FTEMP,SUM1,SUM2,PTREE
      DILATE=FIRST(2,IPNSPE)
      TMTIME=TIME
      TIME=FINT
      CALL ESSUBH (IPNSPE,HHT,DELAY,GENTIM,TRAGE)
      TIME=TMTIME
      IF(TREEHT.GE.0.1) THEN
        HHT=TREEHT
        XH=ALOG(HHT)
  161   CONTINUE
        XXH=EXP(BACHLO(XH,0.5,ESRANN))
        IF(XXH.LT.(0.5*HHT) .OR. XXH.GT.(2.0*HHT)) GO TO 161
        HHT=XXH
        HHT=HHT+HTADJ(IPNSPE)
        IF(HHT.LT.0.05) HHT=0.05
      ELSE
        HHT=HHT+HTADJ(IPNSPE)
        IF(HHT.LT.XMIN(IPNSPE) ) HHT=XMIN(IPNSPE)
      ENDIF
      FIRST(2,IPNSPE)=SQRT(DILATE)
      IF(HHT.GT.HHTMAX(IPNSPE)) HHT=HHTMAX(IPNSPE)
      IF(DEBUG) WRITE(JOSTND,7050) IPNSPE,HHT,PTREE,ITODO,ITPP,IACTK,
     &  TRAGE
 7050 FORMAT('IPNSPE=',I3,'  HHT=',F6.2,'  PTREE=',F7.2,'  ITODO=',I4,
     &  '  ITPP=',I4,'  IACTK=',I4,'  TRAGE=',F4.1)
      ICODE(ITPP+ITODO)=IPNSPE
      IASEP(ITPP+ITODO)=4
      IF(IACTK.EQ.430) IASEP(ITPP+ITODO)=3
      HEIGHT(ITPP+ITODO)=HHT
      ESPROB(ITPP+ITODO)=PTREE
      FTEMP=TRAGE
      IF(FTEMP.GT.GENTIM) FTEMP=GENTIM
      HTIMLT(ITPP+ITODO)=FTEMP/(GENTIM+0.0001)
      AGEPL(ITPP+ITODO)=FINT-DELAY-GENTIM+AGEPL(ITODO)
  322 CONTINUE
      IF (ITOOMP.GT.0) THEN
         CALL RCDSET(1,.TRUE.)
         WRITE (JOSTND,323) ITOOMP
  323    FORMAT (/'******** WARNING:',I4,' PLANT OR NATURAL REQUESTS',
     >            ' WERE CANCELED BECAUSE THERE WERE TOO MANY.')
      ENDIF
      ITP=ITPP+ITODO
  321 CONTINUE
      CALL ESRNSD (.TRUE.,ESAVE)
      IF(DEBUG) WRITE(JOSTND,7014) ESAVE
      IF(STOADJ.LT.0.0001) GO TO 229
      IF(ITP.LT.5) THEN
        DO 160 I=1,ITP
        NOTE(I)=1
  160   CONTINUE
        GOTO 176
      ENDIF
C     SCREEN OUT TREES WITH VERY LOW PROBABILITIES.
      ISTART = 1
      IF(PROB1(NCOUNT).LT.0.00011) ISTART = ITPP +1
C----------
C STEP 10: IDENTIFY BEST TREES
C----------
C     PICK BEST TREES.  STEP 1:  TWO TALLEST TREES REGARDLESS OF SPECIES
      NBEST=0
      NUM2PK=ITP-ISTART+1
      DO 166 J=1,2
      IF(NBEST.GE.NUM2PK) GO TO 176
      FTEMP=0.001
      DO 164 I=ISTART,ITP
      IF(NOTE(I).EQ.1) GO TO 164
      IF(HEIGHT(I).LT.FTEMP) GO TO 164
      FTEMP=HEIGHT(I)
      ITEMP=I
  164 CONTINUE
      N=ICODE(ITEMP)
      JNULL(N)=1
      NOTE(ITEMP)=1
      NBEST=NBEST+1
  166 CONTINUE
C     STEP 2:  IDENTIFY THE TALLEST TREE OF EACH ADDITIONAL SPECIES
      DO 169 J=1,NOFSPE
      DO 168 I=ISTART,ITP
      IF(ICODE(I).NE.J) GO TO 168
      IF(NOTE(I).EQ.1) GO TO 168
      IF(HEIGHT(I).LT.TALL(J)) GO TO 168
      TALL(J) = HEIGHT(I)
      ILSP(J)=I
  168 CONTINUE
  169 CONTINUE
      DO 170 J=1,NOFSPE
      IF(JNULL(J).EQ.1) GO TO 170
      ITEMP=ILSP(J)
      IF(ITEMP.EQ.0) GO TO 170
      NOTE(ITEMP)=1
      NBEST=NBEST+1
  170 CONTINUE
      IF(NBEST.GE.4.OR.NBEST.GE.NUM2PK) GO TO 176
C     STEP 3:  IDENTIFY TALLEST REMAINING TREES BY DECREASING HEIGHT
C     UNTIL A MINIMUM OF 4 TREES IS REACHED, IF POSSIBLE.
  172 CONTINUE
      FTEMP=0.001
      DO 174 J=ISTART,ITP
      IF(NOTE(J).EQ.1) GO TO 174
      IF(HEIGHT(J).LT.FTEMP) GO TO 174
      FTEMP=HEIGHT(J)
      ITEMP=J
  174 CONTINUE
      NBEST=NBEST+1
      NOTE(ITEMP)=1
      IF(NBEST.GE.NUM2PK) GO TO 176
      IF(NBEST.LT.4) GO TO 172
  176 CONTINUE
C     NOTE: STMT 229 IS USED WHEN STOADJ .LE. 0.0
  229 CONTINUE
C     PRINT OUT PLOT STATISTICS IF DEBUG IS ON.
      IF(DEBUG) THEN
        ITEMP = INT((RADIAN*57.2958) + 0.5)
        WRITE(JOSTND,6002) NN,IHAB,ITEMP,SLO,IPREP,PROB1(NCOUNT),
     &  ITPP,NEWTPP,NCOUNT
 6002   FORMAT(/,'PLOT  H.TYPE  ASP  SLO  PREP',2X,'P(STOCK)  TREES ',
     &  'PER PLOT    NCOUNT',/,4('-'),2X,6('-'),2X,2(3('-'),2X),
     &  4('-'),2X,8('-'),2X,16('-'),2X,6('-'),/,I3,T8,I3,T14,I4,T19,
     &  F4.2,T27,I1,T32,F6.4,T40,I3,' TOTAL,',I3,' NEW',T60,I3,//,T4,
     &  'TREE RECORDS:',T19,'TREE#  SPECIES  HEIGHT  BEST?  ASEP#  ',
     &  'ESPROB  HTIMLT',/,T19,'-----  -------  ------  -----  -----',
     &  '  ------  ------')
        IF (ITPP.GT.0) WRITE(JOSTND,6006) (I,ICODE(I),HEIGHT(I),
     &  NOTE(I),IASEP(I),ESPROB(I),HTIMLT(I),  I=1,ITPP)
 6006   FORMAT(T20,I3,T29,I2,T36,F4.1,T45,I1,T49,I4,2X,F8.4,2X,F6.3)
        IF(MODE.EQ.1) WRITE(JOSTND,6007)
 6007   FORMAT(T4,'PREDICTED NATURALS ABOVE; PLANT/NATURAL BELOW.')
        IF(MODE.EQ.1) WRITE(JOSTND,6006) (I,ICODE(I),HEIGHT(I),NOTE(I),
     &  IASEP(I),ESPROB(I),HTIMLT(I),  I=ITPP+1,ITP)
      ENDIF
      DO 205 I=1,NOFSPE
      EXCESS(I)=0.0
      SUMHTS(I)=0.0
      SUMESP(I)=0.0
  205 CONTINUE
C     MAKE SURE THAT THERE IS ROOM IN THE TREE LIST FOR REGENERATION.
C     THE CALL TO RDESCP INSURES THAT THE SPACE REQUIRED IS BELOW THAT
C     NEEDED BY THE ROOT DISEASE MODEL.  RDESCP RETURNS THE MAXIMUM
C     NUMBER OF TREES THAT ROOT DISEASE CAN HANDLE.  IF RROT IS NOT
C     BEING RUN, MXRR IS RETURNED AS MAXTRE.
      CALL RDESCP (MAXTRE,  MXRR)
      IF(ITRN.GE.MXRR-99) THEN
        CALL ESGENT (ITRNIN)
        ITEMP=MXRR/2
        CALL ESCPRS (ITEMP,DEBUG)
        ITRNIN=ITRN+1
C       OPFIND IS CALLED TO RESET THE PARAMETERS FOR THE
C       PLANT & NATURAL KEYWORDS.
        CALL OPFIND (2,MYACTS,NTODO)
      ENDIF
C----------
C STEP 12: PASS THE TREE RECORDS TO THE FVS TREE LIST
C----------
C     NATURALS FIRST.  EXIT=STMT 200
      IF(ITPP.LT.1) GO TO 200
      DO 33 N=1,ITPP
C     I IS SPECIES NUMBER        
      I=ICODE(N)
      IF((ISCT(I,1).EQ.0).AND.(ISCT(I,2).EQ.0))JSPIN(I)=JSPINDEF
C     HHT IS TREE HEIGHT
      HHT=HEIGHT(N)
      IF(ESPROB(N).LT.0.00011) GO TO 199
      IF(NOTE(N).NE.1) GO TO 199
      ITRN=ITRN+1
      IMC(ITRN)=1
      ISP(ITRN)=I
      ITRE(ITRN)=NNID
      CFV(ITRN)=0.
      ITRUNC(ITRN)=0
      DEFECT(ITRN)=0
      ISPECL(ITRN)=0
      NORMHT(ITRN)=0
      HT2TD(ITRN,1)=0.
      HT2TD(ITRN,2)=0.
C     PROB IS STAND TPA REPRESENTED BY TREE RECORD
      PROB(ITRN)=(ESPROB(N)*EXPAND) /DUPNPT
      DBH(ITRN)=0.1
      HT(ITRN)=HHT
      ABIRTH(ITRN)=AGADSB(N)
      PTOCFV(ITRN)=0.
      PMRCFV(ITRN)=0.
      PMRBFV(ITRN)=0.
      NCFDEF(ITRN)=0
      NBFDEF(ITRN)=0
      PDBH(ITRN)=0.
      PHT(ITRN)=0.
      ZRAND(ITRN)=-999.
      CALL RDESTB (ITRN,PROB(ITRN))
      ICR(ITRN)=0
      DG(ITRN)=0.0
      HTG(ITRN)=0.0
      PCT(ITRN)=0.0
      OLDPCT(ITRN)=0.0
      OLDRN(ITRN)=0.0
      WK1(ITRN)=0.0
      WK2(ITRN)=0.0
      WK4(ITRN)=HTIMLT(N)
      BFV(ITRN)=0.0
      PTBALT(ITRN)=PTBAA(NNID)
      IDTREE(ITRN)=IDCMP1+ITMP+ITRN
      CALL MISPUTZ(ITRN,0)
C     CALL BLISTER RUST TO PROCESS PLANTED TREES.
      CALL BRESTB (TIME,5,I)
C     BEST TREES NOT SUBJECT TO MORTALITY FOR THE FIRST 20 YEARS.
      IESTAT(ITRN)= IDSDAT+20
      GO TO 33
  199 CONTINUE
      EXCESS(I)=EXCESS(I)+1.0
      SUMHTS(I)=SUMHTS(I)+HHT
      SUMESP(I)=SUMESP(I)+ESPROB(N)
   33 CONTINUE
  200 CONTINUE
C     PASS EXCESS TREES TO THE TREE LIST.  EXIT=STMT 228
      DO 228 I=1,NOFSPE
      IF(EXCESS(I).LT.0.5) GO TO 228
      IF(SUMESP(I).LT.0.00011.AND.I.LT.NOFSPE) THEN
        SUMESP(I+1)=SUMESP(I+1)+SUMESP(I)
        SUMESP(I)=0.0
        GO TO 228
      ENDIF
      IF((ISCT(I,1).EQ.0).AND.(ISCT(I,2).EQ.0))JSPIN(I)=JSPINDEF
      FTEMP2=SUMESP(I)/(EXCESS(I)+0.00001)
      IBRKUP = INT(EXCESS(I)/5.0 +1.0)
      BRKUP=REAL(IBRKUP)
      DO 226 II=1,IBRKUP
      ITRN=ITRN+1
      HHT=SUMHTS(I)/EXCESS(I)
      IMC(ITRN)=2
      ISP(ITRN)=I
      ITRE(ITRN)=NNID
      CFV(ITRN)=0.0
      ITRUNC(ITRN)=0
      DEFECT(ITRN)=0
      ISPECL(ITRN)=0
      NORMHT(ITRN)=0
      XCSMAX=EXCESS(I)/BRKUP
      FTEMP=PASMAX/BRKUP
      IF(XCSMAX.GT.FTEMP) XCSMAX=FTEMP
      PROB(ITRN)= (FTEMP2*EXPAND*XCSMAX) /DUPNPT
      DBH(ITRN)=0.1
      HT(ITRN)=HHT
      ABIRTH(ITRN)=AGEXC(I)
      PTOCFV(ITRN)=0.
      PMRCFV(ITRN)=0.
      PMRBFV(ITRN)=0.
      NCFDEF(ITRN)=0
      NBFDEF(ITRN)=0
      PDBH(ITRN)=0.
      PHT(ITRN)=0.
      ZRAND(ITRN)=-999.
      CALL RDESTB (ITRN,PROB(ITRN))
      ICR(ITRN)=0
      DG(ITRN)=0.0
      HTG(ITRN)=0.0
      PCT(ITRN)=0.0
      OLDPCT(ITRN)=0.0
      OLDRN(ITRN)=0.0
      WK1(ITRN)=0.0
      WK2(ITRN)=0.0
      WK4(ITRN)=STOMLT(I)
      BFV(ITRN)=0.0
      IESTAT(ITRN)=0
      PTBALT(ITRN)=PTBAA(NNID)
      IDTREE(ITRN)=IDCMP1+ITMP+ITRN
      CALL MISPUTZ(ITRN,0)
C     CALL BLISTER RUST TO PROCESS PLANTED TREES.
      CALL BRESTB (TIME,5,I)
      PASTPA(I)=PASTPA(I) +(FTEMP2*EXPAND*XCSMAX) /DUPNPT
      TCROP2=TCROP2 +(FTEMP2*EXPAND*XCSMAX) /DUPNPT
  226 CONTINUE
  228 CONTINUE
C     PASS TREES FROM 'PLANT' AND 'NATURAL' KEYWORDS.  EXIT = STMT 227
      IF(MODE.NE.1) GO TO 227
      J=ITP - ITPP
      DO 35 JJ=1,J
      I= ICODE(ITPP+JJ)
      IF((ISCT(I,1).EQ.0).AND.(ISCT(I,2).EQ.0))JSPIN(I)=JSPINDEF
      FTEMP=ESPROB(ITPP+JJ)
      IF(FTEMP.LT.0.00011.AND.JJ.LT.J) THEN
        ESPROB(ITPP+JJ+1)=ESPROB(ITPP+JJ+1)+FTEMP
        ESPROB(ITPP+JJ)=0.0
        GO TO 35
      ENDIF
      IBRKUP = INT(FTEMP/10.0 + 1.0)
      BRKUP=REAL(IBRKUP)
      TOTTPA(I)=TOTTPA(I)+FTEMP
      PASTPA(I)=PASTPA(I)+FTEMP
      BESTPA(I)=BESTPA(I)+FTEMP
      TCROP1=TCROP1+FTEMP
      TCROP2=TCROP2+FTEMP
      TTOTTP=TTOTTP+FTEMP
      DO 24 II=1,IBRKUP
      ITRN=ITRN+1
      HHT=HEIGHT(ITPP+JJ)
      IMC(ITRN)=1
      IF(NOTE(ITPP+JJ).NE.1.AND.STOADJ.GT.0.0) IMC(ITRN)=2
      ISP(ITRN)=I
      CFV(ITRN)=0.
      ITRUNC(ITRN)=0
      DEFECT(ITRN)=0
      ISPECL(ITRN)=0
      NORMHT(ITRN)=0
      ITRE(ITRN)=NNID
      FTEMP2=FTEMP/BRKUP
      PROB(ITRN)=FTEMP2
      DBH(ITRN)=0.1
      HT(ITRN)=HHT
      ABIRTH(ITRN)=AGEPL(ITPP+JJ)
      PTOCFV(ITRN)=0.
      PMRCFV(ITRN)=0.
      PMRBFV(ITRN)=0.
      NCFDEF(ITRN)=0
      NBFDEF(ITRN)=0
      PDBH(ITRN)=0.
      PHT(ITRN)=0.
      ZRAND(ITRN)=-999.
      CALL RDESTB (ITRN,PROB(ITRN))
      ICR(ITRN)=0
      DG(ITRN)=0.0
      HTG(ITRN)=0.0
      PCT(ITRN)=0.0
      OLDPCT(ITRN)=0.0
      OLDRN(ITRN)=0.0
      WK1(ITRN)=0.0
      WK2(ITRN)=0.0
      WK4(ITRN)=HTIMLT(ITPP+JJ)
      BFV(ITRN)=0.0
      IESTAT(ITRN)=0
      PTBALT(ITRN)=PTBAA(NNID)
      IDTREE(ITRN)=IDCMP1+ITMP+ITRN
      CALL MISPUTZ(ITRN,0)
C     CALL BLISTER RUST TO PROCESS PLANTED TREES.
      CALL BRESTB (TIME,5,I)
   24 CONTINUE
   35 CONTINUE
  227 CONTINUE
C----------
C     STEP 11: ACCUMULATE PLOT STATISTICS - INSIDE STEP 12
C----------
      SUMPRB=SUMPRB+PROB1(NCOUNT)
      SUMPRE(IPREP)=SUMPRE(IPREP) +1.0
      SUMPRE(5)=SUMPRE(5)+1.0
      IHABT(IHAB)=IHABT(IHAB) +1
      IF(ITPP.LT.1) GO TO 217
      DO 215 I=1,ITPP
      N=ICODE(I)
      FTEMP2=(ESPROB(I)*EXPAND) /DUPNPT
      TOTTPA(N)=TOTTPA(N)+FTEMP2
      TTOTTP=TTOTTP+FTEMP2
      IF(NOTE(I).NE.1) GO TO 215
      BESTPA(N)=BESTPA(N)+FTEMP2
      TCROP1=TCROP1+FTEMP2
      PASTPA(N)=PASTPA(N)+FTEMP2
      TCROP2=TCROP2+FTEMP2
  215 CONTINUE
  217 CONTINUE
C     END OF PLOT CYCLE. RETURN AND CONTINUE PROJECTION.
  201 CONTINUE
  202 CONTINUE
  203 CONTINUE
C     ALL PLOTS ARE PROCESSED.
      IF(DEBUG) WRITE (JOSTND,6030) ITRNIN,ITRN
 6030 FORMAT(36('= '),/,'ITRNIN=',I6,'  ITRN=',I6)
      IF(NTODO.GT.0) THEN
        DO 225 ITODO=1,NTODO
        CALL OPGET (ITODO,6,IPYEAR,IACTK,NP,PRMS)
        IF(IACTK .LE. 0) GO TO 225
        ITEMP=INT(PRMS(1))
        IPLANT(ITEMP)=1
        CALL OPDONE (ITODO,IPYEAR)
  225   CONTINUE
      ENDIF
C     IF NEW TREES HAVE BEEN ADDED TO THE TREELIST
C     'GROW' TREES TO THE END OF THE CYCLE
      IF(ITRN.GE.ITRNIN)CALL ESGENT (ITRNIN)
      IF(DEBUG)WRITE(JOSTND,*)'AFTER CALL TO ESGENT-ITRN,ITRNIN= ',
     &ITRN,ITRNIN 
      DO 230 I= ITRNIN,ITRN
C     CALCULATE A CROWN WIDTH FOR SEEDLINGS/SPROUTS
      CRDUM=1.
      CALL CWCALC(ISP(I),PROB(I),DBH(I),HT(I),CRDUM,
     &            ICR(I),CW,0,JOSTND)
      CRWDTH(I)=CW
C     INCREMENT SEEDLING AGE
      ABIRTH(I)=ABIRTH(I)+GENTIM
  230 CONTINUE
C----------
C STEP 13: PRINT REGENERATION SUMMARY
C----------
      IF(IPRINT.EQ.0) GO TO 260
      SUMPRB=SUMPRB/DUPNPT
      IF(NTALLY.NE.1) GO TO 233
      DO 204 I=1,4
      SUMPRE(I)=(SUMPRE(I)/SUMPRE(5))*100.0
  204 CONTINUE
      DO 232 I=1,16
      IHABT(I)=IHABT(I)/IDUP
  232 CONTINUE
  233 CONTINUE
      DO 206 N=1,NOFSPE
      AVEHT(N)=SUMPX(N)/(SUMPI(N)+ .00001)
      IF(BESTPA(N).LT.0.5) AVEHT(N)=0.0
      TOTPCT(N)=(TOTTPA(N)/(TTOTTP+.00001))*100.0
      BESPCT(N)=(BESTPA(N)/(TCROP1+.00001))*100.0
      PASPCT(N)=(PASTPA(N)/(TCROP2+.00001))*100.0
  206 CONTINUE
      N = INT(SUMPRE(1) + 0.5)
      NN = INT(SUMPRE(2) + SUMPRE(4) + 0.5)
      ITEMP = INT(SUMPRE(3) + 0.5)
      J = INT(ZHARV + .5)
      K = INT(ZMECH + .5)
      L = INT(ZBURN + .5)
      IF(INGRO.EQ.1) GO TO 258
      IF(NTALLY.EQ.1) THEN
        CALL GROHED (JOREGT)
        WRITE(JOREGT,6012) NPLT,MGMID
 6012   FORMAT(/,76('-'),/,T17,'REGENERATION ESTABLISHMENT ',
     &  'MODEL VERSION 2.0',/,T9,'STAND ID: ',A26,5X,
     &  'MANAGEMENT CODE: ',A4,/,76('-') )
        WRITE(JOREGT,6013) J,K,L,N,NN,ITEMP,(IHABT(I),I=1,16)
 6013   FORMAT(/,T3,'SITE PREP SUMMARY',T38,'PLOT HABITAT TYPE SUMMARY',
     &  /,19('-'),T23,54('-'),/,'PREP:NONE MECH BURN   SERIES:',
     &  '<--- DF --> <--- GF -->  C WH <--- AF & MH --->',/,'YEAR:',
     &  3(I4,1X),'   GROUP: 1  2  3  4  5  6  7  8  9 10 11 12 13 14 ',
     &  '15 16',/,T2,'PCT:',I4,2I5,'   #PLOTS:',I2,15I3)
        IF(IPINFO.EQ.3) WRITE(JOREGT,6022)
 6022   FORMAT (/,'NOTE: SOME OR ALL PLOT ID CODES FROM THE TREE ',
     &  'DATA FILE DID NOT MATCH',/,T7,'THOSE IN THE PLOTINFO FILE.  ',
     &  'STAND VALUES WERE SUBSITUTED.')
        IF(NONSTK.GT.0) WRITE(JOREGT,6017) NONSTK
 6017   FORMAT(/,'NOTE:',I3,' NON-STOCKABLE PLOTS EXCLUDED FROM ',
     &  'THIS SUMMARY','.')
      ENDIF
      ITEMP=KDT+1-J
      IF(STOADJ.LT.0.0001) SUMPRB=0.0
      WRITE(JOREGT,6021) NTALLY,ITEMP,SUMPRB,KDT
 6021 FORMAT(/,'TALLY',I2,' AT',I3,' YEARS.  PROBABILITY OF',
     &  ' STOCKING IS ',F6.4,' IN THE FALL OF',I5,'.')
      N=0
      CLAST(1)=CBLANK
      DO 207 I=1,NOFSPE
      IF(IPLANT(I).LT.1) GO TO 207
      N=N+1
      CLAST(N) = NSP(I,1)(1:2)
  207 CONTINUE
      IF(N.EQ.0) N=1
      IF(MODE.EQ.1) WRITE(JOREGT,6015) (CLAST(I),I=1,N)
 6015 FORMAT(/'NOTE: REPORTED PROBABILITY OF STOCKING DOES NOT ',
     &  'INCLUDE TREES FROM PLANT ',/,T7,'AND NATURAL KEYWORDS.  ',
     &  'SPECIES= ',23A4)
      WRITE(JOREGT,6016) REGNBK
 6016 FORMAT(/,T6,'SUMMARY OF ALL',T30,'SUMMARY OF BEST         ',
     &  'TREES <',F4.1,' IN. DBH',/,T6,'TREES REGENERATING',T30,
     &  'TREES REGENERATING      BEING PROJECTED BY',/,T6,
     &  'DURING THIS TALLY.',T30,'DURING THIS TALLY.      THE ',
     &  'PROGNOSIS MODEL',/,T6,19('-'),5X,19('-'),5X,19('-'),/,13X,
     &  'TREES % OF      TREES % OF  AVERAGE     TREES % OF',/,5X,
     &  'SPECIES /ACRE TOTAL     /ACRE TOTAL HEIGHT      /ACRE TOTAL ',
     &  'SPECIES',/,5X,7('-'),1X,5('-'),1X,5('-'),5X,5('-'),1X,5('-'),
     &  1X,7('-'),5X,5('-'),1X,5('-'),1X,7('-') )
      DO 222 I=1,NOFSPE
      IF(TOTTPA(I).LE.0. .AND. BESTPA(I).LE.0. .AND. PASTPA(I).LE.0.)
     &GO TO 222
      WRITE(JOREGT,6014) NSP(I,1),TOTTPA(I),TOTPCT(I),BESTPA(I),
     &  BESPCT(I),AVEHT(I),PASTPA(I),PASPCT(I),NSP(I,1)
 6014 FORMAT(T9,A2,2X,2F6.0,4X,2F6.0,1X,F5.1,6X,2F6.0,3X,A2)
  222 CONTINUE
      WRITE(JOREGT,6026) TTOTTP,TCROP1,TCROP2
 6026 FORMAT(T14,5('-'),T30,5('-'),T54,5('-'),/,T12,F7.0,T28,F7.0,
     &  T52,F7.0,/)
      GO TO 259
C     THIS SECTION PRINTS INGROWTH SUMMARY
  258 CONTINUE
      WRITE(JOREGT,6012) NPLT,MGMID
      IF(MODE.EQ.1) THEN
         IF (STOADJ.GT.0.) THEN
            WRITE(JOREGT,6011) TTOTTP,
     &           'INGROWTH, PLANT, AND NATURAL ',KDT
         ELSE
            WRITE(JOREGT,6011) TTOTTP,
     &           'PLANT AND NATURAL ',KDT
         ENDIF
      ELSE
         WRITE(JOREGT,6011) TTOTTP,'INGROWTH ',KDT
      ENDIF
 6011 FORMAT(F8.1,' ',A,
     &  'TREES/ACRE ADDED IN THE FALL OF',I5)
      WRITE(JOREGT,6029) (NSP(I,1),I=1,NOFSPE),(TOTTPA(J),J=1,NOFSPE)
 6029 FORMAT(/,'   SPECIES:',23(2X,A2,1X),/,'TREES/ACRE:',23F5.0,/)
  259 CONTINUE
  260 CONTINUE
C     PRINT PLOT SUMMARY TABLE IF REQUESTED.
      CALL DBCHK (DEBUG,'ESPSUM',6,ICYC)
      IF(DEBUG) THEN
        WRITE(JOREGT,6018) (NSP(I,1),I=1,NOFSPE)
 6018   FORMAT('IN ESTAB (ESPSUM PLOT SUMMARY): '/
     &  '     SLOPE ASPECT HAB. TOPO SITE       ',
     &  ' <------PLOT OVERSTORY DENSITY (SQ.FT./ACRE)----->',/,
     &  'PLOT %/100 (DEG.) GRP. POS. PREP  P(S)  TOTAL ',23(A2,2X))
        DO 221 I=1,NPTIDS
        NNID=IPTIDS(I)
        N = INT((PASP(NNID)*57.2958) + 0.5)
        NN=IPHYS(NNID)
        ITEMP=IPPREP(I*IDUP)
        WRITE(JOREGT,6020) NNID,PSLO(NNID),N,IPHAB(NNID),CTOPO(NN),
     &  CPREP(ITEMP),PROB1(I*IDUP),BAAA(NNID),(OVER(J,NNID),J=1,NOFSPE)
 6020   FORMAT(1X,I3,F6.2,I6,2X,I3,1X,2(1X,A4),F7.4,F6.0,
     &  (/,2X,11F4.0))
  221   CONTINUE
      ENDIF
      KDTOLD=KDT
      MODE=0
      RETURN
      END
