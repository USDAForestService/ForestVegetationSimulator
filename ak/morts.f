      SUBROUTINE MORTS
      IMPLICIT NONE
C----------
C VWC $Id$
C----------
C  THIS SUBROUTINE COMPUTES PERIODIC MORTALITY RATES FOR EACH TREE
C  RECORD AND THEN REDUCES THE NUMBER OF TREES/ACRE REPRESENTED BY THE
C  TREE RECORD.  MORTALITY RATE FOR TREES IS PREDICTED FROM DBH
C  AND BASAL AREA IN TREES LARGER (BAL). IF STAND GETS ABOVE MAXSDI OR BAMAX,
C  MORTALITY IS REPEATEDLY APPLIED UNTIL STAND IS BELOW MAX. IF THIS ROUTINE
C  IS CALLED FROM **TREGRO** WHEN CYCLING FOR GROWTH PREDICTION. ENTRY 
C  **MORCON** IS ACCESSED TO LOAD SITE DEPENDENT CONSTANTS.
C----------
C SPECIES LIST FOR ALASKA VARIANT.
C
C Number Code  Common Name         FIA  PLANTS Scientific Name
C   1     SF   Pacific silver fir  011  ABAM   Abies amabilis
C   2     AF   subalpine fir       019  ABLA   Abies lasiocarpa
C   3     YC   Alaska cedar        042  CANO9  Callitropsis nootkatensis
C   4     TA   tamarack            071  LALA   Larix laricina
C   5     WS   white spruce        094  PIGL   Picea glauca
C   6     LS   Lutz’s spruce            PILU   Picea lutzii
C   7     BE   black spruce        095  PIMA   Picea mariana
C   8     SS   Sitka spruce        098  PISI   Picea sitchensis
C   9     LP   lodgepole pine      108  PICO   Pinus contorta
C  10     RC   western redcedar    242  THPL   Thuja plicata
C  11     WH   western hemlock     263  TSHE   Tsuga heterophylla
C  12     MH   mountain hemlock    264  TSME   Tsuga mertensiana
C  13     OS   other softwoods     298  2TE
C  14     AD   alder species       350  ALNUS  Alnus species
C  15     RA   red alder           351  ALRU2  Alnus rubra
C  16     PB   paper birch         375  BEPA   Betula papyrifera
C  17     AB   Alaska birch        376  BENE4  Betula neoalaskana
C  18     BA   balsam poplar       741  POBA2  Populus balsamifera
C  19     AS   quaking aspen       746  POTR5  Populus tremuloides
C  20     CW   black cottonwood    747  POBAT  Populus trichocarpa
C  21     WI   willow species      920  SALIX  Salix species
C  22     SU   Scouler’s willow    928  SASC   Salix scouleriana
C  23     OH   other hardwoods     998  2TD
C----------
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
      INCLUDE 'PLOT.F77'
C
C
      INCLUDE 'CALCOM.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
      INCLUDE 'COEFFS.F77'
C
C
      INCLUDE 'ESTREE.F77'
C
C
      INCLUDE 'MULTCM.F77'
C
C
      INCLUDE 'PDEN.F77'
C
C
      INCLUDE 'WORKCM.F77'
C
C
      INCLUDE 'VARCOM.F77'
C
COMMONS
C----------
C  DEFINITIONS:
C
C      BAA --  BA AFTER MORTALITY HAS BEEN APPLIED TO TREE RECORDS
C     BARK --  BARK RATIO OF TREE I
C      BM1 --  ARRAY CONTAINING INTERCEPT COEFFICIENTS FOR SURVIVAL EQUATION
C      BM2 --  ARRAY CONTAINING DBH COEFFICIENTS FOR SURVIVAL EQUATION
C      BM3 --  ARRAY CONTAINING DBH^2 COEFFICIENTS FOR SURVIVAL EQUATION
C      BM4 --  ARRAY CONTAINING BAL COEFFICIENTS FOR SURVIVAL EQUATION
C      BM5 --  ARRAY CONTAINING BAL/LN(DBH + 1) COEFFICIENTS FOR SURVIVAL EQUATION
C   BRATIO --  BARK RATIO VALUE RETURNED FROM BRATIO FUNCTION
C   CIOBDS --  PREDICTED DDS
C  CIOBDS1 --  ARRAY CONTAINING PREDICTED DDS VALUES
C   CREDIT --  STORES SURVIVING TPA WHEN PROCESSING FIXMORT OPTION
C        D --  TREE DIAMETER
C       D1 --  LOWER DIAMETER LIMIT FOR FIXMORT KEYWORD
C       D2 --  UPPER DIAMETER LIMIT FOR FIXMORT KEYWORD
C     DQ10 --  QMD CALCULATED 10 YEARS HENCE
C    DQ10A --  QMD AFTER MORTALITY HAS BEEN APPLIED TO TREE RECORDS
C    DEBUG --  LOGICAL VARIABLE FOR TRIGGERING DEBUG
C        G --  DIAMETER GROWTH OUTSIDE BARK
C       G1 --  ARRAY FOR STORING DIAMETER GROWTH OUTSIDE BARK
C        I --  TREE SUBSCRIPT
C       I1 --  INDEX INDICATING START OF SPECIES (I) OBSERVATIONS - USED FOR LOOPING
C       I2 --  INDEX INDICATING END OF SPECIES (I) OBSERVATIONS - USED FOR LOOPING
C       I3 --  TREE SUBSCRIPT FOR LOOPING ACROSS TREE RECORDS
C    IACTK --  ACTIVITY KCODE RETURNED BY OPFIND
C    IDATE --  DATE THAT OPTION IS SCHEDULED TO OCCUR
C   IDMFLG --  DBH ASSOCIATED WITH SIZE CAP (STORED IN SIZCAP ARRAY)
C       IG --  LOOPING INDEX USED FOR LOOPING ACROSS EACH SPECIES IN A SPECIES
C              GROUP WHEN PROCESSING THE FIXMORT KEYWORD
C     IGRP --  SPECIES GROUP INDEX
C       IP --  USED AS INDEX FOR BRANCHING GOTO STATEMENT WHEN PROCESSING 
C              FIXMORT KEYWORD
C       IS --  SPECIES INDEX USED FOR CALL TO BRATIO FUNCTION
C     ISPC --  INDEX USED FOR LOOPING ACROSS SPECIES
C    ISPCC --  SPECIES INDEX ASSOCIATED WITH MORTALITY MODIFIER
C    ITODO --  INDEX IN LOOPING ACROSS ACROSS FIXMORT OPTIONS
C    IULIM --  CONTAINS NUMBER OF SPECIES IN SPECIES GROUP WHEN PROCESSING FIXMORT
C              KEYWORD
C       IX --  HOLDS SORTED DIAMETER INDEX (RECIEVED FROM IWORK)
C        J --  INDEX USED FOR LOOPING ACROSS POINTS WHEN PROCESSING
C              FIXMORT KEYWORD
C     KBIG --  INDICATOR FOR DETERMING HOW TREES ARE KILLED BASED ON SIZE WHEN
C              WHEN PROCESSING THE FIXMORT KEYWORD
C   KPOINT --  INDICATOR FOR WHETHER MORTALITY IS BEING APPLIED TO POINTS
C              WHEN PROCESSING FIXMORT KEYWORD
C    LINCL --  LOGICAL VARIABLE FOR DETERMINING IF TREE GETS AFFECTED BY
C              FIXMORT
C   MYACTS --  LIST OF ACTIVITES SENT TO OPFIND SUBROUTINE
C       NP --  NUMBER OF PARAMETERS RETURNED FROM OPGET
C    NTODO --  NUMBER OF ACTIVITIES TO BE DONE DURING A CYCLE (RETURNED FROM OPFIND)
C        P --  NUMBER OF TREES PER ACRE REPRESENTED BY A TREE
C     PASS --  NUMBER OF PASSES MADE THROUGH MORTALITY APPLICATION LOGIC
C      PRM --  ARRAY CONTAINING FIXMORT KEYWORD ARGUMENTS
C     PRES --  TREES PER ACRE REPRESENTED BY TREE(I) AFTER MORTALITY HAS BEEN
C              APPLIED
C    PTBAL --  POINT BASAL AREA
C      RIP --  ESTIMATED ANNUAL MORTALITY RATE
C    SD2SQ --  SUM OF BASAL AREA IN STAND BEFORE MORTALITY HAS BEEN APPLIED
C   SD2SQA --  SUM OF BASAL AREA IN STAND AFTER MORTALITY HAS BEEN APPLIED
C     SDIA --  SDI CALCULATED AFTER MORTALITY HAS BEEN APPLIED TO TREE RECORDS
C  SUMDR10 --  SUM OF DIAMETERS REQUIRED FOR ZEIDE SDI CALCULATION
C              BEFORE MORTALITY HAS BEEN APPLIED
C  SUMR10A --  SUM OF DIAMETERS REQUIRED FOR ZEIDE SDI CALCULATION
C              AFTER MORTALITY HAS BEEN APPLIED
C        T --  TPA BEFORE MORTALITY HAS BEEN APPLIED
C       TA --  TPA AFTER MORTALITY HAS BEEN APPLIED TO TREE RECORDS
C     TEMP --  TEMPORARY STORAGE VARIABLE
C     VLOS --  AMOUNT OF CUBIC FOOT LOSS PER ACRE DUE TO MORTALITY FOR 
C              TREE(I) 
C      WKI --  SCALAR USED FOR CALCULATION AND TEMPORARY STORAGE
C              OF TREE MORTALITY (TREES/ACRE).
C     WKII --  TEMPORARY ARRAY USED FOR STORING MORTALITY TPA FOR TREE(I)
C    WKIT2 --  TEMPORARY VARIABLE FOR STORING MORTALITY TPA FOR TREE(I)
C        X --  SCALAR MORTALITY MULTIPLIER
C   XCHECK --  VARIABLE USED TO DETERMINE IF MORTALITY SHOULD BE APPLIED TO
C    XMORE --  STORES MORTALITY TPA FOR TREE(I) WHEN PROCESSING FIXMORT
C              KEYWORD
C    XMORT --  STORES MORTALITY MULTIPLIER VALUE
C
C----------
      LOGICAL DEBUG,LINCL
      REAL PRM(6)
      REAL BM1(MAXSP),BM2(MAXSP),BM3(MAXSP),BM4(MAXSP),BM5(MAXSP)
      REAL CREDIT,TEMP,XMORE,VLOS,PRES,XCHECK,X,RIP
      REAL WKI,D1,D2,XMORT
      REAL DQ10,G,BRATIO,BARK,CIOBDS,D,P,SD2SQ,T,SUMDR10
      REAL BAL,WKIT2,G1(MAXTRE)
      REAL BAA,TA,SD2SQA,SUMDR10A,DQ10A,SDIA,CIOBDS1(MAXTRE)
      REAL WKII(MAXTRE),PTBAL
      INTEGER MYACTS(2),PASS
      INTEGER NTODO,I,NP,IACTK,IDATE,ISPCC,IS,ISPC,I1,I2,I3,IP
      INTEGER IDMFLG,ITODO,KPOINT,KBIG,IGRP,IULIM,IG,IX,J
C----------
C  DATA STATEMENTS.
C----------
      DATA MYACTS/94,97/
C
C     INTERCEPT COEFFICIENTS
      DATA BM1/5.198019, 5.198019, 5.473731, 5.212785, 4.648477,
      &        4.648477, 5.212785, 5.198019, 4.974849, 6.323036,
      &        5.070262, 5.437841, 4.648477, 3.139022, 3.139022,
      &        3.33781, 3.33781, 2.706075, 2.906063, 2.706075,
      &        2.706075, 2.706075, 2.706075/
C      
C     DBH COEFFICIENTS
      DATA BM2/0.061917, 0.061917, 0.061917, 0.371005, 0.371005,
      &        0.371005, 0.371005, 0.061917, 0.061917, 0.061917,
      &        0.061917, 0.061917, 0.371005, 0.371005, 0.371005,
      &        0.371005, 0.371005, 0.371005, 0.371005, 0.371005,
      &        0.371005, 0.371005, 0.371005/
C
C     DBH^2 COEFFICIENTS
      DATA BM3/-0.001415, -0.001415, -0.001415, -0.05853, -0.018131,
      &        -0.018131, -0.05853, -0.001415, -0.001415, -0.001415,
      &        -0.001415, -0.001415, -0.018131, -0.012895, -0.012895,
      &        -0.017155, -0.017155, -0.010482, -0.013165, -0.010482,
      &        -0.010482, -0.010482, -0.010482/
C
C     BAL COEFFICIENTS
C     NOT USED (ZERO VALUE) FOR SF, AF, YC, SS, LP, RC, WH, MH
      DATA BM4/0.0, 0.0, 0.0, -0.005435, -0.004561,
      &        -0.004561, -0.005435, 0.0, 0.0, 0.0,
      &        0.0, 0.0, -0.004561, -0.004084, -0.004084,
      &        -0.007239, -0.007239, -0.0025, -0.010514, -0.0025,
      &        -0.0025, -0.0025, -0.0025/
C
C     BAL/LN(DBH + 1) COEFFICIENTS
C     NOT USED (ZERO VALUE) FOR TA, WS, LS, BE, OS, AD, RA, PB, AB,
C     BA, AS, BC, WI, SU, OH
      DATA BM5/-0.003554, -0.003554, -0.001365, 0.0, 0.0,
      &        0.0, 0.0, -0.003554, -0.001722, -0.002602,
      &        -0.00115, -0.002249, 0.0, 0.0, 0.0,
      &        0.0, 0.0, 0.0, 0.0, 0.0,
      &        0.0, 0.0, 0.0/
C-----------
C  CHECK FOR DEBUG.
C-----------
      CALL DBCHK (DEBUG,'MORTS',5,ICYC)
C---------
C  IF THERE ARE NO TREE RECORDS, SIMPLY PROCESS THE MORTALITY
C  MULTIPLIERS AND BRANCH TO END (FOR THE METHOD USED TO GET
C  MULTIPLIERS, SEE SUBROUTINE MULTS).
C---------
      CALL OPFIND (1,MYACTS(1),NTODO)
      IF (NTODO.EQ.0) GOTO 12
      DO 9 I=1,NTODO
      CALL OPGET(I,4,IDATE,IACTK,NP,PRM)
      IF (IACTK.LT.0) GOTO 9
      CALL OPDONE(I,IY(ICYC))
      ISPCC=IFIX(PRM(1))
      IF(ISPCC.EQ.0) GOTO 2
      XMMULT(ISPCC)=PRM(2)
      XMDIA1(ISPCC)=PRM(3)
      XMDIA2(ISPCC)=PRM(4)
      GOTO 9
    2 CONTINUE
      DO 5 ISPCC=1,MAXSP
      XMMULT(ISPCC)=PRM(2)
      XMDIA1(ISPCC)=PRM(3)
      XMDIA2(ISPCC)=PRM(4)
    5 CONTINUE
    9 CONTINUE
   12 CONTINUE
C----------
C IF BARE GROUND PLANT, LIMITS WERE NOT ADJUSTED FROM A PERCENT TO A
C PROPORTION IN CRATET, ADJUST THEM HERE.
C----------
      IF(PMSDIL .GT. 1.0)PMSDIL = PMSDIL/100.
      IF(PMSDIU .GT. 1.0)PMSDIU = PMSDIU/100.
C
      IF (ITRN.LE.0) GOTO 100
C----------
C SDIMAX IS USED HERE TO CARRY WEIGHTED SDI MAXIMUM. IF A USER-DEFINED
C BASAL AREA MAXIMUM HAS NOT BEEN ENTERED, THEN BASAL AREA MAXIMUM
C WILL BE RESET TO BE CONSISTENT WITH THE SDI MAXIMUM. THIS IS NEEDED
C FOR MODELING CLIMATE CHANGE.
C----------
      CALL SDICAL(0,SDIMAX)
      IF(DEBUG)WRITE(JOSTND,*)'IN MORTS CYCLE= ',ICYC,'  BAMAX= ',
     &BAMAX,'  SDIMAX= ',SDIMAX 
C----------
C  ESTIMATE QUADRATIC MEAN DIAMETER 10 YEARS HENCE.
C----------
      T=0.0
      SD2SQ=0.0
      SUMDR10=0.0
      DQ10=0.0
      DO 20 I=1,ITRN
      P=PROB(I)
      IS=ISP(I)
      D=DBH(I)
      BARK=BRATIO(IS,D,HT(I))
      G=DG(I)/BARK
      G1(I)=G
      IF(LZEIDE.AND.(D.LT.DBHZEIDE))GO TO 20       ! BRANCH IF D IS LT MIN DBH
      IF(.NOT.LZEIDE.AND.(D.LT.DBHSTAGE))GO TO 20
      CIOBDS=(2.0*D*G+G*G)
      CIOBDS1(I)=CIOBDS
      SD2SQ=SD2SQ+P*(D*D+CIOBDS)
      IF(LZEIDE)THEN
        SUMDR10=SUMDR10+P*(D+G)**1.605
      ENDIF 
      T=T+P
   20 CONTINUE
      IF(T. EQ. 0.0) T= 0.0001
      DQ10=SQRT(SD2SQ/T)
      IF(LZEIDE)THEN
        DQ10=(SUMDR10/T)**(1/1.605)
      ENDIF 
      IF(DEBUG)WRITE(JOSTND,*)'SD2SQ,SUMDR10,DQ10= ',
     &SD2SQ,SUMDR10,DQ10
C----------
C  START LOOP TO ESTIMATE MORTALITY RATE. TREES ARE PROCESSED
C  ONE AT A TIME WITHIN A SPECIES.
C----------
C  START SPECIES LOOP
      DO 50 ISPC=1,MAXSP
      I1=ISCT(ISPC,1)
      IF(I1.LE.0) GO TO 50
      I2=ISCT(ISPC,2)
      XMORT = XMMULT(ISPC)
      D1 = XMDIA1(ISPC)
      D2 = XMDIA2(ISPC)
C----------
C  START TREE LOOP WITHIN SPECIES.
C----------
      TA=0.0
      SD2SQA=0.0
      SUMDR10A=0.0
      PASS=1
      DO 40 I3=I1,I2
C----------
C  INITIALIZE FOR NEXT TREE.
C----------
      I=IND1(I3)
      P=PROB(I)
      RIP=0.0
      WKI=0.0
      WK2(I)=0.0
      D=DBH(I)
      BARK=BRATIO(ISPC,D,HT(I))
      IF(P.LE.0.0) GO TO 40
C----------
C  COMPUTE SURVIVAL RATE
C
C  INDIVIDUAL TREE PROBABLITY OF SURVIVAL (ANNUAL) IS CALCULATED USING A MODIFIED
C  LOGISTIC REGRESSION FUNCTION:
C
C  PR(SURV) = (EXP(X)/(1 + EXP(X)))^YIP
C  X = B1 + B2*DBH + B3*DBH^2 + B4*BAL + B5*BAL/LN(DBH + 1)
C
C  WHERE DBH IS DIAMETER AT BREAST HEIGHT, BAL IS BASAL AREA IN TREES LARGER
C  AND YIP IS NUMBER OF YEARS IN GROWTH PERIOD
C
C  PROBABILITY OF SURVIVAL IS CONVERTED TO PROBABILITY OF MORTALITY ADJUSTED BY
C  CYCLE LENGTH THROUGH THE FOLLOWING: 1 - PR(SURV)**YIP
C----------
     PTBAL=PTBALT(I)
C----------
C ANNUAL SURVIVAL RATE
C----------      
     RIP = BM1(ISPC) + BM2(ISPC)*D + BM3(ISPC)*D*D + BM4(ISPC)*PTBAL +
     & BM5(ISPC)*PTBAL/ALOG(D + 1)
     RIP = EXP(RIP)/(1 + EXP(RIP))
C
C DETERMINE IF DEBUG IS NEEDED
     IF(DEBUG)WRITE(JOSTND,*)'IN MORTS EQNS I,ISPC,RIP,D,
     &PTBAL=',I,ISPC,RIP,D,PTBAL
C----------
C  APPLY MORTALITY MULTIPLIERS WITHIN USER-PROVIDED DBH LIMITS
C  AND STORE TREES PER ACRE DYING IN THE ARRAY WK2.
C----------
      X=1.0
      IF (D.GE.D1 .AND. D.LT.D2) X=XMORT
C----------
C  FROM HERE TO STATEMENT 29 IS ESTABLISHMENT MODEL CODE.
C  "BEST" TREES NOT SUBJECT TO MORTALITY FOR 20 YRS
C  AFTER DISTURBANCE DATE.
C----------
      IF(IESTAT(I).LE.0) GO TO 29
      IF(IY(ICYC).GE.IESTAT(I)) IESTAT(I)=0
      XCHECK= FLOAT(IESTAT(I)-IY(ICYC))/FINT
      IF(XCHECK.GT.1.0) XCHECK=1.0
      IF(XCHECK.LT.0.0) XCHECK=0.0
      X=X* (1.0-XCHECK)
   29 CONTINUE
C
C CONSTRAIN SURVIVAL PREDICTION
      IF (RIP.GT.0.99999) RIP=0.99999
C
C CONVERT SURVIVAL RATE TO FINT-YEAR MORTALITY RATE
      WKI= P*(1.0 - (RIP**FINT))*X
C
C DETERMINE IF DEBUG IS NEEDED
      IF(DEBUG)WRITE(JOSTND,*)'IN MORTS EQ I,XCHECK,X,P,RIP,FINT,WKI= ',
     &I,XCHECK,X,P,RIP,FINT,WKI
C
C DETERMINE IF PREDICTED MORTALITY IS GREATER THAN SIZE CAP IMPOSED 
C MORTALITY RATE
      BARK=BRATIO(IS,D,HT(I))
      G = (DG(I)/BARK) * (FINT/10.0)
      IDMFLG=IFIX(SIZCAP(ISPC,3))
      IF((D+G).GE.SIZCAP(ISPC,1) .AND. IDMFLG.NE.1) THEN
         WKI = AMAX1(WKI,(P*SIZCAP(ISPC,2)*FINT/10.0))
        IF(DEBUG)WRITE(JOSTND,*)'SIZE CAP RESTRICTION IMPOSED, ',
     &  'I,ISPC,D,P,SIZCAP 1-3,WKI = ',
     &  I,ISPC,D,P,SIZCAP(ISPC,1),SIZCAP(ISPC,2),SIZCAP(ISPC,3),WKI
      ENDIF
      IF(WKI.GT.P) WKI=P
C----------
C  IF SDIMAX IS LESS THAN 5, ASSUME CLIMATE HAS CHANGED ENOUGH THAT THE
C  SITE WILL NO LONGER SUPPORT TREES, AND KILL ALL EXISTING TREES.
C----------
      IF(SDIMAX .LT. 5)THEN
        WKI=P
      ENDIF
C----------
C  RECALCULATE VALUES AFTER MORTALITY HAS BEEN APPLIED
C---------- 
      TA=TA+(PROB(I)-WKI)
      WK2(I)=WKI
      IF(DEBUG)WRITE(JOSTND,*)'IN MORTS INITIAL PASS: IXX WKI WK2=',
     &I,WKI,WK2(I)
   40 CONTINUE 
   50 CONTINUE
      GOTO 59
C----------
C  RECALCULATE SDI AND BA FOR THE STAND AND MAKE SURE THEY ARE BELOW THE MAXIMUM
C----------
   55 CONTINUE
      DQ10A=SQRT(SD2SQA/TA)
      BAA=.005454154*DQ10A*DQ10A*TA
      IF(LZEIDE)THEN
        DQ10A=(SUMDR10A/TA)**(1./1.605)
      ENDIF
      SDIA=TA*(DQ10A/10)**1.605
      IF(DEBUG)WRITE(JOSTND,*)'IN MORTS:PASS,TA,SD2SQA,SUMDR10A,DQ10A
     &,BAA,SDIA=',PASS,TA,SD2SQA,SUMDR10A,DQ10A,BAA,SDIA
C----------
C  LOOP BACK THROUGH TREES RECORDS IF STAND IS OVER MAXIMUM SDI.
C  BECAUSE BA CAN CREEP UP TO UNREALISTIC VALUES EVEN WHILE
C  HOLDING SDI BELOW MAXIMUM, ANOTHER PASS IS MADE IF A STAND'S
C  BASAL AREA EXCEEDS THE BASAL AREA MAXIMUM OF THE STAND
C----------
      IF(((SDIA.LT.SDIMAX).AND.(BAA.LT.BAMAX)).OR.(PASS.GT.100)) GO TO 70
      PASS=PASS+1
      SD2SQA=0
      SUMDR10A=0   
      TA=0
  59  CONTINUE
      DO 60 I=1,ITRN
      WKI=WK2(I)*(PASS)
      IF(WKI.GT.PROB(I)) WKI=PROB(I)
      WKIT2=WKI+WKIT2
      WKII(I)=WKI
      IF(LZEIDE.AND.(DBH(I).LT.DBHZEIDE))GO TO 60         ! BRANCH IF D IS LT MIN DBH
      IF(.NOT.LZEIDE.AND.(DBH(I).LT.DBHSTAGE))GO TO 60
      SD2SQA=SD2SQA+(PROB(I)-WKI)*(DBH(I)*DBH(I)+CIOBDS1(I))
      IF(LZEIDE)THEN
        SUMDR10A=SUMDR10A+(PROB(I)-WKI)*(DBH(I)+G1(I))**1.605
      ENDIF 
      TA=TA+(PROB(I)-WKI)
      IF(DEBUG)WRITE(JOSTND,*)'IN MORT PASS,I,DBH,WKI,WKIT2,SD2SQA,
     &SUMDR10A,TA=',PASS,I,DBH(I),WKI,WKIT2,SD2SQA,SUMDR10A,TA
   60 CONTINUE
      GOTO 55
C----------
C  END OF TREE LOOPING.  PRINT DEBUG INFO IF DESIRED.
C----------
   70 CONTINUE
      DO 80 I=1,ITRN 
      IF (PASS.GT.1) WK2(I)=WKII(I)
      IF(WK2(I).GT.PROB(I)) WK2(I)=PROB(I)
      IF(.NOT.DEBUG) GO TO 80
      PRES=PROB(I)-WK2(I)
      VLOS=WK2(I)*CFV(I)/FINT
      WRITE(JOSTND,9000) I,ISPC,DBH(I),G1(I),BA,PROB(I),
     &WK2(I),PRES,VLOS
 9000 FORMAT('IN MORTS, I=',I4,',  ISPC=',I3,',  DBH=',F7.2,
     &',  DBH INCREMENT=',F7.4,',  RELDBH=',F7.4,',  BA=',F7.2,
     &       ',  INIT PROB=',F9.3/
     &       ', TREES DYING=',F9.3,'  RES PROB=',F9.3,
     &       ',  VOL LOST=',F9.3)
   80 CONTINUE
      IF(.NOT.DEBUG) GO TO 100
      WRITE(JOSTND,9001)  ISPC
 9001 FORMAT('IN MORTS,  ISPC=',I3,
     &       11X)
  100 CONTINUE
C
C----------
C  COMPUTE THE CLIMATE-PREDICTED MORTALITY RATES BY SPECIES
C---------
      CALL CLMORTS
C----------
C  COMPUTE THE FIXMORT OPTION.  LOOP OVER ALL SCHEDULED FIXMORT'S
C  LINCL IS USED TO INDICATE WHETHER A TREE GETS AFFECTED OR NOT
C----------
      CALL OPFIND (1,MYACTS(2),NTODO)
      IF (NTODO.GT.0) THEN
        IF(DEBUG)WRITE(JOSTND,*)'FIXMORT PROCESSING, ITODO= ',ITODO
         DO 300 ITODO=1,NTODO
         CALL OPGET (ITODO,6,IDATE,IACTK,NP,PRM)
         IF (IACTK.LT.0) GOTO 300
         CALL OPDONE(ITODO,IY(ICYC))
         ISPCC=IFIX(PRM(1))
         IF(NP .LE. 4)THEN
           IF(PRM(2).GT. 1.0)PRM(2)=1.0
         ENDIF
         IF(PRM(3).LT. 0.0)PRM(3)=0.0
         IF(PRM(4).LE. 0.0)PRM(4)=999.
         IP=1
         IF (NP.GT.4) THEN
            IF(PRM(5).LT.3.)THEN
               IF(PRM(2).GT. 1.0)PRM(2)=1.0
               IF(PRM(2).LT. 0.0)PRM(2)=0.0
            ENDIF 
            IF (PRM(5).EQ.1.0) THEN
               IP=2
            ELSEIF (PRM(5).EQ.2.0) THEN
               IP=3
            ELSEIF (PRM(5).EQ.3.) THEN
               IP=4
            ENDIF
         ENDIF
C----------
C  SET FLAG FOR POINT MORTALITY, OR KILLING FROM ABOVE
C    PRM(6)    POINT      SIZE   KBIG     KILL DIRECTION
C      0         NO        NO     0                       DEFAULT CONDITION
C      1         YES       NO     0
C     10         NO        YES    1       BOTTOM UP
C     11         YES       YES    1       BOTTOM UP
C     20         NO        YES    2       TOP DOWN
C     21         YES       YES    2       TOP DOWN
C----------
         KPOINT=0
         KBIG=0
         IF(PRM(6).GT.0.)THEN
           IF(PRM(6) .EQ. 1)THEN
             KPOINT=1
           ELSEIF(PRM(6) .EQ. 10)THEN
             KBIG=1
           ELSEIF(PRM(6) .EQ. 11)THEN
             KPOINT=1
             KBIG=1
           ELSEIF(PRM(6) .EQ. 20)THEN
             KBIG=2
           ELSEIF(PRM(6) .EQ. 21)THEN
             KPOINT=1
             KBIG=2
           ENDIF
         ENDIF
         IF (ITRN.GT.0) THEN
C----------
C IF CONCENTRATING MORTALITY ON A POINT, AND/OR BY SIZE TREES IS IN
C EFFECT, DETERMINE EFFECT OF THIS FIXMORT AND REALLOCATE BY POINT:
C   REALLOCATE ALL MORTALITY IF REPLACE OPTION OR MULTIPLY OPTION
C   ARE IN EFFECT.
C   ONLY REALLOCATE ADDITIONAL MORTALITY IF "ADD" OPTION IS IN EFFECT
C   ONLY REALLOCATE ADDITIONAL MORTALITY IF "MAX" OPTION IS IN EFFECT
C   (I.E. MORTALITY OVER AND ABOVE WHAT WAS PREVIOUSLY PREDICTED.
C----------
            IF(KBIG.GE.1 .OR. (KPOINT.EQ.1 .AND. IPTINV.GT.1)) THEN
              XMORE=0.
              DO 199 I=1,ITRN
              LINCL = .FALSE.
              IF(ISPCC.EQ.0 .OR. ISPCC.EQ.ISP(I))THEN
                LINCL = .TRUE.
              ELSEIF(ISPCC.LT.0)THEN
                IGRP = -ISPCC
                IULIM = ISPGRP(IGRP,1)+1
                DO 90 IG=2,IULIM
                IF(ISP(I) .EQ. ISPGRP(IGRP,IG))THEN
                  LINCL = .TRUE.
                  GO TO 91
                ENDIF
   90           CONTINUE
              ENDIF
   91         CONTINUE
              IF (LINCL .AND.
     >          (PRM(3).LE.DBH(I) .AND. DBH(I).LT.PRM(4))) THEN
                GOTO (191,192,193,194),IP
  191           CONTINUE
                XMORE=XMORE+PROB(I)*PRM(2)
                WK2(I)=0.
                GOTO 199
  192           CONTINUE
                XMORE=XMORE+(AMAX1(0.0,PROB(I)-WK2(I))*PRM(2))
                GOTO 199
  193           CONTINUE
                TEMP=AMAX1(WK2(I),(PROB(I)*PRM(2)))
                IF(TEMP .GT. WK2(I)) THEN
                  XMORE=XMORE+TEMP-WK2(I)
                ENDIF
                GOTO 199
  194           CONTINUE
                XMORE=XMORE+WK2(I)*PRM(2)
                WK2(I)=0.
                GOTO 199
              ENDIF
  199         CONTINUE
              IF(DEBUG)WRITE(JOSTND,*)'KPOINT,KBIG,ITRN,XMORE= ',
     &                 KPOINT,KBIG,ITRN,XMORE
              CREDIT=0.
              DO 201 I=1,ITRN
              IWORK1(I)=IND1(I)
              IF(KBIG .EQ. 1)THEN
                WORK3(I)=(-1.0)*
     &                  (DBH(I)+DG(I)/BRATIO(ISP(I),DBH(I),HT(I)))
              ELSE
                WORK3(I)=DBH(I)+DG(I)/BRATIO(ISP(I),DBH(I),HT(I))
              ENDIF
  201         CONTINUE
              CALL RDPSRT(ITRN,WORK3,IWORK1,.FALSE.)
              IF(DEBUG)WRITE(JOSTND,*)'DBH= ',(DBH(IG),IG=1,ITRN)
              IF(DEBUG)WRITE(JOSTND,*)'IWORK1= ',(IWORK1(IG),IG=1,ITRN)
              IF(DEBUG)WRITE(JOSTND,*)'WK2= ',(WK2(IG),IG=1,ITRN)
C
              IF(KBIG.GE.1 .AND. KPOINT.EQ.0)THEN
C
C  CONCENTRATION BY SIZE ONLY
C
                DO 310 I=1,ITRN
                IX=IWORK1(I)
                LINCL = .FALSE.
                IF(ISPCC.EQ.0 .OR. ISPCC.EQ.ISP(IX))THEN
                  LINCL = .TRUE.
                ELSEIF(ISPCC.LT.0)THEN
                  IGRP = -ISPCC
                  IULIM = ISPGRP(IGRP,1)+1
                  DO 92 IG=2,IULIM
                  IF(ISP(IX) .EQ. ISPGRP(IGRP,IG))THEN
                    LINCL = .TRUE.
                    GO TO 93
                  ENDIF
   92             CONTINUE
                ENDIF
   93           CONTINUE
                IF (LINCL .AND.
     >          (PRM(3).LE.DBH(IX) .AND. DBH(IX).LT.PRM(4))) THEN
                  TEMP=CREDIT+PROB(IX)-WK2(IX)
                  IF((TEMP .LE. XMORE).OR.
     >               (ABS(TEMP-XMORE).LT.0.0001))THEN
                    CREDIT=CREDIT+PROB(IX)-WK2(IX)
                    WK2(IX)=PROB(IX)
                  ELSE
                    WK2(IX)=WK2(IX)+XMORE-CREDIT
                    CREDIT=XMORE
                    GO TO 295
                  ENDIF
                ENDIF
  310           CONTINUE
                GO TO 295
C
              ELSEIF(KPOINT.EQ.1 .AND. KBIG.EQ.0)THEN
C
C  CONCENTRATION ON POINTS ONLY
C
              DO 205 J=1,IPTINV
              DO 204 I=1,ITRN
              IF(ITRE(I) .NE. J)GO TO 204
              LINCL = .FALSE.
              IF(ISPCC.EQ.0 .OR. ISPCC.EQ.ISP(I))THEN
                LINCL = .TRUE.
              ELSEIF(ISPCC.LT.0)THEN
                IGRP = -ISPCC
                IULIM = ISPGRP(IGRP,1)+1
                DO 94 IG=2,IULIM
                IF(ISP(I) .EQ. ISPGRP(IGRP,IG))THEN
                  LINCL = .TRUE.
                  GO TO 95
                ENDIF
   94           CONTINUE
              ENDIF
   95         CONTINUE
              IF (LINCL .AND.
     >          (PRM(3).LE.DBH(I) .AND. DBH(I).LT.PRM(4))) THEN
                TEMP=CREDIT+PROB(I)-WK2(I)
                IF((TEMP .LE. XMORE).OR.
     >             (ABS(TEMP-XMORE).LT.0.0001))THEN
                  CREDIT=CREDIT+PROB(I)-WK2(I)
                  WK2(I)=PROB(I)
                ELSE
                  WK2(I)=WK2(I)+XMORE-CREDIT
                  CREDIT=XMORE
                  GO TO 295
                ENDIF
              ENDIF
  204         CONTINUE
  205         CONTINUE
              GO TO 295
C
C  CONCENTRATION BY SIZE ON POINTS (POINTS HAVE PRIORITY, SO TREES
C  WILL BE KILLED BY SIZE ON ONE POINT BEFORE MOVING TO THE NEXT
C  POINT TO START WITH THE BIGGEST/SMALLEST TREES ON THAT POINT.
              ELSE
              DO 312 J=1,IPTINV
              DO 311 I=1,ITRN
              IX=IWORK1(I)
              IF(ITRE(IX) .NE. J)GO TO 311
              LINCL = .FALSE.
              IF(ISPCC.EQ.0 .OR. ISPCC.EQ.ISP(IX))THEN
                LINCL = .TRUE.
              ELSEIF(ISPCC.LT.0)THEN
                IGRP = -ISPCC
                IULIM = ISPGRP(IGRP,1)+1
                DO 96 IG=2,IULIM
                IF(ISP(IX) .EQ. ISPGRP(IGRP,IG))THEN
                  LINCL = .TRUE.
                  GO TO 97
                ENDIF
   96           CONTINUE
              ENDIF
   97         CONTINUE
              IF (LINCL .AND.
     >          (PRM(3).LE.DBH(IX) .AND. DBH(IX).LT.PRM(4))) THEN
                TEMP=CREDIT+PROB(IX)-WK2(IX)
                IF((TEMP .LE. XMORE).OR.
     >             (ABS(TEMP-XMORE).LT.0.0001))THEN
                  CREDIT=CREDIT+PROB(IX)-WK2(IX)
                  WK2(IX)=PROB(IX)
                ELSE
                  WK2(IX)=WK2(IX)+XMORE-CREDIT
                  CREDIT=XMORE
                  GO TO 295
                ENDIF
              ENDIF
  311         CONTINUE
  312         CONTINUE
              GO TO 295
              ENDIF
C
            ENDIF
C----------
C  NORMAL FIXMORT PROCESSING WHEN POINT OR SIZE CONCENTRATION
C  IS NOT IN EFFECT.
C----------
            DO 290 I=1,ITRN
              LINCL = .FALSE.
              IF(ISPCC.EQ.0 .OR. ISPCC.EQ.ISP(I))THEN
                LINCL = .TRUE.
              ELSEIF(ISPCC.LT.0)THEN
                IGRP = -ISPCC
                IULIM = ISPGRP(IGRP,1)+1
                DO 98 IG=2,IULIM
                IF(ISP(I) .EQ. ISPGRP(IGRP,IG))THEN
                  LINCL = .TRUE.
                  GO TO 99
                ENDIF
   98           CONTINUE
              ENDIF
   99         CONTINUE
            IF (LINCL .AND.
     >         (PRM(3).LE.DBH(I) .AND. DBH(I).LT.PRM(4))) THEN
               GOTO (610,620,630,640),IP
  610          CONTINUE
               WK2(I)=PROB(I)*PRM(2)
               GOTO 290
  620          CONTINUE
               WK2(I)=WK2(I)+(AMAX1(0.0,PROB(I)-WK2(I))*PRM(2))
               GOTO 290
  630          CONTINUE
               WK2(I)=AMAX1(WK2(I),(PROB(I)*PRM(2)))
               GOTO 290
  640          CONTINUE
               WK2(I)=AMIN1(PROB(I),WK2(I)*PRM(2))
               GOTO 290
            ENDIF
  290       CONTINUE
  295    CONTINUE
         IF(DEBUG)WRITE(JOSTND,*)'ITODO,WK2= ',
     &    ITODO,(WK2(IG),IG=1,ITRN)
         ENDIF
  300    CONTINUE
      ENDIF
      RETURN
C
      ENTRY MORCON
      RETURN
      END

