      SUBROUTINE MSBMRT(EFFMRT,T2KILL,DLO,DHI,MFLAG,DEBUG)
      IMPLICIT NONE
C----------
C BASE $Id$
C----------
C  THIS SUBROUTINE IS USED TO SIMULATE BREAKUP OF OVERMATURE STANDS
C  OF TREES BY INFLICTING ADDITIONAL MORTALITY IN THE SPECIFIED
C  DIAMETER RANGE.  MOVING ACROSS ALL TREE RECORDS IN THE DBH RANGE,
C  EITHER FROM ABOVE, BELOW, OR THROUGHOUT THE RANGE, IT KILLS A PROPORTION
C  OF THE TREES PER ACRE REPRESENTED BY A TREE RECORD UNTIL THE TARGET
C  NUMBER OF TREES IS REACHED. THE TARGET NUMBER OF TREES IS COMPUTED
C  FROM THE ALTERNATE MORTALITY EQUATION PROVIDED BY THE USER.
C  CALLED FROM **MORTS** IF THE ALTERNATE MORTALITY LOGIC IS BEING
C  INVOKED.
C  NOTE: IF THE MORTALITY EFFICIENCY IS SET TO LOW TO ACHIEVE THE TARGET
C        MORTALITY, IT GETS RECOMPUTED IN **MORTS** FOR THIS CYCLE AND 
C        PROCESSING CONTINUES.
C  NOTE: TO BE ABSOLUTELY CORRECT, THIS ROUTINE SHOULD ITERATIVELY 
C        SOLVE THE NUMBER OF TREES TO KILL WITH THE QMD AND THE MORTALITY
C        EFFICIENCY. HOWEVER, SINCE INVOKING THIS LOGIC REQUIRES A RESET
C        OF THE MORTALITY TRAJECTORY NEXT CYCLE ANYWAY, IT SEEMS 
C        SUFFICIENT TO JUST TAKE THIS 1 PASS APPROXIMATATION AND GO ON.
C        GED 6/10/09
C----------
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'ARRAYS.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
      INCLUDE 'PLOT.F77'
C
C
COMMONS
C----------
      LOGICAL DEBUG
      REAL T2KILL,XKILL,TEMKIL,SUMKIL,TEMP,EFFMRT,DLO,DHI,DBHEND,BARK,
     &     BRATIO 
      INTEGER K,IJ,JJ,MFLAG
C-----------
C PRINT STARTING DEBUG IF CALLED FOR
C-----------
      IF(DEBUG) WRITE(JOSTND,10)ICYC,T2KILL,EFFMRT
   10 FORMAT(' ENTERING SUBROUTINE MSBMRT  CYCLE =',I5,'  TREES TO KILL 
     &= ',F9.4,'  MORTALITY EFFICIENCY =',F9.4)
      IF(DEBUG) WRITE(JOSTND,11)DLO,DHI,MFLAG
   11 FORMAT(' ENTERING SUBROUTINE MSBMRT  LOWER DBH =',F7.3,'  UPPER DB 
     &H =',F7.3,'  MORTALITY FLAG = ',I4)
      IF(DEBUG)WRITE(JOSTND,15)ITRN,(WK2(JJ),JJ=1,ITRN)
   15 FORMAT(' ENTERING MSBMRT ITRN,WK2= ',I10,/,
     & 97(1H ,14F9.4,/))
      IF(DEBUG)WRITE(JOSTND,20)ITRN,(IND(JJ),JJ=1,ITRN)
   20 FORMAT(' IN MSBMRT ITRN,IND =',I6,/,86(1H ,32I4,/))
C----------
C  ENTER THE LOOP FOR SPECIES DEPENDENT VARIABLES
C  NOTE, IND() CONTAINS THE DIAMETER SORTED INDICIES; IND(1)=INDEX OF
C  THE LARGEST DIAMETER TREE; IND(ITRN)=INDEX OF SMALLEST DIAMETER TREE
C----------
      TEMP=0.
      TEMKIL=0.
      SUMKIL=0.
      IF(MFLAG.EQ.1 .OR. MFLAG.EQ.3)THEN
        DO K=1,ITRN
        IJ=IND(K)
        BARK=BRATIO(ISP(IJ),DBH(IJ),HT(IJ))
        DBHEND=DBH(IJ)+(DG(IJ)/BARK)*(FINT/10.0)
        IF(DBHEND.GE.DLO .AND. DBHEND.LT.DHI)THEN
          XKILL=(PROB(IJ)-WK2(IJ))*EFFMRT
          TEMP=PROB(IJ)-WK2(IJ)-XKILL
          IF(TEMP .LT. 0.00001)XKILL=PROB(IJ)-WK2(IJ)
          IF(XKILL .LT. 0.)XKILL=0.
          TEMKIL=SUMKIL+XKILL
          IF(TEMKIL .GT. T2KILL)XKILL=T2KILL-SUMKIL
          SUMKIL=SUMKIL+XKILL
          WK2(IJ)=WK2(IJ)+XKILL
          IF(DEBUG)WRITE(JOSTND,30)IJ,DBHEND,PROB(IJ),WK2(IJ),XKILL,
     &    SUMKIL,T2KILL,EFFMRT 
   30     FORMAT(' IN MSBMRT13 IJ,DBH,PROB,WK2,XKILL,SUMKIL,T2KILL,',
     &    'EFFMRT= ',/,1H ,I5,7F12.5) 
          IF(SUMKIL .GE. T2KILL)GO TO 50
        ENDIF
        ENDDO
      ELSE
        DO K=ITRN,1,-1
        IJ=IND(K)
        BARK=BRATIO(ISP(IJ),DBH(IJ),HT(IJ))
        DBHEND=DBH(IJ)+(DG(IJ)/BARK)*(FINT/10.0)
        IF(DBHEND.GE.DLO .AND. DBHEND.LT.DHI)THEN
          XKILL=(PROB(IJ)-WK2(IJ))*EFFMRT
          TEMP=PROB(IJ)-WK2(IJ)-XKILL
          IF(TEMP .LT. 0.00001)XKILL=PROB(IJ)-WK2(IJ)
          IF(XKILL .LT. 0.)XKILL=0.
          TEMKIL=SUMKIL+XKILL
          IF(TEMKIL .GT. T2KILL)XKILL=T2KILL-SUMKIL
          SUMKIL=SUMKIL+XKILL
          WK2(IJ)=WK2(IJ)+XKILL
          IF(DEBUG)WRITE(JOSTND,40)IJ,DBHEND,PROB(IJ),WK2(IJ),XKILL,
     &    SUMKIL,T2KILL,EFFMRT 
   40     FORMAT(' IN MSBMRT2 IJ,DBH,PROB,WK2,XKILL,SUMKIL,T2KILL,',
     &    'EFFMRT= ',/,1H ,I5,7F12.5) 
          IF(SUMKIL .GE. T2KILL)GO TO 50
        ENDIF
        ENDDO
      ENDIF
C
   50 CONTINUE
      IF(DEBUG)WRITE(JOSTND,9010)ITRN,(WK2(JJ),JJ=1,ITRN)
 9010 FORMAT(' LEAVING MSBMRT 9010 FORMAT ITRN,WK2= ',I10,/,
     & 97(1H ,14F9.4,/))
      IF(DEBUG)WRITE(JOSTND,90)ICYC
   90 FORMAT(' LEAVING SUBROUTINE MSBMRT  CYCLE =',I5)
C
      RETURN
      END
