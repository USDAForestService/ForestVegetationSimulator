      SUBROUTINE OPEVAL (IREFN,IRC)
      IMPLICIT NONE
C----------
C  $Id$
C----------
C
C     OPTION PROCESSING ROUTINE - NL CROOKSTON - JULY 1988 - MOSCOW
C
C     OPEVAL IS USED TO EVALUATE AN EXPRESSION ASSOCIATED WITH AN
C     ACTIVITY AND LOAD THE RESULTS INTO THE PARMS ARRAY.
C
C     IREFN = THE POINTER TO THE ACTIVITY.
C     IRC   = 0   ALL WENT OK
C             1   ERROR IN COMPUTATION OR PARMS IS FULL.
C
COMMONS
C
C
      INCLUDE 'PRGPRM.F77'
C
C
      INCLUDE 'OPCOM.F77'
C
C
      INCLUDE 'CONTRL.F77'
C
C
COMMONS
C
      INTEGER IRC,IREFN,J1,NP,I
      LOGICAL LDEB
      DATA LDEB/.FALSE./
C
C     IS DEBUG WANTED.
C
      CALL DBCHK (LDEB,'OPEVAL',6,ICYC)
C
C     IF AT CYCLE ZERO, THEN DO NOT EVALUATE THE EXPRESSION.
C
      IF (ICYC.EQ.0) THEN
         IRC=-1
         RETURN
      ENDIF
C
C     EVALUATE THE EXPRESSION.
C
      J1=-IACT(IREFN,2)
      CALL ALGEVL (LREG,MXLREG,XREG,MXXREG,IEVCOD(J1),MAXCOD-J1+1,IY(1),
     >             IY(ICYC),LDEB,JOSTND,IRC)
      IF (LDEB) THEN
         WRITE (JOSTND,'(/'' IN OPEVAL: IRC,XREG(1),LREG(1)='',I3,F9.2,
     >          L3)') IRC,XREG(1),LREG(1)
         NP=IFIX(XREG(1))
         IF (NP.GT.0 .AND. NP.LT.50) WRITE (JOSTND,'('' XREG LREG...''/
     >      ((1X,10(F9.2,L1))))') (XREG(I),LREG(I),I=1,NP+1)
      ENDIF
C
C     IF THE RETURN CODE IS ZERO, THEN: STORE THE PARAMETERS IN PARMS
C     FOR THE ACTIVITY AND SET THE POINTERS TO THE LOCATION IN PARMS.
C
      IF (IRC.EQ.0) THEN
         NP=IFIX(XREG(1))
C
C        IF THERE IS ENOUGH ROOM IN PARMS, STORE THE RESULTS.
C
         IF (IMPL+NP-1.LE.ITOPRM) THEN
            IACT(IREFN,2)=IMPL
            DO 20 I=2,NP+1
            PARMS(IMPL)=XREG(I)
            IMPL=IMPL+1
   20       CONTINUE
            IACT(IREFN,3)=IMPL-1
         ELSE
C
C           DELETE THE ACTIVITY AND ISSUE ERROR MSG.
C
            IRC=1
            IACT(IREFN,2)=0
            IACT(IREFN,3)=0
            IACT(IREFN,4)=-1
            CALL ERRGRO (.TRUE.,10)
         ENDIF
      ELSE
C
C        DELETE THE ACTIVITY AND ISSUE AN ERROR MSG.
C
         IACT(IREFN,2)=0
         IACT(IREFN,3)=0
         IACT(IREFN,4)=-1
         CALL ERRGRO (.TRUE.,21)
      ENDIF
      RETURN
      END
