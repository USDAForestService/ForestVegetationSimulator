      SUBROUTINE BFREAD (BUFFER,IPNT,ILIMIT,VARBLE,ILEN,IBEGIN)
      IMPLICIT NONE
C----------
C  $Id$
C----------
C
C     READ A VARIABLE FROM A BUFFER.
C
C     PART OF THE PARALLEL PROCESSING EXTENSION OF PROGNOSIS SYSTEM.
C
C        BUFFER - A SINGLE DIMENSIONAL WORK ARRAY USED AS A PRINT
C                 BUFFER.
C        IPNT   - POINTER TO THE CURRENT WORD IN THE BUFFER.
C                 WHEN READING THE FIRST RECORD IN A SERIES,
C                 IPNT IS SET TO THE END OF THE BUFFER IN ORDER
C                 BE RESET TO ZERO ON THE FIRST READ.
C        ILIMIT - END OF BUFFER.  MAX NUMBER OF WORDS WHICH CAN
C                 BE STORED IN BUFFER.
C        VARBLE - THE ARRAY WHICH IS READ FROM BUFFER.
C        ILEN   - THE NUMBER OF WORDS IN VARBLE.
C        IBEGIN - SIGNAL DESCRIBING WHETHER WE ARE BEGINNING A
C                 SERIES OF CALLS TO BFREAD, IN THE MIDDLE OF A
C                 SERIES OF CALLS, OR AT THE END OF A SERIES OF CALLS.
C                 1 - THIS IS THE FIRST CALL IN A GROUP TO BFREAD.
C                     THE BUFFER COUNTER IS SET FULL, SO WE WILL
C                     BEGIN READING FROM A NEW RECORD.
C                 2 - THIS IS A MIDDLE CALL TO BFREAD.
C                 3 - THIS IS THE LAST CALL TO BFREAD.
C
      REAL BUFFER (*), VARBLE (*)
      INTEGER IBEGIN,ILEN,ILIMIT,IPNT,IWORD,I
      IF (IBEGIN.EQ.1) IPNT=ILIMIT
      IF (ILEN.LT.1) GOTO 1000
      DO 900 IWORD=1,ILEN
      IF (IPNT.LT.ILIMIT) GOTO 500
      CALL DSTASH (BUFFER,IPNT)
      call fvsGetRtnCode(I)
      if (I.ne.0) return
      IPNT=0
  500 CONTINUE
      IPNT=IPNT+1
      VARBLE (IWORD)=BUFFER (IPNT)
  900 CONTINUE
 1000 CONTINUE
      RETURN
      END

      SUBROUTINE BFWRIT (BUFFER,IPNT,ILIMIT,VARBLE,ILEN,IBEGIN)
      IMPLICIT NONE
C----------
C  **BFWRIT--PPBASE    DATE OF LAST REVISION:  07/31/08
C----------
C
C     STORE A VARIABLE IN A BUFFER.
C
C     CALLED FROM:
C
C       PUTSTD - STORE A STAND ON DIRECT ACCESS FILE IDAIO.
C       MSTRPT - STORE THE MASTER SCHEDULED OPTION LIST.
C       PPAUSE - PAUSE THE PARALLEL PROCESSINT EXTENSION BY
C                WRITING ITS DATA TO DIRECT ACCESS FILE IDAIO.
C
C     SUBROUTINES CALLED:
C
C       STASH  - STORE A RECORD IN THE DIRECT ACCESS FILE IDAIO.
C
C     PARAMETERS:
C
C        BUFFER - A SINGLE DIMENSIONAL WORK ARRAY USED AS A PRINT
C                 BUFFER.
C        IPNT   - POINTER TO THE CURRENT WORD IN THE BUFFER.
C                 WHEN READING THE FIRST RECORD IN A SERIES,
C                 IPNT IS SET TO THE END OF THE BUFFER IN ORDER
C                 BE RESET TO ZERO ON THE FIRST READ.
C        ILIMIT - END OF BUFFER.  MAX NUMBER OF WORDS WHICH CAN
C                 BE STORED IN BUFFER.
C        VARBLE - THE ARRAY WHICH IS WRITTEN TO THE BUFFER.
C        ILEN   - THE NUMBER OF WORDS IN VARBLE.
C        IBEGIN - SIGNAL DESCRIBING WHETHER WE ARE BEGINNING A
C                 SERIES OF CALLS TO BFWRIT, IN THE MIDDLE OF A
C                 SERIES OF CALLS, OR AT THE END OF A SERIES OF CALLS.
C
C                 1 - THIS IS THE FIRST CALL IN A GROUP TO BFWRIT.
C                     THE BUFFER IS SET EMPTY, SO WE WILL
C                     BEGIN WRITING TO A NEW RECORD.
C                 2 - THIS IS A MIDDLE CALL TO BFWRIT.
C                 3 - THIS IS THE LAST CALL TO BFWRIT, WHICH
C                     DUMPS THE CONTENTS OF THE BUFFER, AND
C                     FINALIZES THE WRITE.
C
      REAL BUFFER (*), VARBLE (*)
      INTEGER IBEGIN,ILEN,ILIMIT,IPNT,IWORD
      IF (IBEGIN.EQ.1) IPNT=0
  100 CONTINUE
      IF (ILEN.LT.1) GOTO 1000
      DO 900 IWORD=1,ILEN
      IF (IPNT.LT.ILIMIT) GOTO 500
      CALL STASH (BUFFER,ILIMIT)
      IPNT=0
  500 CONTINUE
      IPNT=IPNT+1
      BUFFER (IPNT)=VARBLE (IWORD)
  900 CONTINUE
 1000 CONTINUE
      IF (IBEGIN.EQ.3) CALL STASH (BUFFER,ILIMIT)
      RETURN
      END

      SUBROUTINE CHREAD (CBUFF,IPNT,LNCBUF,CVARBL,IBEGIN)
      IMPLICIT NONE
C----------
C  **CHREAD  DATE OF LAST REVISION:  07/31/08
C----------
C
      INTEGER IBEGIN,IPNT,LNCBUF,I
      CHARACTER CBUFF(LNCBUF)
      CHARACTER CVARBL
      IF (IBEGIN.EQ.1) IPNT=LNCBUF
      IF (IPNT.LT.LNCBUF) GOTO 500
      CALL CHDSTH (CBUFF,IPNT)
      call fvsGetRtnCode(I)
      if (I.ne.0) return
      IPNT=0
  500 CONTINUE
      IPNT=IPNT+1
      CVARBL=CBUFF(IPNT)
      RETURN
      END

      SUBROUTINE CHWRIT (CBUFF,IPNT,LNCBUF,CVARBL,IBEGIN)
      IMPLICIT NONE
C----------
C  **CHWRIT  DATE OF LAST REVISION:  07/31/08
C----------
C
      INTEGER IBEGIN,IPNT,LNCBUF,I
      CHARACTER CBUFF(LNCBUF)
      CHARACTER CVARBL
      IF (IBEGIN.EQ.1) IPNT=0
      IF (IPNT.GE.LNCBUF) THEN
         CALL CHSTSH (CBUFF,LNCBUF)
         IPNT=0
      ENDIF
      IPNT=IPNT+1
      CBUFF(IPNT)=CVARBL
      IF (IBEGIN.EQ.3) THEN
         IF (IPNT.LT.LNCBUF) THEN
            DO I=IPNT+1,LNCBUF
               CBUFF(I)=' '
            ENDDO
         ENDIF
         CALL CHSTSH (CBUFF,LNCBUF)
      ENDIF
      RETURN
      END


      SUBROUTINE LFREAD(BUFFER,IPNT,ILIMIT,LVAR,ILEN,IBEGIN)
      IMPLICIT NONE
C----------
C  **LFREAD--PPBASE    DATE OF LAST REVISION:  07/31/08
C----------
C
      LOGICAL LVAR(*),LSTOR
      REAL BUFFER(*),RSTOR
      INTEGER IBEGIN,ILEN,ILIMIT,IPNT,IWORD,I
      EQUIVALENCE (LSTOR,RSTOR)
      IF (IBEGIN.EQ.1) IPNT=ILIMIT
      IF (ILEN.LT.1) GOTO 1000
      DO 900 IWORD=1,ILEN
      IF (IPNT.LT.ILIMIT) GOTO 500
      CALL DSTASH (BUFFER,IPNT)
      call fvsGetRtnCode(I)
      if (I.ne.0) return
      IPNT=0
  500 CONTINUE
      IPNT=IPNT+1
      RSTOR=BUFFER(IPNT)
      LVAR(IWORD)=LSTOR
  900 CONTINUE
 1000 CONTINUE
      RETURN
      END


      SUBROUTINE LFWRIT (BUFFER,IPNT,ILIMIT,LVAR,ILEN,IBEGIN)
      IMPLICIT NONE
C----------
C  **LFWRIT--PPBASE    DATE OF LAST REVISION:  07/31/08
C----------
C
      LOGICAL LVAR(*),LSTOR
      REAL BUFFER(*),RSTOR
      INTEGER IBEGIN,ILEN,ILIMIT,IPNT,IWORD
      EQUIVALENCE (RSTOR,LSTOR)
      IF (IBEGIN.EQ.1) IPNT=0
  100 CONTINUE
      IF (ILEN.LT.1) GOTO 1000
      DO 900 IWORD=1,ILEN
      IF (IPNT.LT.ILIMIT) GOTO 500
      CALL STASH (BUFFER,ILIMIT)
      IPNT=0
  500 CONTINUE
      LSTOR=LVAR(IWORD)
      IPNT=IPNT+1
      BUFFER(IPNT)=RSTOR
  900 CONTINUE
 1000 CONTINUE
      IF (IBEGIN.EQ.3) CALL STASH (BUFFER,ILIMIT)
      RETURN
      END



      SUBROUTINE IFREAD(BUFFER,IPNT,ILIMIT,IVAR,ILEN,IBEGIN)
      IMPLICIT NONE
C----------
C  **IFREAD--PPBASE   DATE OF LAST REVISION:  07/31/08
C----------
C
      REAL BUFFER(*)
      INTEGER IVAR(*)
      INTEGER IBEGIN,ILEN,ILIMIT,IPNT,IWORD,I
      REAL RSTOR
      INTEGER*4 ISTOR
      EQUIVALENCE (RSTOR,ISTOR)
      IF (IBEGIN.EQ.1) IPNT=ILIMIT
      IF (ILEN.LT.1) GOTO 1000
      DO 900 IWORD=1,ILEN
      IF (IPNT.LT.ILIMIT) GOTO 500
      CALL DSTASH (BUFFER,IPNT)
      call fvsGetRtnCode(I)
      if (I.ne.0) return
      IPNT=0
  500 CONTINUE
      IPNT=IPNT+1
      RSTOR=BUFFER(IPNT)
      IVAR(IWORD)=ISTOR
  900 CONTINUE
 1000 CONTINUE
      RETURN
      END

      SUBROUTINE IFWRIT (BUFFER,IPNT,ILIMIT,IVAR,ILEN,IBEGIN)
      IMPLICIT NONE
C----------
C  **IFWRIT--PPBASE    DATE OF LAST REVISION:  07/31/08
C----------
C
      REAL BUFFER(*),RSTOR
      INTEGER IVAR(*),IBEGIN,ILEN,ILIMIT,IPNT,IWORD
      INTEGER*4 ISTOR
      EQUIVALENCE (RSTOR,ISTOR)
      IF (IBEGIN.EQ.1) IPNT=0
  100 CONTINUE
      IF (ILEN.LT.1) GOTO 1000
      DO 900 IWORD=1,ILEN
      IF (IPNT.LT.ILIMIT) GOTO 500
      CALL STASH (BUFFER,ILIMIT)
      IPNT=0
  500 CONTINUE
      ISTOR=IVAR(IWORD)
      IPNT=IPNT+1
      BUFFER(IPNT)=RSTOR
  900 CONTINUE
 1000 CONTINUE
      IF (IBEGIN.EQ.3) CALL STASH (BUFFER,ILIMIT)
      RETURN
      END
